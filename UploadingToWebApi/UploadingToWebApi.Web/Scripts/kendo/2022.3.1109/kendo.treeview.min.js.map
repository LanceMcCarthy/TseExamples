{"version":3,"file":"kendo.treeview.min.js","names":["factory","define","amd","$","undefined$1","TreeView","subGroup","nodeContents","nodeIcon","spriteRe","kendo","window","ui","data","extend","template","isArray","Array","Widget","HierarchicalDataSource","keys","NS","TEMP_NS","SELECT","CHECK","NAVIGATE","CHANGE","ERROR","CHECKED","INDETERMINATE","DRAGSTART","DRAG","DROP","DRAGEND","DATABOUND","ITEMSLOADED","LOADCOMPLETED","REQUESTEND","CLICK","UNDEFINED","KSTATEHOVER","KTREEVIEW","NODE","STRING","ARIA_CHECKED","ARIA_SELECTED","ARIA_DISABLED","ARIA_EXPANDED","ARIA_ACTIVEDESCENDANT","ARIA_BUSY","DISABLED","bindings","text","url","spriteCssClass","imageUrl","isDomElement","o","HTMLElement","nodeType","nodeName","contentChild","filter","node","result","children","length","templateNoWith","code","useWithBlock","checkboxes","find","insertAction","indexOffset","nodeData","referenceNode","parentNode","group","closest","parent","is","this","_dataSourceMove","dataSource","model","referenceItem","dataItem","referenceNodeIndex","indexOf","index","_insert","updateNodeHtml","wrapper","toggleButton","checkbox","innerWrapper","hasClass","prependTo","remove","removeAttr","appendTo","append","eq","addClass","container","tmp","toLowerCase","nextSibling","nodeValue","trim","test","className","insertBefore","firstChild","appendChild","moveContents","DataBoundWidget","init","element","options","inferred","list","that","hasDataSource","loadOnDemand","prototype","call","_dataSourceUids","_animation","_accessors","_templates","root","_wrapper","_group","_applyCssClasses","_tabindex","attr","_dataSource","_attachEvents","_dragging","_syncHtmlAndDataSource","autoBind","_progress","fetch","_attemptLoadCompleted","bind","checkChildren","updateIndeterminate","id","_ariaId","format","guid","notify","clickableItems","MOUSEENTER","_clickHandler","_click","on","e","preventDefault","removeClass","_toggleButtonClick","_keydown","_keypress","_focus","_blur","_mousedown","_checkboxChange","_retryRequest","target","focus","i","item","uid","itemCheckbox","view","uidAttr","expandedAttr","checkboxesEnabled","items","expanded","hasChildren","checked","prop","next","animationOptions","animation","hasCollapseAnimation","collapse","expand","reverse","effects","hide","enabled","dragAndDrop","dragging","widget","HierarchicalDragAndDrop","reorderable","$angular","autoScroll","allowedContainers","itemSelector","hintText","_hintText","contains","source","destination","dropHintContainer","itemFromTarget","content","first","last","dropPositionFrom","dropHint","prevAll","dragstart","trigger","sourceNode","drag","originalEvent","dropTarget","pageY","pageX","statusClass","status","setStatusClass","setStatus","drop","navigationTarget","_tempPreventNavigation","destinationNode","valid","setValid","state","dropPosition","position","dragend","triggerDragEnd","current","insertAfter","destroy","ev","off","templates","dragClue","treeview","fieldAccessor","_fieldAccessor","_checkboxes","setAttributes","attributes","hasOwnProperty","wrapperCssClass","firstLevel","cssClass","groupLength","textClass","isLink","selected","toggleButtonClass","groupAttributes","groupCssClass","itemContent","itemElement","loading","retry","setDataSource","one","_bindDataSource","_refreshHandler","refresh","_errorHandler","_error","_loadCompletedHandler","_loadCompleted","_requestEndHandler","_dsRequestEnd","_loadedNodes","setTimeout","type","_loadCompletedFired","concat","nodes","_unbindDataSource","unbind","silentRead","fields","field","create","recursiveRead","_initChildren","events","name","duration","messages","requestFailed","dataTextField","size","textField","fieldName","fieldBindings","count","map","x","expr","join","setOptions","fn","_trigger","eventName","_setChecked","datasource","value","isFunction","_setCheckedValue","_setIndeterminate","siblings","all","indeterminate","subnodes","_bubbleIndeterminate","skipDownward","_skip","set","isChecked","_preventChange","currentTarget","toggle","browser","support","msie","edge","_clickTarget","_focusable","select","clickTarget","touch","_nextVisible","scrollContainer","containers","offsets","documentElement","document","scrollHeight","clientHeight","push","scrollTop","focusElement","_enabled","skipSelf","wrapperRe","itemRe","_expanded","nextParent","_previousVisible","lastChild","prev","key","keyCode","focused","rtl","isRtl","RIGHT","LEFT","DOWN","UP","HOME","END","ENTER","SPACEBAR","matchToFocus","focusedNode","get","_match","clearTimeout","_matchTimer","_matchNextByText","startIndex","contents","href","wrap","_getSelectedNode","groupElement","css","_nodes","groupData","each","_updateNodeClasses","defaultTemplate","html","renderCheckBox","rounded","replace","textWrap","_processNodes","callback","getByUid","_dataItem","_insertNode","insertCallback","collapsed","childrenData","updatedGroupLength","nodeHtml","_renderItem","angular","elements","_renderGroup","_updateNodes","nodeWrapper","isCollapsed","context","render","setCheckedState","findByUid","toggleClass","end","_toggle","ns","_appendItems","dataItems","viewItems","rootItems","_refreshChildren","child","empty","_refreshRoot","groupHtml","parentElement","_angularItems","action","level","bubble","_remove","_loaded","load","retryHtml","loaded","enable","arguments","_current","_updateActiveDescendant","direction","height","kendoStop","kendoAnimate","reset","complete","force","showProgress","loadingText","Math","min","_objectOrSelf","referenceDataItem","destTreeview","destDataSource","loadPromise","Deferred","resolve","promise","_toObservableData","obj","jQuery","ObservableArray","toJSON","splice","apply","success","loadModel","inserted","done","max","add","noop","keepData","prevSibling","detach","findByText","getAttribute","expandPath","path","nodeIds","slice","nodeElement","then","proceed","shift","_parentIds","parents","unshift","expandTo","Node","r","renderItems","len","cssProperties","registerPrefix","plugin"],"sources":["kendo.treeview.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.data', 'kendo.treeview.draganddrop', 'kendo.html.input'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"treeview\",\n        name: \"TreeView\",\n        category: \"web\",\n        description: \"The TreeView widget displays hierarchical data in a traditional tree structure,with support for interactive drag-and-drop operations.\",\n        depends: [ \"data\", \"html.input\" ],\n        features: [{\n            id: \"treeview-dragging\",\n            name: \"Drag & Drop\",\n            description: \"Support for drag & drop\",\n            depends: [ \"treeview.draganddrop\" ]\n        }]\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            data = kendo.data,\n            extend = $.extend,\n            template = kendo.template,\n            isArray = Array.isArray,\n            Widget = ui.Widget,\n            HierarchicalDataSource = data.HierarchicalDataSource,\n            keys = kendo.keys,\n            NS = \".kendoTreeView\",\n            TEMP_NS = \".kendoTreeViewTemp\",\n            SELECT = \"select\",\n            CHECK = \"check\",\n            NAVIGATE = \"navigate\",\n            EXPAND = \"expand\",\n            CHANGE = \"change\",\n            ERROR = \"error\",\n            CHECKED = \"checked\",\n            INDETERMINATE = \"indeterminate\",\n            COLLAPSE = \"collapse\",\n            DRAGSTART = \"dragstart\",\n            DRAG = \"drag\",\n            DROP = \"drop\",\n            DRAGEND = \"dragend\",\n            DATABOUND = \"dataBound\",\n            ITEMSLOADED = \"itemsLoaded\",\n            LOADCOMPLETED = \"loadCompleted\",\n            REQUESTEND = \"requestEnd\",\n            CLICK = \"click\",\n            KENDOKEYDOWN = \"kendoKeydown\",\n            UNDEFINED = \"undefined\",\n            KSTATEHOVER = \"k-hover\",\n            KTREEVIEW = \"k-treeview\",\n            VISIBLE = \":visible\",\n            NODE = \".k-item\",\n            STRING = \"string\",\n            ARIA_CHECKED = \"aria-checked\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ARIA_BUSY = \"aria-busy\",\n            DISABLED = \"k-disabled\",\n            TreeView,\n            subGroup, nodeContents, nodeIcon,\n            spriteRe,\n            bindings = {\n                text: \"dataTextField\",\n                url: \"dataUrlField\",\n                spriteCssClass: \"dataSpriteCssClassField\",\n                imageUrl: \"dataImageUrlField\"\n            },\n            isJQueryInstance = function(obj) {\n                return (obj instanceof kendo.jQuery) || (window.jQuery && obj instanceof window.jQuery);\n            },\n            isDomElement = function(o) {\n                return (\n                    typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n                    o && typeof o === \"object\" && o.nodeType === 1 && typeof o.nodeName === STRING\n                );\n            };\n\n        function contentChild(filter) {\n            return function(node) {\n                var result = node.children(\".k-animation-container\");\n\n                if (!result.length) {\n                    result = node;\n                }\n\n                return result.children(filter);\n            };\n        }\n\n        function templateNoWith(code) {\n            return kendo.template(code, { useWithBlock: false });\n        }\n\n        subGroup = contentChild(\".k-group\");\n        nodeContents = contentChild(\".k-group,.k-content\");\n        nodeIcon = function(node) {\n            return node.children(\"div\").find(\".k-treeview-toggle > .k-icon\");\n        };\n\n        function checkboxes(node) {\n             return node.find(\".k-checkbox-wrapper:first input[type=checkbox]\");\n        }\n\n        function insertAction(indexOffset) {\n            return function(nodeData, referenceNode) {\n                referenceNode = referenceNode.closest(NODE);\n\n                var group = referenceNode.parent(),\n                    parentNode;\n\n                if (group.parent().is(\"li\")) {\n                    parentNode = group.parent();\n                }\n\n                return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model) {\n                    var referenceItem = this.dataItem(referenceNode);\n                    var referenceNodeIndex = referenceItem && referenceNode.parent().children().length !== referenceItem.parent().length ? referenceItem.parent().indexOf(referenceItem) : referenceNode.index();\n\n                    return this._insert(dataSource.data(), model, referenceNodeIndex + indexOffset);\n                });\n            };\n        }\n\n        spriteRe = /k-sprite/;\n\n        function moveContents(node, container) {\n            var tmp;\n\n            while (node && node.nodeName.toLowerCase() != \"ul\") {\n                tmp = node;\n                node = node.nextSibling;\n\n                if (tmp.nodeType == 3) {\n                    tmp.nodeValue = kendo.trim(tmp.nodeValue);\n                }\n\n                if (spriteRe.test(tmp.className)) {\n                    container.insertBefore(tmp, container.firstChild);\n                } else {\n                    container.appendChild(tmp);\n                }\n            }\n        }\n\n        function updateNodeHtml(node) {\n            var wrapper = node.children(\"div\"),\n                group = node.children(\"ul\"),\n                toggleButton = wrapper.find(\".k-treeview-toggle > .k-icon\"),\n                checkbox = node.children(\"input[type=checkbox]\"),\n                innerWrapper = wrapper.children(\".k-in\");\n\n            if (node.hasClass(\"k-treeview\")) {\n                return;\n            }\n\n            if (!wrapper.length) {\n                wrapper = $(\"<div />\").prependTo(node);\n            }\n\n            if (!toggleButton.length && group.length) {\n                toggleButton = $(\"<span class='k-treeview-toggle'><span class='k-icon' /></span>\").prependTo(wrapper);\n            } else if (!group.length || !group.children().length) {\n                toggleButton.parent().remove();\n                group.remove();\n                node.removeAttr(ARIA_EXPANDED);\n            }\n\n            if (checkbox.length) {\n                $(\"<span class='k-checkbox-wrapper' />\").appendTo(wrapper).append(checkbox);\n            }\n\n            if (!innerWrapper.length) {\n                innerWrapper = node.children(\"a\").eq(0).addClass(\"k-in k-link\");\n\n                if (!innerWrapper.length) {\n                    innerWrapper = $(\"<span class='k-treeview-leaf k-in' />\");\n                }\n\n                innerWrapper.appendTo(wrapper);\n\n                if (wrapper.length) {\n                    moveContents(wrapper[0].nextSibling, innerWrapper[0]);\n                }\n            }\n        }\n\n        TreeView = kendo.ui.DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this,\n                    inferred = false,\n                    hasDataSource = options && !!options.dataSource,\n                    list;\n\n                if (isArray(options)) {\n                    options = { dataSource: options };\n                }\n\n                if (options && typeof options.loadOnDemand == UNDEFINED && isArray(options.dataSource)) {\n                    options.loadOnDemand = false;\n                }\n\n                Widget.prototype.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                that._dataSourceUids = {};\n\n                list = (element.is(\"ul\") && element) ||\n                       (element.hasClass(KTREEVIEW) && element.children(\"ul\"));\n\n                inferred = !hasDataSource && list.length;\n\n                if (inferred) {\n                    options.dataSource.list = list;\n                }\n\n                that._animation();\n\n                that._accessors();\n\n                that._templates();\n\n                // render treeview if it's not already rendered\n                if (!element.hasClass(KTREEVIEW)) {\n                    that._wrapper();\n\n                    if (list) {\n                        that.root = element;\n                        that._group(that.wrapper);\n                    }\n                } else {\n                    // otherwise just initialize properties\n                    that.wrapper = element;\n                    that.root = element.children(\"ul\").eq(0);\n                }\n\n                that._applyCssClasses();\n                that._tabindex();\n\n                that.wrapper.attr(\"role\", \"tree\");\n                that.wrapper.find(\">ul\").attr(\"role\", \"none\");\n\n                that._dataSource(inferred);\n\n                that._attachEvents();\n\n                that._dragging();\n\n                if (!inferred) {\n                    if (options.autoBind) {\n                        that._progress(true);\n                        that.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n                    }\n                } else {\n                    that._syncHtmlAndDataSource();\n                }\n\n                if (options.checkboxes && options.checkboxes.checkChildren) {\n                    that.updateIndeterminate();\n                }\n\n                if (that.element[0].id) {\n                    that._ariaId = kendo.format(\"{0}_tv_active\", that.element[0].id);\n                } else {\n                    that._ariaId = kendo.guid() + \"_tv_active\";\n                }\n\n                kendo.notify(that);\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    clickableItems = \".k-in:not(.k-selected,.k-disabled)\",\n                    MOUSEENTER = \"mouseenter\";\n\n                that._clickHandler = that._click.bind(that);\n\n                that.wrapper\n                    .on(MOUSEENTER + NS, \".k-in.k-selected\", function(e) { e.preventDefault(); })\n                    .on(MOUSEENTER + NS, clickableItems, function() { $(this).addClass(KSTATEHOVER); })\n                    .on(\"mouseleave\" + NS, clickableItems, function() { $(this).removeClass(KSTATEHOVER); })\n                    .on(CLICK + NS, clickableItems, that._clickHandler)\n                    .on(\"dblclick\" + NS, \".k-in:not(.k-disabled)\", that._toggleButtonClick.bind(that))\n                    .on(CLICK + NS, \".k-i-expand,.k-i-collapse\", that._toggleButtonClick.bind(that))\n                    .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                    .on(\"keypress\" + NS, that._keypress.bind(that))\n                    .on(\"focus\" + NS, that._focus.bind(that))\n                    .on(\"blur\" + NS, that._blur.bind(that))\n                    .on(\"mousedown\" + NS, \".k-in,.k-checkbox-wrapper :checkbox,.k-i-expand,.k-i-collapse\", that._mousedown.bind(that))\n                    .on(\"change\" + NS, \".k-checkbox-wrapper :checkbox\", that._checkboxChange.bind(that))\n                    .on(\"click\" + NS, \".k-request-retry\", that._retryRequest.bind(that))\n                    .on(\"click\" + NS, \".k-link.k-disabled\", function(e) { e.preventDefault(); })\n                    .on(\"click\" + NS, function(e) {\n                        var target = $(e.target);\n\n                        if (!target.is(\":kendoFocusable\") && !target.find(\"input,select,textarea,button,object\").is(\":kendoFocusable\")) {\n                            that.focus();\n                        }\n                    });\n            },\n\n            _syncHtmlAndDataSource: function(root, dataSource) {\n                root = root || this.root;\n                dataSource = dataSource || this.dataSource;\n                var data = dataSource.view(),\n                    uidAttr = kendo.attr(\"uid\"),\n                    expandedAttr = kendo.attr(\"expanded\"),\n                    checkboxesEnabled = this.options.checkboxes,\n                    items = root.children(\"li\"),\n                    i,\n                    item,\n                    dataItem,\n                    uid,\n                    itemCheckbox;\n\n                for (i = 0; i < items.length; i++) {\n                    dataItem = data[i];\n                    uid = dataItem.uid;\n                    item = items.eq(i);\n                    item.attr(\"role\", \"treeitem\")\n                        .attr(uidAttr, uid)\n                        .attr(ARIA_SELECTED, item.hasClass(\"k-selected\"));\n\n                    dataItem.expanded = item.attr(expandedAttr) === \"true\";\n\n                    if (dataItem.hasChildren) {\n                        item.attr(ARIA_EXPANDED, dataItem.expanded);\n                    }\n\n                    if (checkboxesEnabled) {\n                        itemCheckbox = checkboxes(item);\n                        dataItem.checked = itemCheckbox.prop(CHECKED);\n                        itemCheckbox.attr(\"id\", \"_\" + uid);\n                        itemCheckbox.next(\".k-checkbox-label\").attr(\"for\", \"_\" + uid);\n\n                        item.attr(ARIA_CHECKED, item.checked);\n                    }\n\n                    this._syncHtmlAndDataSource(item.children(\"ul\"), dataItem.children);\n                }\n            },\n\n            _animation: function() {\n                var options = this.options,\n                    animationOptions = options.animation,\n                    hasCollapseAnimation = animationOptions.collapse && \"effects\" in animationOptions.collapse,\n                    collapse = extend({}, animationOptions.expand, animationOptions.collapse);\n\n                if (!hasCollapseAnimation) {\n                    collapse = extend(collapse, { reverse: true });\n                }\n\n                if (animationOptions === false) {\n                    animationOptions = {\n                        expand: { effects: {} },\n                        collapse: { hide: true, effects: {} }\n                    };\n                }\n\n                animationOptions.collapse = extend(collapse, { hide: true });\n                options.animation = animationOptions;\n            },\n\n            _dragging: function() {\n                var enabled = this.options.dragAndDrop;\n                var dragging = this.dragging;\n\n                if (enabled && !dragging) {\n                    var widget = this;\n\n                    this.dragging = new ui.HierarchicalDragAndDrop(this.element, {\n                        reorderable: true,\n                        $angular: this.options.$angular,\n                        autoScroll: this.options.autoScroll,\n                        filter: \"div:not(.k-disabled) .k-in\",\n                        allowedContainers: \".k-treeview\",\n                        itemSelector: \".k-treeview .k-item\",\n                        hintText: this._hintText.bind(this),\n                        contains: function(source, destination) {\n                            return $.contains(source, destination);\n                        },\n                        dropHintContainer: function(item) {\n                            return item;\n                        },\n                        itemFromTarget: function(target) {\n                            var item = target.closest(\".k-treeview-top,.k-treeview-mid,.k-treeview-bot\");\n                            return {\n                                item: item,\n                                content: target.closest(\".k-in\"),\n                                first: item.hasClass(\"k-treeview-top\"),\n                                last: item.hasClass(\"k-treeview-bot\")\n                            };\n                        },\n                        dropPositionFrom: function(dropHint) {\n                            return dropHint.prevAll(\".k-in\").length > 0 ? \"after\" : \"before\";\n                        },\n                        dragstart: function(source) {\n                            widget.wrapper.attr(kendo.attr(\"scrollable\"), false);\n                            return widget.trigger(DRAGSTART, { sourceNode: source[0] });\n                        },\n                        drag: function(options) {\n                            widget.trigger(DRAG, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: options.source[0],\n                                dropTarget: options.target[0],\n                                pageY: options.pageY,\n                                pageX: options.pageX,\n                                statusClass: options.status,\n                                setStatusClass: options.setStatus\n                            });\n                        },\n                        drop: function(options) {\n                            var dropTarget = $(options.dropTarget);\n                            var navigationTarget = dropTarget.closest(\"a\");\n\n                            if (navigationTarget && navigationTarget.attr(\"href\")) {\n                                widget._tempPreventNavigation(navigationTarget);\n                            }\n\n                            return widget.trigger(DROP, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: options.source,\n                                destinationNode: options.destination,\n                                valid: options.valid,\n                                setValid: function(state) {\n                                    this.valid = state;\n                                    options.setValid(state);\n                                },\n                                dropTarget: options.dropTarget,\n                                dropPosition: options.position\n                            });\n                        },\n                        dragend: function(options) {\n                            var source = options.source;\n                            var destination = options.destination;\n                            var position = options.position;\n\n                            widget.wrapper.removeAttr(kendo.attr(\"scrollable\"));\n\n                            function triggerDragEnd(source) {\n                                if (widget.options.checkboxes && widget.options.checkboxes.checkChildren) {\n                                    widget.updateIndeterminate();\n                                }\n\n                                widget.current(source);\n                                widget.element.focus();\n\n                                widget.trigger(DRAGEND, {\n                                    originalEvent: options.originalEvent,\n                                    sourceNode: source && source[0],\n                                    destinationNode: destination[0],\n                                    dropPosition: position\n                                });\n                            }\n\n                            // perform reorder / move\n                            // different handling is necessary because append might be async in remote bound tree\n                            if (position == \"over\") {\n                                widget.append(source, destination, triggerDragEnd);\n                            } else {\n                                if (position == \"before\") {\n                                    source = widget.insertBefore(source, destination);\n                                } else if (position == \"after\") {\n                                    source = widget.insertAfter(source, destination);\n                                }\n\n                                triggerDragEnd(source);\n                            }\n                        }\n                    });\n                } else if (!enabled && dragging) {\n                    dragging.destroy();\n                    this.dragging = null;\n                }\n            },\n\n            _tempPreventNavigation: function(node) {\n                node.on(CLICK + NS + TEMP_NS, function(ev) {\n                    ev.preventDefault();\n                    node.off(CLICK + NS + TEMP_NS);\n                });\n            },\n\n            _hintText: function(node) {\n                return this.templates.dragClue({\n                    item: this.dataItem(node),\n                    treeview: this.options\n                });\n            },\n\n            _templates: function() {\n                var that = this,\n                    options = that.options,\n                    fieldAccessor = that._fieldAccessor.bind(that);\n\n                if (options.template && typeof options.template == STRING) {\n                    options.template = template(options.template);\n                } else if (!options.template) {\n                    options.template = templateNoWith(\n                        \"# var text = \" + fieldAccessor(\"text\") + \"(data.item); #\" +\n                        \"# if (typeof data.item.encoded != 'undefined' && data.item.encoded === false) {#\" +\n                            \"<span class='k-treeview-leaf-text'>#= text #</span>\" +\n                        \"# } else { #\" +\n                            \"<span class='k-treeview-leaf-text'>#: text #</span>\" +\n                        \"# } #\"\n                    );\n                }\n\n                that._checkboxes();\n\n                that.templates = {\n                    setAttributes: function(item) {\n                        var result = \"\";\n                        var attributes = item.attr || {};\n\n                        for (var attr in attributes) {\n                            if (attributes.hasOwnProperty(attr) && attr !== \"class\") {\n                                result += attr + \"=\\\"\" + attributes[attr] + \"\\\" \";\n                            }\n                        }\n\n                        return result;\n                    },\n                    wrapperCssClass: function(group, item) {\n                        var result = \"k-item k-treeview-item\",\n                            index = item.index;\n\n                        if (group.firstLevel && index === 0) {\n                            result += \" k-first\";\n                        }\n\n                        if (index == group.length - 1) {\n                            result += \" k-last\";\n                        }\n\n                        return result;\n                    },\n                    cssClass: function(group, item) {\n                        var result = \"\",\n                            index = item.index,\n                            groupLength = group.length - 1;\n\n                        if (group.firstLevel && index === 0) {\n                            result += \"k-treeview-top \";\n                        }\n\n                        if (index === 0 && index != groupLength) {\n                            result += \"k-treeview-top\";\n                        } else if (index == groupLength) {\n                            result += \"k-treeview-bot\";\n                        } else {\n                            result += \"k-treeview-mid\";\n                        }\n\n                        return result;\n                    },\n                    textClass: function(item, isLink) {\n                        var result = \"k-treeview-leaf k-in\";\n\n                        if (isLink) {\n                            result += \" k-link\";\n                        }\n\n                        if (item.enabled === false) {\n                            result += \" k-disabled\";\n                        }\n\n                        if (item.selected === true) {\n                            result += \" k-selected\";\n                        }\n\n                        return result;\n                    },\n                    toggleButtonClass: function(item) {\n                        var result = \"k-icon\";\n\n                        if (item.expanded !== true) {\n                            result += \" k-i-expand\";\n                        } else {\n                            result += \" k-i-collapse\";\n                        }\n\n                        return result;\n                    },\n                    groupAttributes: function(group) {\n                        var attributes = \"\";\n\n                        if (!group.firstLevel) {\n                            attributes = \"role='group'\";\n                        }\n\n                        return attributes + (group.expanded !== true ? \" style='display:none'\" : \"\");\n                    },\n                    groupCssClass: function(group) {\n                        var cssClass = \"k-group k-treeview-group\";\n\n                        if (group.firstLevel) {\n                            cssClass += \" k-treeview-lines\";\n                        }\n\n                        return cssClass;\n                    },\n                    dragClue: templateNoWith(\n                        \"#= data.treeview.template(data) #\"\n                    ),\n                    group: templateNoWith(\n                        \"<ul class='#= data.r.groupCssClass(data.group) #'#= data.r.groupAttributes(data.group) #>\" +\n                            \"#= data.renderItems(data) #\" +\n                        \"</ul>\"\n                    ),\n                    itemContent: templateNoWith(\n                        \"# var imageUrl = \" + fieldAccessor(\"imageUrl\") + \"(data.item); #\" +\n                        \"# var spriteCssClass = \" + fieldAccessor(\"spriteCssClass\") + \"(data.item); #\" +\n                        \"# if (imageUrl) { #\" +\n                            \"<img class='k-image' alt='' src='#= imageUrl #'>\" +\n                        \"# } #\" +\n\n                        \"# if (spriteCssClass) { #\" +\n                            \"<span class='k-sprite #= spriteCssClass #'></span>\" +\n                        \"# } #\" +\n\n                        \"#= data.treeview.template(data) #\"\n                    ),\n                    itemElement: templateNoWith(\n                        \"# var item = data.item, r = data.r; #\" +\n                        \"# var url = \" + fieldAccessor(\"url\") + \"(item); #\" +\n                        \"<div class='#= r.cssClass(data.group, item) #'>\" +\n                            \"# if (item.hasChildren) { #\" +\n                                \"<span class='k-treeview-toggle'>\" +\n                                    \"<span class='#= r.toggleButtonClass(item) #'></span>\" +\n                                \"</span>\" +\n                            \"# } #\" +\n\n                            \"# if (data.treeview.checkboxes) { #\" +\n                                \"<span class='k-checkbox-wrapper' role='presentation'>\" +\n                                    \"#= data.treeview.checkboxes.template(data) #\" +\n                                \"</span>\" +\n                            \"# } #\" +\n\n                            \"# var tag = url ? 'a' : 'span'; #\" +\n                            \"# var textAttr = url ? ' href=\\\\'' + url + '\\\\'' : ''; #\" +\n\n                            \"<#=tag# class='#= r.textClass(item, !!url) #'#= textAttr #>\" +\n                                \"#= r.itemContent(data) #\" +\n                            \"</#=tag#>\" +\n                        \"</div>\"\n                    ),\n                    item: templateNoWith(\n                        \"# var item = data.item, r = data.r; #\" +\n                        \"<li role='treeitem' class='#= r.wrapperCssClass(data.group, item) #'\" +\n                            kendo.attr(\"uid\") + \"='#= item.uid #' \" +\n                            \"#= r.setAttributes(item.toJSON ? item.toJSON() : item) # \" +\n                            \"# if (data.treeview.checkboxes) { #\" +\n                                \"aria-checked='#= item.checked ? \\\"true\\\" : \\\"false\\\" #' \" +\n                            \"# } #\" +\n                            \"aria-selected='#= item.selected ? \\\"true\\\" : \\\"false\\\" #' \" +\n                            \"#=item.enabled === false ? \\\"aria-disabled='true'\\\" : ''#\" +\n                            \"# if (item.hasChildren) { #\" +\n                                \"aria-expanded='#= item.expanded ? \\\"true\\\" : \\\"false\\\" #' \" +\n                            \"# } #\" +\n                            \"data-expanded='#= item.expanded ? \\\"true\\\" : \\\"false\\\" #' \" +\n                        \">\" +\n                            \"#= r.itemElement(data) #\" +\n                        \"</li>\"\n                    ),\n                    loading: templateNoWith(\n                        \"<div class='k-icon k-i-loading'></div> #: data.messages.loading #\"\n                    ),\n                    retry: templateNoWith(\n                        \"#: data.messages.requestFailed # \" +\n                        \"<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-request-retry'><span class='k-button-text'>#: data.messages.retry #</span></button>\"\n                    )\n                };\n            },\n\n            items: function() {\n                return this.element.find(\".k-item > div:first-child\");\n            },\n\n            setDataSource: function(dataSource) {\n                var options = this.options;\n\n                options.dataSource = dataSource;\n\n                this._dataSourceUids = {};\n\n                this._dataSource();\n\n                if (options.checkboxes && options.checkboxes.checkChildren) {\n                    this.dataSource.one(\"change\", this.updateIndeterminate.bind(this, null));\n                }\n\n                if (this.options.autoBind) {\n                    this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n                }\n            },\n\n            _bindDataSource: function() {\n                var that = this;\n\n                that._refreshHandler = that.refresh.bind(that);\n                that._errorHandler = that._error.bind(that);\n                that._loadCompletedHandler = that._loadCompleted.bind(that);\n                that._requestEndHandler = that._dsRequestEnd.bind(that);\n                that._loadedNodes = [];\n\n                that.dataSource.bind(CHANGE, that._refreshHandler);\n                that.dataSource.bind(ERROR, that._errorHandler);\n\n                that.dataSource.bind(ITEMSLOADED, that._loadCompletedHandler);\n                that.dataSource.bind(REQUESTEND, that._requestEndHandler);\n            },\n\n            _dsRequestEnd: function(e) {\n                var that = this;\n\n                setTimeout(function() {\n                    if (e.type === \"read\" && !that._loadCompletedFired) {\n                        that._attemptLoadCompleted();\n                    }\n                });\n            },\n\n            _loadCompleted: function(e) {\n                var that = this;\n                that._loadedNodes = that._loadedNodes.concat(e.nodes);\n\n                if (!that.dataSource.loading() && that.options.loadOnDemand === false) {\n                    that.trigger(LOADCOMPLETED, { nodes: that._loadedNodes });\n                    that._loadedNodes = [];\n                }\n            },\n\n            _attemptLoadCompleted: function() { // If there are no items to be loaded ensure event is triggered on dataBound\n                var that = this,\n                    items = that.dataSource.view(),\n                    current, i;\n\n                if (that.options.loadOnDemand === false) {\n                    for (i = 0; i < items.length; i++) {\n                        current = items[i];\n                        if (current.hasChildren && (!current.children || !current.children.data() || current.children.data().length === 0)) {\n                            return;\n                        }\n                    }\n\n                    that._loadCompletedFired = true;\n                    that.trigger(LOADCOMPLETED, { nodes: [] });\n                }\n            },\n\n            _unbindDataSource: function() {\n                var dataSource = this.dataSource;\n\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, this._refreshHandler);\n                    dataSource.unbind(ERROR, this._errorHandler);\n                    dataSource.unbind(ITEMSLOADED, this._loadCompletedHandler);\n                    dataSource.unbind(REQUESTEND, this._requestEndHandler);\n                }\n            },\n\n            _dataSource: function(silentRead) {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                function recursiveRead(data) {\n                    for (var i = 0; i < data.length; i++) {\n                        data[i]._initChildren();\n\n                        data[i].children.fetch();\n\n                        recursiveRead(data[i].children.view());\n                    }\n                }\n\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                that._unbindDataSource();\n\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: \"text\" },\n                        { field: \"url\" },\n                        { field: \"spriteCssClass\" },\n                        { field: \"imageUrl\" }\n                    ];\n                }\n\n                that.dataSource = dataSource = HierarchicalDataSource.create(dataSource);\n\n                if (silentRead) {\n                    dataSource.fetch();\n\n                    recursiveRead(dataSource.view());\n                }\n\n                that._bindDataSource();\n            },\n\n            events: [\n                DRAGSTART,\n                DRAG,\n                DROP,\n                DRAGEND,\n\n                DATABOUND,\n                LOADCOMPLETED,\n\n                EXPAND,\n                COLLAPSE,\n                SELECT,\n                CHANGE,\n                NAVIGATE,\n                CHECK,\n                KENDOKEYDOWN\n            ],\n\n            options: {\n                name: \"TreeView\",\n                dataSource: {},\n                animation: {\n                    expand: {\n                        effects: \"expand:vertical\",\n                        duration: 200\n                    }, collapse: {\n                        duration: 100\n                    }\n                },\n                messages: {\n                    loading: \"Loading...\",\n                    requestFailed: \"Request failed.\",\n                    retry: \"Retry\"\n                },\n                dragAndDrop: false,\n                checkboxes: false,\n                autoBind: true,\n                autoScroll: false,\n                loadOnDemand: true,\n                template: \"\",\n                dataTextField: null,\n                size: \"medium\"\n            },\n\n            _accessors: function() {\n                var that = this,\n                    options = that.options,\n                    i, field, textField,\n                    element = that.element;\n\n                for (i in bindings) {\n                    field = options[bindings[i]];\n                    textField = element.attr(kendo.attr(i + \"-field\"));\n\n                    if (!field && textField) {\n                        field = textField;\n                    }\n\n                    if (!field) {\n                        field = i;\n                    }\n\n                    if (!isArray(field)) {\n                        field = [field];\n                    }\n\n                    options[bindings[i]] = field;\n                }\n            },\n\n            // generates accessor function for a given field name, honoring the data*Field arrays\n            _fieldAccessor: function(fieldName) {\n                var fieldBindings = this.options[bindings[fieldName]],\n                    count = fieldBindings.length,\n                    result = \"(function(item) {\";\n\n                if (count === 0) {\n                    result += \"return item['\" + fieldName + \"'];\";\n                } else {\n                    result += \"var levels = [\" +\n                                $.map(fieldBindings, function(x) {\n                                    return \"function(d){ return \" + kendo.expr(x) + \"}\";\n                                }).join(\",\") + \"];\";\n\n                    result += \"return levels[Math.min(item.level(), \" + count + \"-1)](item)\";\n                }\n\n                result += \"})\";\n\n                return result;\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                this._animation();\n\n                this._dragging();\n\n                this._templates();\n            },\n\n            _trigger: function(eventName, node) {\n                return this.trigger(eventName, {\n                    node: node.closest(NODE)[0]\n                });\n            },\n\n            _setChecked: function(datasource, value) {\n                if (!datasource || !kendo.isFunction(datasource.view)) {\n                    return;\n                }\n\n                for (var i = 0, nodes = datasource.view(); i < nodes.length; i++) {\n                    if (nodes[i].enabled !== false) {\n                        this._setCheckedValue(nodes[i], value);\n                    }\n\n                    if (nodes[i].children) {\n                        this._setChecked(nodes[i].children, value);\n                    }\n                }\n            },\n\n            _setCheckedValue: function(node, value) {\n                node[CHECKED] = value;\n            },\n\n            _setIndeterminate: function(node) {\n                var group = subGroup(node),\n                    siblings, length,\n                    all = true,\n                    i;\n\n                if (!group.length) {\n                    return;\n                }\n\n                siblings = checkboxes(group.children());\n\n                length = siblings.length;\n\n                if (!length) {\n                    return;\n                } else if (length > 1) {\n                    for (i = 1; i < length; i++) {\n                        if (siblings[i].checked != siblings[i - 1].checked ||\n                            siblings[i].indeterminate || siblings[i - 1].indeterminate) {\n                            all = false;\n                            break;\n                        }\n                    }\n                } else {\n                    all = !siblings[0].indeterminate;\n                }\n\n                node.attr(ARIA_CHECKED, all ? siblings[0].checked : \"mixed\");\n\n                return checkboxes(node)\n                    .data(INDETERMINATE, !all)\n                    .prop(INDETERMINATE, !all)\n                    .prop(CHECKED, all && siblings[0].checked);\n            },\n\n            updateIndeterminate: function(node) {\n                // top-down update of inital indeterminate state for all nodes\n                node = node || this.wrapper;\n\n                var subnodes = subGroup(node).children();\n                var i;\n                var checkbox;\n                var dataItem;\n\n                if (subnodes.length) {\n                    for (i = 0; i < subnodes.length; i++) {\n                        this.updateIndeterminate(subnodes.eq(i));\n                    }\n\n                    if (node.is(\".k-treeview\")) {\n                        return;\n                    }\n\n                    checkbox = this._setIndeterminate(node);\n\n                    dataItem = this.dataItem(node);\n\n                    if (checkbox && checkbox.prop(CHECKED)) {\n                        dataItem.checked = true;\n                    } else {\n                        if (dataItem) {\n                            delete dataItem.checked;\n                        }\n                    }\n                }\n            },\n\n            _bubbleIndeterminate: function(node, skipDownward) {\n                // bottom-up setting of indeterminate state of parent nodes\n                if (!node.length) {\n                    return;\n                }\n\n                if (!skipDownward) {\n                    //update the indeterminate state of the node itself\n                    this.updateIndeterminate(node);\n                }\n\n                var parentNode = this.parent(node),\n                    checkbox;\n\n                if (parentNode.length) {\n                    this._setIndeterminate(parentNode);\n\n                    checkbox = parentNode.children(\"div\").find(\".k-checkbox-wrapper input[type=checkbox]\");\n\n                    this._skip = true;\n                    if (checkbox.prop(INDETERMINATE) === false) {\n                        this.dataItem(parentNode).set(CHECKED, checkbox.prop(CHECKED));\n                    } else {\n                        // delete this.dataItem(parentNode).checked;\n                        this.dataItem(parentNode).set(CHECKED, false);\n                    }\n\n                    this._skip = false;\n\n                    this._bubbleIndeterminate(parentNode, true);\n                }\n            },\n\n            _checkboxChange: function(e) {\n                var that = this;\n                var checkbox = $(e.target);\n                var isChecked = checkbox.prop(CHECKED);\n                var node = checkbox.closest(NODE);\n                var dataItem = this.dataItem(node);\n\n                if (this._preventChange) {\n                    return;\n                }\n\n                if (dataItem.checked != isChecked) {\n                    dataItem.set(CHECKED, isChecked);\n                    node.attr(ARIA_CHECKED, isChecked);\n                    this._trigger(CHECK, node);\n                }\n\n                if (checkbox.is(\":focus\")) {\n                    that._trigger(NAVIGATE, node);\n                    that.focus();\n                }\n            },\n\n            _toggleButtonClick: function(e) {\n                var node = $(e.currentTarget).closest(NODE);\n\n                if (node.is(\"[aria-disabled='true']\")) {\n                    return;\n                }\n\n                this.toggle(node);\n            },\n\n            _mousedown: function(e) {\n                var that = this;\n                var currentTarget = $(e.currentTarget);\n                var node = $(e.currentTarget).closest(NODE);\n                var browser = kendo.support.browser;\n\n                if (node.is(\"[aria-disabled='true']\")) {\n                    return;\n                }\n\n                //IE does not trigger change for indeterminate checkboxes\n                if ((browser.msie || browser.edge) && currentTarget.is(\":checkbox\")) {\n                    if (currentTarget.prop(INDETERMINATE)) {\n                        that._preventChange = false;\n\n                        currentTarget.prop(CHECKED, !currentTarget.prop(CHECKED));\n                        currentTarget.trigger(CHANGE);\n\n                        currentTarget.on(CLICK + NS, function(e) {\n                            e.preventDefault();\n                        });\n\n                        that._preventChange = true;\n                    } else {\n                        currentTarget.off(CLICK + NS);\n                        that._preventChange = false;\n                    }\n                }\n\n                that._clickTarget = node;\n                that.current(node);\n            },\n\n            _focusable: function(node) {\n                return node && node.length && node.is(\":visible\") && !node.find(\".k-in\").first().hasClass(DISABLED);\n            },\n\n            _focus: function() {\n                var current = this.select(),\n                    clickTarget = this._clickTarget;\n\n                // suppress initial focus state on touch devices (until keyboard is used)\n                if (kendo.support.touch) {\n                    return;\n                }\n\n                if (clickTarget && clickTarget.length) {\n                    current = clickTarget;\n                }\n\n                if (!this._focusable(current)) {\n                    current = this.current();\n                }\n\n                if (!this._focusable(current)) {\n                    current = this._nextVisible($());\n                }\n\n                this.current(current);\n            },\n\n            focus: function() {\n                var wrapper = this.wrapper,\n                    scrollContainer = wrapper[0],\n                    containers = [],\n                    offsets = [],\n                    documentElement = document.documentElement,\n                    i;\n\n                do {\n                    scrollContainer = scrollContainer.parentNode;\n\n                    if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                        containers.push(scrollContainer);\n                        offsets.push(scrollContainer.scrollTop);\n                    }\n                } while (scrollContainer != documentElement);\n\n                kendo.focusElement(wrapper);\n\n                for (i = 0; i < containers.length; i++) {\n                    containers[i].scrollTop = offsets[i];\n                }\n            },\n\n            _blur: function() {\n                this.current().find(\".k-in\").first().removeClass(\"k-focus\");\n            },\n\n            _enabled: function(node) {\n                return !node.children(\"div\").children(\".k-in\").hasClass(DISABLED);\n            },\n\n            parent: function(node) {\n                var wrapperRe = /\\bk-treeview\\b(?!-)/,\n                    itemRe = /\\bk-item\\b/,\n                    result,\n                    skipSelf;\n\n                if (typeof node == STRING) {\n                    node = this.element.find(node);\n                }\n\n                if (!isDomElement(node)) {\n                    node = node[0];\n                }\n\n                skipSelf = itemRe.test(node.className);\n\n                do {\n                    node = node.parentNode;\n\n                    if (itemRe.test(node.className)) {\n                        if (skipSelf) {\n                            result = node;\n                        } else {\n                            skipSelf = true;\n                        }\n                    }\n                } while (!wrapperRe.test(node.className) && !result);\n\n                return $(result);\n            },\n\n            _nextVisible: function(node) {\n                var that = this,\n                    expanded = that._expanded(node),\n                    result;\n\n                function nextParent(node) {\n                    while (node.length && !node.next().length) {\n                        node = that.parent(node);\n                    }\n\n                    if (node.next().length) {\n                        return node.next();\n                    } else {\n                        return node;\n                    }\n                }\n\n                if (!node.length || !node.is(\":visible\")) {\n                    result = that.root.children().eq(0);\n                } else if (expanded) {\n                    result = subGroup(node).children().first();\n\n                    // expanded node with no children\n                    if (!result.length) {\n                        result = nextParent(node);\n                    }\n                } else {\n                    result = nextParent(node);\n                }\n\n                return result;\n            },\n\n            _previousVisible: function(node) {\n                var that = this,\n                    lastChild,\n                    result;\n\n                if (!node.length || node.prev().length) {\n                    if (node.length) {\n                        result = node.prev();\n                    } else {\n                        result = that.root.children().last();\n                    }\n\n                    while (that._expanded(result)) {\n                        lastChild = subGroup(result).children().last();\n\n                        if (!lastChild.length) {\n                            break;\n                        }\n\n                        result = lastChild;\n                    }\n                } else {\n                    result = that.parent(node) || node;\n                }\n\n                return result;\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    target,\n                    focused = that.current(),\n                    expanded = that._expanded(focused),\n                    checkbox = focused.find(\".k-checkbox-wrapper\").first().find(\":checkbox\"),\n                    rtl = kendo.support.isRtl(that.element);\n\n                if (e.target != e.currentTarget) {\n                    return;\n                }\n\n                if ((!rtl && key == keys.RIGHT) || (rtl && key == keys.LEFT)) {\n                    if (expanded) {\n                        target = that._nextVisible(focused);\n                    } else if (!focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                        that.expand(focused);\n                    }\n                } else if ((!rtl && key == keys.LEFT) || (rtl && key == keys.RIGHT)) {\n                    if (expanded && !focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                        that.collapse(focused);\n                    } else {\n                        target = that.parent(focused);\n\n                        if (!that._enabled(target)) {\n                            target = undefined$1;\n                        }\n                    }\n                } else if (key == keys.DOWN) {\n                    target = that._nextVisible(focused);\n                } else if (key == keys.UP) {\n                    target = that._previousVisible(focused);\n                } else if (key == keys.HOME) {\n                    target = that._nextVisible($());\n                } else if (key == keys.END) {\n                    target = that._previousVisible($());\n                } else if (key == keys.ENTER && !focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                    if (!focused.find(\".k-in\").first().hasClass(\"k-selected\")) {\n                        if (!that._trigger(SELECT, focused)) {\n                            that.select(focused);\n                        }\n                    }\n                } else if (key == keys.SPACEBAR && checkbox.length) {\n                    if (!focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                        checkbox.prop(CHECKED, !checkbox.prop(CHECKED))\n                            .data(INDETERMINATE, false)\n                            .prop(INDETERMINATE, false);\n\n                        that._checkboxChange({ target: checkbox });\n                    }\n                    target = focused;\n                }\n\n                if (target) {\n                    e.preventDefault();\n\n                    if (focused[0] != target[0]) {\n                        that._trigger(NAVIGATE, target);\n                        that.current(target);\n                    }\n                }\n            },\n\n            _keypress: function(e) {\n                var that = this;\n                var delay = 300;\n                var focusedNode = that.current().get(0);\n                var matchToFocus;\n                var key = e.key;\n                var isPrintable = key.length === 1;\n\n                if (!isPrintable) {\n                    return;\n                }\n\n                if (!that._match) {\n                    that._match = \"\";\n                }\n\n                that._match += key;\n                clearTimeout(that._matchTimer);\n                that._matchTimer = setTimeout(function() {\n                    that._match = \"\";\n                }, delay);\n\n                matchToFocus = focusedNode &&\n                                that._matchNextByText(\n                                    Array.prototype.indexOf.call(that.element.find(\".k-item\"),\n                                    focusedNode), that._match\n                                );\n\n                if (!matchToFocus.length) {\n                    matchToFocus = that._matchNextByText(-1, that._match);\n                }\n\n                if (matchToFocus.get(0) && matchToFocus.get(0) !== focusedNode) {\n                    that._trigger(NAVIGATE, matchToFocus);\n                    that.current(matchToFocus);\n                }\n            },\n\n            _matchNextByText: function(startIndex, text) {\n                var element = this.element;\n                var textNodes = element.find(\".k-in\").filter(function(i, element) {\n                    return (i > startIndex &&\n                            $(element).is(\":visible\") &&\n                            $(element).text().toLowerCase().indexOf(text) === 0);\n                });\n\n                return textNodes.eq(0).closest(NODE);\n            },\n\n            _click: function(e) {\n                var that = this,\n                    node = $(e.currentTarget),\n                    contents = nodeContents(node.closest(NODE)),\n                    href = node.attr(\"href\"),\n                    shouldNavigate;\n\n                if (href) {\n                    shouldNavigate = href == \"#\" || href.indexOf(\"#\" + this.element.id + \"-\") >= 0;\n                } else {\n                    shouldNavigate = contents.length && !contents.children().length;\n                }\n\n                if (shouldNavigate) {\n                    e.preventDefault();\n                }\n\n                if (!node.hasClass(\".k-selected\") && !that._trigger(SELECT, node)) {\n                    that.select(node);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper, root,\n                    wrapperClasses = \"k-treeview\";\n\n                if (element.is(\"ul\")) {\n                    wrapper = element.wrap('<div />').parent();\n                    root = element;\n                } else {\n                    wrapper = element;\n                    root = wrapper.children(\"ul\").eq(0);\n                }\n\n                that.wrapper = wrapper.addClass(wrapperClasses);\n                that.root = root;\n            },\n\n            _getSelectedNode: function() {\n                return this.element.find(\".k-selected\").closest(NODE);\n            },\n\n            _group: function(item) {\n                var that = this,\n                    firstLevel = item.hasClass(KTREEVIEW),\n                    group = {\n                        firstLevel: firstLevel,\n                        expanded: firstLevel || that._expanded(item)\n                    },\n                    groupElement = item.children(\"ul\");\n\n                groupElement\n                    .addClass(that.templates.groupCssClass(group))\n                    .css(\"display\", group.expanded ? \"\" : \"none\");\n\n                if (!firstLevel) {\n                    groupElement.attr(\"role\", \"group\");\n                }\n\n                that._nodes(groupElement, group);\n            },\n\n            _nodes: function(groupElement, groupData) {\n                var that = this,\n                    nodes = groupElement.children(\"li\"),\n                    nodeData;\n\n                groupData = extend({ length: nodes.length }, groupData);\n\n                nodes.each(function(i, node) {\n                    node = $(node);\n\n                    nodeData = { index: i, expanded: that._expanded(node) };\n\n                    updateNodeHtml(node);\n\n                    that._updateNodeClasses(node, groupData, nodeData);\n\n                    // iterate over child nodes\n                    that._group(node);\n                });\n            },\n\n            _checkboxes: function() {\n                var options = this.options;\n                var checkboxes = options.checkboxes;\n                var defaultTemplate, checkbox;\n\n                if (checkboxes) {\n                    checkbox = \"<input id='_#= item.uid #' aria-hidden='true' type='checkbox' tabindex='-1'\";\n\n\n                    if (checkboxes.name) {\n                        checkbox += \" name='\" + checkboxes.name + \"'\";\n                    }\n\n                    checkbox += \" />\";\n\n                    defaultTemplate = kendo.html.renderCheckBox($(checkbox), $.extend({}, options, {\n                        rounded: \"medium\"\n                    }));\n                    defaultTemplate = defaultTemplate.replace(/(<input[^/>]*)/, \"$1 #= (item.enabled === false) ? 'disabled' : '' # #= item.checked ? 'checked' : '' #\");\n\n                    checkboxes = extend({\n                        template: defaultTemplate\n                    }, options.checkboxes);\n\n                    if (typeof checkboxes.template == STRING) {\n                        checkboxes.template = template(checkboxes.template);\n                    }\n\n                    options.checkboxes = checkboxes;\n                }\n            },\n\n            _updateNodeClasses: function(node, groupData, nodeData) {\n                var wrapper = node.children(\"div\"),\n                    group = node.children(\"ul\"),\n                    templates = this.templates;\n\n                if (node.hasClass(\"k-treeview\")) {\n                    return;\n                }\n\n                nodeData = nodeData || {};\n                nodeData.expanded = typeof nodeData.expanded != UNDEFINED ? nodeData.expanded : this._expanded(node);\n                nodeData.index = typeof nodeData.index != UNDEFINED ? nodeData.index : node.index();\n                nodeData.enabled = typeof nodeData.enabled != UNDEFINED ? nodeData.enabled : !wrapper.children(\".k-in\").hasClass(\"k-disabled\");\n\n                groupData = groupData || {};\n                groupData.firstLevel = typeof groupData.firstLevel != UNDEFINED ? groupData.firstLevel : node.parent().parent().hasClass(KTREEVIEW);\n                groupData.length = typeof groupData.length != UNDEFINED ? groupData.length : node.parent().children().length;\n\n                // li\n                node.removeClass(\"k-first k-last\")\n                    .addClass(templates.wrapperCssClass(groupData, nodeData));\n\n                // div\n                wrapper.removeClass(\"k-treeview-top k-treeview-mid k-treeview-bot\")\n                       .addClass(templates.cssClass(groupData, nodeData));\n\n                // span / a\n                var textWrap = wrapper.children(\".k-in\");\n                var isLink = textWrap[0] && textWrap[0].nodeName.toLowerCase() == \"a\";\n                textWrap.removeClass(\"k-in k-link k-disabled\")\n                    .addClass(templates.textClass(nodeData, isLink));\n\n                // toggle button\n                if (group.length || node.attr(\"data-hasChildren\") == \"true\") {\n                    wrapper.find(\".k-treeview-toggle > .k-icon\").removeClass(\"k-i-expand k-i-collapse\")\n                        .addClass(templates.toggleButtonClass(nodeData));\n\n                    group.addClass(\"k-group k-treeview-group\");\n                }\n            },\n\n\n            _processNodes: function(nodes, callback) {\n                var that = this;\n                var items = that.element.find(nodes);\n                for (var i = 0; i < items.length; i++) {\n                    callback.call(that, i, $(items[i]).closest(NODE));\n                }\n            },\n\n            dataItem: function(node) {\n                var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                    dataSource = this.dataSource;\n\n                return dataSource && dataSource.getByUid(uid);\n            },\n\n            _dataItem: function(node) {\n                var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                    dataSource = this.dataSource;\n\n                return dataSource && this._dataSourceUids[uid];\n            },\n\n            _insertNode: function(nodeData, index, parentNode, insertCallback, collapsed) {\n                var that = this,\n                    group = subGroup(parentNode),\n                    updatedGroupLength = group.children().length + 1,\n                    childrenData,\n                    groupData = {\n                        firstLevel: parentNode.hasClass(KTREEVIEW),\n                        expanded: !collapsed,\n                        length: updatedGroupLength\n                    }, node, i, item, nodeHtml = \"\", firstChild, lastChild,\n                    append = function(item, group) {\n                        item.appendTo(group);\n                    };\n\n                for (i = 0; i < nodeData.length; i++) {\n                    item = nodeData[i];\n\n                    item.index = index + i;\n\n                    nodeHtml += that._renderItem({\n                        group: groupData,\n                        item: item\n                    });\n                }\n\n                node = $(nodeHtml);\n\n                if (!node.length) {\n                    return;\n                }\n\n                that.angular(\"compile\", function() {\n                    return {\n                        elements: node.get(),\n                        data: nodeData.map(function(item) {\n                            return { dataItem: item };\n                        })\n                    };\n                });\n\n                if (!group.length) {\n                    group = $(that._renderGroup({\n                        group: groupData\n                    })).appendTo(parentNode);\n\n                    parentNode.attr(ARIA_EXPANDED, true);\n                }\n\n                insertCallback(node, group);\n\n                if (parentNode.hasClass(\"k-item\")) {\n                    updateNodeHtml(parentNode);\n                    that._updateNodeClasses(parentNode, groupData, { expanded: !collapsed });\n                }\n\n                firstChild = node.prev().first();\n                lastChild = node.next().last();\n\n                that._updateNodeClasses(firstChild, {}, { expanded: firstChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n                that._updateNodeClasses(lastChild, {}, { expanded: lastChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n\n                // render sub-nodes\n                for (i = 0; i < nodeData.length; i++) {\n                    item = nodeData[i];\n\n                    if (item.hasChildren) {\n                        childrenData = item.children.data();\n\n                        if (childrenData.length) {\n                            that._insertNode(childrenData, item.index, node.eq(i), append, !item.expanded);\n                        }\n                    }\n                }\n\n                return node;\n            },\n\n            _updateNodes: function(items, field) {\n                var that = this;\n                var i, node, nodeWrapper, item, isChecked, isCollapsed, kin;\n                var context = { treeview: that.options, item: item };\n                var render = field != \"expanded\" && field != \"checked\";\n\n                function setCheckedState(root, state) {\n                    if (root.is(\".k-group\")) {\n                        root.find(\".k-item:not([aria-disabled])\").attr(ARIA_CHECKED, state);\n                    }\n\n                    root.find(\".k-checkbox-wrapper input[type=checkbox]:not([disabled])\")\n                        .prop(CHECKED, state)\n                        .data(INDETERMINATE, false)\n                        .prop(INDETERMINATE, false);\n                }\n\n                if (field == \"selected\") {\n                    item = items[0];\n\n                    node = that.findByUid(item.uid);\n                    kin = node.find(\".k-in\").first();\n\n                    kin.removeClass(\"k-hover\")\n                        .toggleClass(\"k-selected\", item[field])\n                        .end();\n\n                    if (item[field]) {\n                        that.current(node);\n                    }\n\n                    node.attr(ARIA_SELECTED, !!item[field]);\n                } else {\n                    var elements = $.map(items, function(item) {\n                        return that.findByUid(item.uid).children(\"div\");\n                    });\n\n                    if (render) {\n                        that.angular(\"cleanup\", function() { return { elements: elements }; });\n                    }\n\n                    for (i = 0; i < items.length; i++) {\n                        context.item = item = items[i];\n                        nodeWrapper = elements[i];\n                        node = nodeWrapper.parent();\n\n                        if (render) {\n                            if (kendo.unbind) {\n                                kendo.unbind(nodeWrapper);\n                            }\n                            nodeWrapper.children(\".k-in\")\n                                .html(that.templates.itemContent(context));\n                        }\n\n                        if (field == CHECKED) {\n                            isChecked = item[field];\n\n                            setCheckedState(nodeWrapper, isChecked);\n\n                            node.attr(ARIA_CHECKED, isChecked);\n\n                            if (that.options.checkboxes.checkChildren) {\n                                setCheckedState(node.children(\".k-group\"), isChecked);\n\n                                that._setChecked(item.children, isChecked);\n\n                                that._bubbleIndeterminate(node);\n                            }\n                        } else if (field == \"expanded\") {\n                            that._toggle(node, item, item[field]);\n                        } else if (field == \"enabled\") {\n                            node.find(\".k-checkbox-wrapper input[type=checkbox]\").prop(\"disabled\", !item[field]);\n\n                            isCollapsed = !nodeContents(node).is(VISIBLE);\n\n                            node.removeAttr(ARIA_DISABLED);\n\n                            if (!item[field]) {\n                                if (item.selected) {\n                                    item.set(\"selected\", false);\n                                }\n\n                                if (item.expanded) {\n                                    item.set(\"expanded\", false);\n                                }\n\n                                isCollapsed = true;\n                                node.attr(ARIA_SELECTED, false)\n                                    .attr(ARIA_DISABLED, true);\n                            }\n\n                            that._updateNodeClasses(node, {}, { enabled: item[field], expanded: !isCollapsed });\n                        }\n\n                        if (nodeWrapper.length) {\n                            this.trigger(\"itemChange\", { item: nodeWrapper, data: item, ns: ui });\n                        }\n                    }\n\n                    if (render) {\n                        that.angular(\"compile\", function() {\n                            return {\n                                elements: elements,\n                                data: $.map(items, function(item) {\n                                    return [{ dataItem: item }];\n                                })\n                            };\n                        });\n                    }\n                }\n            },\n\n            _appendItems: function(index, items, parentNode) {\n                var group = subGroup(parentNode);\n                var children = group.children();\n                var collapsed = !this._expanded(parentNode);\n\n                if (this.element === parentNode) {\n                    var dataItems = this.dataSource.data();\n                    var viewItems = this.dataSource.view();\n                    var rootItems = viewItems.length < dataItems.length ? viewItems : dataItems;\n                    index = rootItems.indexOf(items[0]);\n                } else if (items.length) {\n                    index = items[0].parent().indexOf(items[0]);\n                }\n\n                if (typeof index == UNDEFINED) {\n                    index = children.length;\n                }\n\n                this._insertNode(items, index, parentNode, function(item, group) {\n                    // insert node into DOM\n                    if (index >= children.length) {\n                        item.appendTo(group);\n                    } else {\n                        item.insertBefore(children.eq(index));\n                    }\n                }, collapsed);\n\n                if (!collapsed) {\n                    this._updateNodeClasses(parentNode, {}, { expanded: !collapsed });\n                    subGroup(parentNode).css(\"display\", \"block\");\n                }\n            },\n\n            _refreshChildren: function(parentNode, items, index) {\n                var i, children, child;\n                var options = this.options;\n                var loadOnDemand = options.loadOnDemand;\n                var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n\n                subGroup(parentNode).empty();\n\n                if (!items.length) {\n                    updateNodeHtml(parentNode);\n                } else {\n                    this._appendItems(index, items, parentNode);\n\n                    children = subGroup(parentNode).children();\n\n                    if (loadOnDemand && checkChildren) {\n                        this._bubbleIndeterminate(children.last());\n                    }\n\n                    for (i = 0; i < children.length; i++) {\n                        child = children.eq(i);\n                        this.trigger(\"itemChange\", {\n                            item: child.children(\"div\"),\n                            data: items[i],\n                            ns: ui\n                        });\n                    }\n                }\n            },\n\n            _refreshRoot: function(items) {\n                var groupHtml = this._renderGroup({\n                        items: items,\n                        group: {\n                            firstLevel: true,\n                            expanded: true\n                        }\n                    });\n\n                if (this.root.length && this.root[0].parentElement) {\n                    this._angularItems(\"cleanup\");\n\n                    var group = $(groupHtml);\n\n                    this.root\n                        .attr(\"class\", group.attr(\"class\"))\n                        .html(group.html());\n                } else {\n                    this.root = this.wrapper.html(groupHtml).children(\"ul\");\n                }\n\n                var elements = this.root.children(\".k-item\");\n                for (var i = 0; i < items.length; i++) {\n                    this.trigger(\"itemChange\", {\n                        item: elements.eq(i),\n                        data: items[i],\n                        ns: ui\n                    });\n                }\n                this._angularItems(\"compile\");\n            },\n\n            refresh: function(e) {\n                var node = e.node;\n                var action = e.action;\n                var items = e.items;\n                var parentNode = this.wrapper;\n                var options = this.options;\n                var loadOnDemand = options.loadOnDemand;\n                var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n                var i;\n\n                if (this._skip) {\n                    return;\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    this._dataSourceUids[items[i].uid] = items[i];\n                }\n\n                if (e.field) {\n                    if (!items[0] || !items[0].level) {\n                        return;\n                    }\n\n                    return this._updateNodes(items, e.field);\n                }\n\n                if (node) {\n                    parentNode = this.findByUid(node.uid);\n                    this._progress(parentNode, false);\n                }\n\n                if (checkChildren && action != \"remove\") {\n                    var bubble = false;\n\n                    for (i = 0; i < items.length; i++) {\n                        if (\"checked\" in items[i]) {\n                            bubble = true;\n                            break;\n                        }\n                    }\n\n                    if (!bubble && node && node.checked) {\n                        for (i = 0; i < items.length; i++) {\n                            items[i].checked = true;\n                        }\n                    }\n                }\n\n                if (action == \"add\") {\n                    this._appendItems(e.index, items, parentNode);\n                } else if (action == \"remove\") {\n                    this._remove(this.findByUid(items[0].uid), false);\n                } else if (action == \"itemchange\") {\n                    this._updateNodes(items);\n                } else if (action == \"itemloaded\") {\n                    this._refreshChildren(parentNode, items, e.index);\n                } else {\n                    this._refreshRoot(items);\n                    this.element.attr(ARIA_BUSY, false);\n                }\n\n                if (action != \"remove\") {\n                    for (i = 0; i < items.length; i++) {\n                        if (!loadOnDemand || items[i].expanded || items[i]._loaded) {\n                            items[i].load();\n                        }\n                    }\n                }\n\n                this.wrapper.find(\">ul\").attr(\"role\", \"none\");\n\n\n                this.trigger(DATABOUND, { node: node ? parentNode : undefined$1 });\n                if (this.dataSource.filter() && this.options.checkboxes.checkChildren) {\n                    this.updateIndeterminate(parentNode);\n                }\n            },\n\n            _error: function(e) {\n                var node = e.node && this.findByUid(e.node.uid);\n                var retryHtml = this.templates.retry({ messages: this.options.messages });\n\n                if (node) {\n                    this._progress(node, false);\n                    this._expanded(node, false);\n                    nodeIcon(node).addClass(\"k-i-reload\");\n                    e.node.loaded(false);\n                } else {\n                    this._progress(false);\n                    this.dataSource.data([]);\n                    this.element.html(retryHtml);\n                }\n            },\n\n            _retryRequest: function(e) {\n                e.preventDefault();\n\n                this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n            },\n\n            expand: function(nodes) {\n                this._processNodes(nodes, function(index, item) {\n                    this.toggle(item, true);\n                });\n            },\n\n            collapse: function(nodes) {\n                this._processNodes(nodes, function(index, item) {\n                    this.toggle(item, false);\n                });\n            },\n\n            enable: function(nodes, enable) {\n                if (typeof nodes === \"boolean\") {\n                    enable = nodes;\n                    nodes = this.items();\n                } else {\n                    enable = arguments.length == 2 ? !!enable : true;\n                }\n\n                this._processNodes(nodes, function(index, item) {\n                    this.dataItem(item).set(\"enabled\", enable);\n                });\n            },\n\n            current: function(node) {\n                var that = this,\n                    current = that._current,\n                    element = that.element;\n\n                if (arguments.length > 0 && node && node.length) {\n                    if (current) {\n                        current.find(\".k-in\").first().removeClass(\"k-focus\");\n                    }\n\n                    current = that._current = $(node, element).closest(NODE);\n                    current.find(\".k-in\").first().addClass(\"k-focus\");\n                    that._updateActiveDescendant();\n\n                    return;\n                }\n\n                if (!current) {\n                    current = that._nextVisible($());\n                }\n\n                return current;\n            },\n\n            _updateActiveDescendant: function() {\n                var current = this._current,\n                    id = current[0].id || this._ariaId,\n                    prev = this.element.find(\"#\" + this._ariaId);\n\n                if (prev.length > 0) {\n                    prev.removeAttr(\"id\");\n                }\n\n                this.wrapper.removeAttr(ARIA_ACTIVEDESCENDANT);\n                current.attr(\"id\", id);\n                this.wrapper.attr(ARIA_ACTIVEDESCENDANT, id);\n            },\n\n            select: function(node) {\n                var that = this,\n                    element = that.element;\n\n                if (!arguments.length) {\n                    return element.find(\".k-selected\").closest(NODE);\n                }\n\n                node = $(node, element).closest(NODE);\n\n                element.find(\".k-selected\").each(function() {\n                    var dataItem = that.dataItem(this);\n                    if (dataItem) {\n                        dataItem.set(\"selected\", false);\n                        delete dataItem.selected;\n                    } else {\n                        $(this).removeClass(\"k-selected\");\n                    }\n                });\n\n                if (node.length) {\n                    that.dataItem(node).set(\"selected\", true);\n                    that._clickTarget = node;\n                }\n\n                that.trigger(CHANGE);\n            },\n\n            _toggle: function(node, dataItem, expand) {\n                var options = this.options;\n                var contents = nodeContents(node);\n                var direction = expand ? \"expand\" : \"collapse\";\n                var loaded;\n\n                if (contents.data(\"animating\")) {\n                    return;\n                }\n\n                loaded = dataItem && dataItem.loaded();\n\n                if (expand && !loaded) {\n                    if (options.loadOnDemand) {\n                        this._progress(node, true);\n                    }\n\n                    contents.remove();\n                    dataItem.load();\n                } else {\n                    this._updateNodeClasses(node, {}, { expanded: expand });\n\n                    if (!expand) {\n                        contents.css(\"height\", contents.height()).css(\"height\");\n                    }\n\n                    contents\n                        .kendoStop(true, true)\n                        .kendoAnimate(extend(\n                            { reset: true },\n                            options.animation[direction],\n                            { complete: function() {\n                                if (expand) {\n                                    contents.css(\"height\", \"\");\n                                }\n                            } }\n                        ));\n                }\n\n            },\n\n            toggle: function(node, expand) {\n                node = $(node);\n\n                if (!nodeIcon(node).is(\".k-i-expand, .k-i-collapse\")) {\n                    return;\n                }\n\n                if (arguments.length == 1) {\n                    expand = !this._expanded(node);\n                }\n\n                this._expanded(node, expand);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.wrapper.off(NS);\n                that.wrapper.find(\".k-checkbox-wrapper :checkbox\").off(NS);\n                that._clickHandler = null;\n\n                that._unbindDataSource();\n\n                if (that.dragging) {\n                    that.dragging.destroy();\n                }\n\n                that._dataSourceUids = {};\n\n                kendo.destroy(that.element);\n\n                that.root = that.wrapper = that.element = null;\n            },\n\n            _expanded: function(node, value, force) {\n                var expandedAttr = kendo.attr(\"expanded\");\n                var dataItem;\n                var expanded = value;\n                var direction = expanded ? \"expand\" : \"collapse\";\n\n                if (arguments.length == 1) {\n                    dataItem = this._dataItem(node);\n                    return node.attr(expandedAttr) === \"true\" || (dataItem && dataItem.expanded);\n                }\n\n                dataItem = this.dataItem(node);\n\n                if (nodeContents(node).data(\"animating\")) {\n                    return;\n                }\n\n                if (force || !this._trigger(direction, node)) {\n                    if (expanded) {\n                        node.attr(expandedAttr, \"true\");\n                        node.attr(ARIA_EXPANDED, \"true\");\n                    } else {\n                        node.removeAttr(expandedAttr);\n                        node.attr(ARIA_EXPANDED, \"false\");\n                    }\n\n                    if (dataItem) {\n                        dataItem.set(\"expanded\", expanded);\n                        // necessary when expanding an item yields an error and the item is not expanded as a result\n                        expanded = dataItem.expanded;\n                    }\n                }\n            },\n\n            _progress: function(node, showProgress) {\n                var element = this.element;\n                var loadingText = this.templates.loading({ messages: this.options.messages });\n\n                if (arguments.length == 1) {\n                    showProgress = node;\n\n                    if (showProgress) {\n                        element.html(loadingText);\n                    } else {\n                        element.empty();\n                    }\n\n                    element.attr(ARIA_BUSY, showProgress);\n                } else {\n                    nodeIcon(node).toggleClass(\"k-i-loading\", showProgress).removeClass(\"k-i-reload\");\n                    node.attr(ARIA_BUSY, showProgress);\n                }\n            },\n\n            text: function(node, text) {\n                var dataItem = this.dataItem(node),\n                    fieldBindings = this.options[bindings.text],\n                    level = dataItem.level(),\n                    length = fieldBindings.length,\n                    field = fieldBindings[Math.min(level, length - 1)];\n\n                if (text) {\n                    dataItem.set(field, text);\n                } else {\n                    return dataItem[field];\n                }\n            },\n\n            _objectOrSelf: function(node) {\n                return $(node).closest(\"[data-role=treeview]\").data(\"kendoTreeView\") || this;\n            },\n\n            _dataSourceMove: function(nodeData, group, parentNode, callback) {\n                var referenceDataItem,\n                    destTreeview = this._objectOrSelf(parentNode || group),\n                    destDataSource = destTreeview.dataSource;\n                var loadPromise = $.Deferred().resolve().promise();\n\n                if (parentNode && parentNode[0] != destTreeview.element[0]) {\n                    referenceDataItem = destTreeview.dataItem(parentNode);\n\n                    if (!referenceDataItem.loaded()) {\n                        destTreeview._progress(parentNode, true);\n                        loadPromise = referenceDataItem.load();\n                    }\n\n                    if (parentNode != this.root) {\n                        destDataSource = referenceDataItem.children;\n\n                        if (!destDataSource || !(destDataSource instanceof HierarchicalDataSource)) {\n                            referenceDataItem._initChildren();\n                            referenceDataItem.loaded(true);\n                            destDataSource = referenceDataItem.children;\n                        }\n                    }\n                }\n\n                nodeData = this._toObservableData(nodeData);\n\n                return callback.call(destTreeview, destDataSource, nodeData, loadPromise);\n            },\n\n            _toObservableData: function(node) {\n                var dataItem = node, dataSource, uid;\n\n                if (isJQueryInstance(node) || isDomElement(node)) {\n                    dataSource = this._objectOrSelf(node).dataSource;\n                    uid = $(node).attr(kendo.attr(\"uid\"));\n                    dataItem = dataSource.getByUid(uid);\n\n                    if (dataItem) {\n                        dataItem = dataSource.remove(dataItem);\n                    }\n                }\n\n                return dataItem;\n            },\n\n            _insert: function(data, model, index) {\n                if (!(model instanceof kendo.data.ObservableArray)) {\n                    if (!isArray(model)) {\n                        model = [model];\n                    }\n                } else {\n                    // items will be converted to new Node instances\n                    model = model.toJSON();\n                }\n\n                var parentNode = data.parent();\n\n                if (parentNode && parentNode._initChildren) {\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n\n                data.splice.apply(data, [ index, 0 ].concat(model));\n\n                return this.findByUid(data[index].uid);\n            },\n\n            insertAfter: insertAction(1),\n\n            insertBefore: insertAction(0),\n\n            append: function(nodeData, parentNode, success) {\n                var group = this.root;\n\n                if (parentNode && nodeData instanceof jQuery && parentNode[0] === nodeData[0]) {\n                    return;\n                }\n\n                parentNode = parentNode && parentNode.length ? parentNode : null;\n\n                if (parentNode) {\n                    group = subGroup(parentNode);\n                }\n\n                return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model, loadModel) {\n                    var inserted;\n                    var that = this;\n\n                    function add() {\n                        if (parentNode) {\n                            that._expanded(parentNode, true, true);\n                        }\n\n                        var data = dataSource.data(),\n                            index = Math.max(data.length, 0);\n\n                        return that._insert(data, model, index);\n                    }\n\n                    loadModel.done(function() {\n                        inserted = add();\n                        success = success || $.noop;\n                        success(inserted);\n                    });\n\n                    return inserted || null;\n                });\n            },\n\n            _remove: function(node, keepData) {\n                var that = this,\n                    parentNode,\n                    prevSibling, nextSibling;\n\n                node = $(node, that.element);\n\n                if (node.attr(\"id\") === that.element.attr(ARIA_ACTIVEDESCENDANT)) {\n                    that.element.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                this.angular(\"cleanup\", function() {\n                    return { elements: node.get() };\n                });\n\n                parentNode = node.parent().parent();\n                prevSibling = node.prev();\n                nextSibling = node.next();\n\n                node[keepData ? \"detach\" : \"remove\"]();\n\n                if (parentNode.hasClass(\"k-item\")) {\n                    updateNodeHtml(parentNode);\n                    that._updateNodeClasses(parentNode);\n                }\n\n                that._updateNodeClasses(prevSibling);\n                that._updateNodeClasses(nextSibling);\n\n                return node;\n            },\n\n            remove: function(node) {\n                var dataItem = this.dataItem(node);\n                if (dataItem) {\n                    this.dataSource.remove(dataItem);\n                }\n            },\n\n            detach: function(node) {\n                return this._remove(node, true);\n            },\n\n            findByText: function(text) {\n                return $(this.element).find(\".k-in\").filter(function(i, element) {\n                    return $(element).text() == text;\n                }).closest(NODE);\n            },\n\n            findByUid: function(uid) {\n                var items = this.element.find(\".k-item\");\n                var uidAttr = kendo.attr(\"uid\");\n                var result;\n\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].getAttribute(uidAttr) == uid) {\n                        result = items[i];\n                        break;\n                    }\n                }\n\n                return $(result);\n            },\n\n            expandPath: function(path, complete) {\n                var treeview = this;\n                var nodeIds = path.slice(0);\n                var callback = complete || $.noop;\n\n                function proceed() {\n                    nodeIds.shift();\n\n                    if (nodeIds.length) {\n                        expand(nodeIds[0]).then(proceed);\n                    } else {\n                        callback.call(treeview);\n                    }\n                }\n\n                function expand(id) {\n                    var result = $.Deferred();\n                    var node = treeview.dataSource.get(id);\n                    var expandedAttr = kendo.attr(\"expanded\");\n                    var nodeElement;\n\n                    if (node) {\n                        nodeElement = treeview.findByUid(node.uid);\n\n                        if (node.loaded()) {\n                            node.set(\"expanded\", true);\n                            nodeElement.attr(expandedAttr, true);\n                            nodeElement.attr(ARIA_EXPANDED, true);\n                            result.resolve();\n                        } else {\n                            // manually show progress of the node\n                            // should be moved to `refresh`\n                            // if the datasource starts triggering a `requestStart` event for nodes\n                            treeview._progress(nodeElement, true);\n\n                            node.load().then(function() {\n                                node.set(\"expanded\", true);\n                                nodeElement.attr(expandedAttr, true);\n                                nodeElement.attr(ARIA_EXPANDED, true);\n                                result.resolve();\n                            });\n                        }\n                    } else {\n                        result.resolve();\n                    }\n\n                    return result.promise();\n                }\n\n                // expand async nodes\n                expand(nodeIds[0]).then(proceed);\n            },\n\n            _parentIds: function(node) {\n                var parent = node && node.parentNode();\n                var parents = [];\n                while (parent && parent.parentNode) {\n                    parents.unshift(parent.id);\n                    parent = parent.parentNode();\n                }\n\n                return parents;\n            },\n\n            expandTo: function(node) {\n                if (!(node instanceof kendo.data.Node)) {\n                    node = this.dataSource.get(node);\n                }\n\n                var parents = this._parentIds(node);\n\n                this.expandPath(parents);\n            },\n\n            _renderItem: function(options) {\n                if (!options.group) {\n                    options.group = {};\n                }\n\n                options.treeview = this.options;\n\n                options.r = this.templates;\n\n                return this.templates.item(options);\n            },\n\n            _renderGroup: function(options) {\n                var that = this;\n\n                options.renderItems = function(options) {\n                        var html = \"\",\n                            i = 0,\n                            items = options.items,\n                            len = items ? items.length : 0,\n                            group = options.group;\n\n                        group.length = len;\n\n                        for (; i < len; i++) {\n                            options.group = group;\n                            options.item = items[i];\n                            options.item.index = i;\n                            html += that._renderItem(options);\n                        }\n\n                        return html;\n                    };\n\n                options.r = that.templates;\n\n                return that.templates.group(options);\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"TreeView\", \"k-treeview-\");\n\n        ui.plugin(TreeView);\n    })(window.kendo.jQuery);\n\n}));\n"]}