{"version":3,"file":"kendo.filemanager.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","extend","deferred","Deferred","Class","Command","init","options","this","filemanager","CreateFolderCommand","fn","call","exec","that","commandStack","_commandStack","dataSource","_viewDataSource","removeProxy","_remove","bind","_item","_createNewModel","push","item","toJSON","fail","add","pushDestroy","RenameCommand","target","viewItem","_view","widgetComponent","dataItem","edit","_renameTreeViewItem","uid","data","treeView","getByUid","realItem","get","id","_prompt","type","defaultInput","name","done","newName","set","DeleteCommand","itemsToRemove","items","getSelected","is","length","_confirm","removeItems","_itemsToRemove","Array","isArray","_removeItem","itemToRemove","splice","then","remove","CopyCommand","targetDataSource","children","i","fileManagerNewItem","MoveCommand","promises","cloning","promise","_delete","whenAll","always","SortCommand","sortOptions","defaultSortOption","dir","field","sort","folderSortOption","SearchCommand","filter","operator","value","ChangeViewCommand","view","resize","OpenDialogCommand","dialog","open","console","warn","format","TogglePaneCommand","pane","resizable","getResizable","toggle","wrapper","find","handle","_resizeDraggable","CommandStack","_stack","_keys","guid","next","key","keys","resolve","command","reject","empty","ui","FileManagerCommand","commands","jQuery","Observable","SELECT","CHANGE","OPEN","KEYDOWN","KEYDOWNACTION","NS","fileManagerDraggables","fileManagerDragOrigin","Component","widget","element","Error","_bindEvents","_binding","_bound","ev","trigger","preventDefault","_setDSOptions","dataSourceOptions","_initDragAndDrop","dropFilter","draggable","kendoDraggable","hint","_hint","cursorOffset","top","left","holdToDrag","ignore","hold","_hold","userEvents","minHold","droptarget","kendoDropTargetArea","drop","_onDrop","dragenter","dropTarget","addClass","dragleave","removeClass","currentTarget","selectable","clear","select","cancel","selectedItems","messages","isDirectory","targetId","itemIds","refresh","setDataSource","destroy","ViewComponent","ViewComponents","registerViewComponent","componentName","component","getViewComponent","ListView","explicitOptions","defaultOptions","ariaLabel","kendoKeydown","_kendoKeydown","listView","isLocalBinding","layout","flex","direction","wrap","support","mobileOS","template","editTemplate","navigatable","_select","on","_dblClick","_mousedown","_keydown","_keydownAction","sender","isDirty","_modelFromElement","editable","dirty","_closeEditable","dataItems","entries","keyCode","ESC","node","closest","which","ENTER","preventKendoKeydown","_handleEnterKey","current","_triggerOpen","entry","addFolder","selected","off","TreeView","dataTextField","_refreshDataSource","action","parentNode","treeEl","activeDescendant","attr","map","hasChildren","findByUid","_progress","each","index","append","_shouldFocus","focus","existingItem","_nextVisible","removeAttr","_navigate","_expand","entryId","path","noop","selectedItem","reload","read","Grid","_setupColumns","grid","mode","confirmation","sortable","columns","title","nameField","getFileGroup","extension","htmlEncode","dateCreatedField","sizeField","size","getFileSizeMessage","table","_toggleFocusable","saveRow","F2","setTimeout","_editContainer","_tryCancel","cancelChanges","val","state","addBack","toggleClass","container","model","_destroyEditable","_displayRow","addRow","editRow","ToolBar","Item","toolbar","TemplateItem","CLICK","ACTION","FileManagerToolBar","_extendOptions","_attachEvents","events","concat","defaultTools","createFolder","text","rules","upload","sortDirection","buttons","icon","togglable","group","sortField","menuButtons","changeView","spacer","details","overflow","search","_click","_change","tools","Object","_extendToolsOptions","tool","toolOptions","toolRules","attributes","isPlainObject","JSON","parse","deepExtend","_mapButtonGroups","_mapMenuButtons","remote","hidden","button","initialView","isToolEnabled","toolName","found","args","fileManagerSearch","SearchTool","input","inputWrapper","renderIcon","placeholder","_inputHandler","_input","registerComponent","FileManagerDetailsToggle","label","switchElement","addUidAttr","addIdAttr","addOverflowAttr","switchInstance","Switch","change","checked","detailsChecked","unchecked","detailsUnchecked","fileManagerDetailsToggle","parent","Node","HierarchicalDataSource","DataSource","schemas","fields","defaultValue","hasDirectories","created","createdUtc","modified","modifiedUtc","FileEntry","getter","isFunction","isDirectoryObject","_initChildren","transport","parameterMap","FileManagerDataSource","_childrenOptions","e","collection","_updateChildrenField","isNew","_defaultId","fileEntry","serverFiltering","_hierarchicalFilter","schema","modelBase","LocalTransport","_attachBubbleHandlers","insert","result","_cleanDestroyed","_hasDirectories","_destroyed","create","_dataSource","observableFileManagerData","array","fetch","_data","ContextMenu","FileManagerContextMenu","_overrideTemplates","_restrictDefaultItems","_extendItems","_onSelect","_onOpen","templates","sprite","defaultItems","rename","spriteCssClass","delete","_extendItem","isEmptyObject","DataBoundWidget","outerHeight","NAVIGATE","ERROR","CLOSE","DATABINDING","DATABOUND","DROP","EXECUTE","COMMAND","DOT","fileManagerStyles","fileManagerTemplateStyles","FileManager","_outerHeight","header","navigation","contentContainer","content","preview","treeview","breadcrumb","list","uploadDialog","splitBar","splitBarHorizontal","splitBarHover","splitBarIcon","splitBarNavigation","splitBarPreview","filePreview","fileInfo","fileName","fileMeta","metaLabel","metaValue","_wrapper","_renderHeader","_renderContentContainer","_initContextMenu","_renderNavigation","_renderContent","_renderPreview","_initUploadDialog","_resizable","notify","height","contextMenu","uploadUrl","views","dialogs","width","moveConfirm","closable","deleteConfirm","renamePrompt","previewPane","metaFields","noFileTemplate","singleFileTemplate","multipleFilesTemplate","sortDirectionAsc","sortDirectionDesc","typeField","dateModifiedField","gridView","listLabel","gridLabel","treeLabel","okText","close","noFileSelected","typeSortOrder","nameSortOrder","autoSync","_errorHandler","unbind","_changeHandler","_error","xhr","status","statusText","_resizeHandler","onResize","_initToolbar","_tabIndex","menuOptions","executeCommand","_cacheFocus","_initTreeView","_initBreadcrumb","_initView","_initUpload","hide","previewContainer","_setPreviewPaneContent","previewTemplate","previewPaneMessages","previewPaneOptions","selection","styles","html","toolbarElement","toolbarOptions","treeViewElement","_load","_drop","indexOf","DELETE","confirm","kendoConfirm","_restoreFocus","prompt","kendoPrompt","activeElement","document","popup","visible","hasClass","_focusElement","_viewType","viewWrapper","breadcrumbElement","breadcrumbOptions","_breadcrumbChange","Breadcrumb","substring","shift","uploadInstance","dialogMessages","dialogElement","dialogOptions","modal","actions","_clearUploadFilesList","primary","_shouldInitUpload","Dialog","_toggleUploadDropZone","shouldInit","async","saveUrl","uploadElement","uploadOptions","autoUpload","dropZone","Upload","_sendUploadPathParameter","_success","clearAllFiles","zone","setOptions","source","_createResizableSplitBar","cssClass","hover","_initResizableNavigation","contentWrapperWidth","navigationWrapperWidth","contentWrapper","navigationWrapper","insertAfter","end","kendoResizable","start","delta","x","initialDelta","isRtl","getKendoResizable","_initResizablePreview","previewWrapperWidth","previewWrapper","insertBefore","_open","_cancel","el","join","commandName","commandOptions","navigate","load","sync","res","response","_navigateToParent","loaded","parentNodePath","_buildBreadcrumbPath","reverse","_adjustDimensions","gridSelector","listViewSelector","totalHeight","toolbarHeight","breadcrumbHeight","_resize","getSize","dimensions","_path","replace","isRoot","_sort","unbindResize","plugin"],"sources":["kendo.filemanager.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.listview', 'kendo.treeview', 'kendo.toolbar', 'kendo.switch', 'kendo.data', 'kendo.menu', 'kendo.breadcrumb', 'kendo.upload', 'kendo.dialog', 'kendo.resizable'], factory) :\n    factory();\n})((function () {\n    (function($, undefined$1) {\n            var kendo = window.kendo,\n                extend = $.extend,\n                deferred = $.Deferred,\n                Class = kendo.Class;\n\n            var Command = Class.extend({\n                init: function(options) {\n                    this.options = options;\n                    this.filemanager = options.filemanager;\n                }\n            });\n\n            var CreateFolderCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager._viewDataSource || filemanager.dataSource,\n                        removeProxy = that._remove.bind(that);\n\n                    that._item = dataSource._createNewModel();\n\n                    commandStack.push({ item: that._item.toJSON() }).fail(removeProxy);\n                    dataSource.add(that._item);\n                },\n                _remove: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        dataSource = filemanager._viewDataSource || filemanager.dataSource;\n\n                    dataSource.pushDestroy(that._item);\n                }\n            });\n\n            var RenameCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        target = that.options.target,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        viewItem = filemanager._view.widgetComponent.dataItem(target);\n\n                    if (target && viewItem) {\n                        commandStack.push({ target: target, item: viewItem });\n                        that.filemanager._view.edit(target);\n                    } else {\n                        that._renameTreeViewItem(target);\n                    }\n                },\n                _renameTreeViewItem: function(target) {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        uid = target.data(\"uid\"),\n                        item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid),\n                        realItem = that.filemanager.dataSource.get(item.id);\n\n                    that.filemanager._prompt({\n                        type: \"rename\",\n                        defaultInput: realItem.name,\n                        target: target\n                    }).done(function(newName) {\n                        commandStack.push({ target: target, item: realItem });\n                        realItem.set(\"name\", newName);\n                    });\n                }\n            });\n\n            var DeleteCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        target = that.options.target,\n                        filemanager = that.filemanager,\n                        items = filemanager.getSelected(),\n                        viewItem = that.filemanager._view.widgetComponent.dataItem(target),\n                        itemsToRemove;\n\n                    if (target && target.is(\".k-selected\") && items && items.length) {\n                        itemsToRemove = items;\n                    } else if (target && viewItem) {\n                        itemsToRemove = viewItem;\n                    } else if (target) {\n                        var uid = target.data(\"uid\");\n                        var item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid);\n                        var realItem = that.filemanager.dataSource.get(item.id);\n\n                        itemsToRemove = realItem;\n                    }\n\n                    filemanager._confirm({\n                        type: \"delete\",\n                        target: target\n                    })\n                    .done(function() {\n                        that.removeItems(itemsToRemove);\n                    });\n                },\n                removeItems: function(items) {\n                    var that = this;\n\n                    that._itemsToRemove = Array.isArray(items) ? items : [items];\n\n                    that._removeItem();\n                },\n                _removeItem: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager.dataSource,\n                        itemToRemove = !!that._itemsToRemove.length && that._itemsToRemove.splice(0,1)[0];\n\n                    if (itemToRemove) {\n                        commandStack.push({ item: itemToRemove })\n                            .then(that._removeItem.bind(that), that._removeItem.bind(that));\n\n                        dataSource.remove(itemToRemove);\n                    }\n                }\n            });\n\n            var CopyCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                    filemanager = that.filemanager,\n                    dataSource = filemanager.dataSource,\n                    commandStack = filemanager._commandStack,\n                    items = that.options.items,\n                    target = dataSource.get(that.options.target),\n                    targetDataSource = target.children;\n\n                    for (var i = 0; i < items.length; i++) {\n                        var item = dataSource.get(items[i]).toJSON();\n                        item.fileManagerNewItem = true;\n                        commandStack.push({ item: item, target: target });\n                        targetDataSource.add(item);\n                    }\n                }\n            });\n\n            var MoveCommand = Command.extend({\n                init: function(options) {\n                    var that = this;\n                    Command.fn.init.call(that, options);\n                    that._itemsToRemove = [];\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager.dataSource,\n                        items = that.options.items,\n                        target = dataSource.get(that.options.target),\n                        targetDataSource = target.children,\n                        promises = [];\n\n                    for (var i = 0; i < items.length; i++) {\n                        var item = dataSource.get(items[i]);\n                        var cloning = item.toJSON();\n                        cloning.fileManagerNewItem = true;\n\n                        var promise = commandStack.push({ item: item, target: target })\n                            .then(that._delete.bind(that));\n\n                            promises.push(promise);\n                            targetDataSource.add(cloning);\n                    }\n\n                    kendo.whenAll(promises).always(that._removeItem.bind(that));\n                },\n                _delete: function(data) {\n                    var that = this;\n                    that._itemsToRemove.push(data.item);\n                },\n                _removeItem: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager.dataSource,\n                        itemToRemove = !!that._itemsToRemove.length && that._itemsToRemove.splice(0,1)[0];\n\n                    if (itemToRemove) {\n                        commandStack.push({ item: itemToRemove })\n                            .then(that._removeItem.bind(that), that._removeItem.bind(that));\n\n                        dataSource.remove(itemToRemove);\n                    }\n                }\n            });\n\n            var SortCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        filemanager = that.filemanager,\n                        sortOptions = filemanager.defaultSortOption;\n\n                    extend(sortOptions, {\n                        dir: options.dir,\n                        field: options.field\n                    });\n\n                    filemanager._view.widgetComponent.dataSource.sort([ filemanager.folderSortOption, sortOptions ]);\n                }\n            });\n\n            var SearchCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        filemanager = that.filemanager,\n                        filter = {\n                            field: options.field,\n                            operator: options.operator,\n                            value: options.value\n                        };\n\n                    filemanager._view.widgetComponent.dataSource.filter(filter);\n                }\n            });\n\n            var ChangeViewCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        filemanager = that.filemanager;\n\n                    filemanager.view(options.value);\n                    filemanager.resize(true);\n                }\n            });\n\n            var OpenDialogCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        dialog = filemanager[that.options.type];\n\n                    if (dialog) {\n                        dialog.open();\n                    } else {\n                        window.console.warn(kendo.format(\"The {0} dialog is not available!\", that.options.type));\n                    }\n                }\n            });\n\n            var TogglePaneCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        pane = filemanager[that.options.type],\n                        resizable = that.getResizable();\n\n                    if (pane) {\n                        pane.toggle();\n\n                        if (resizable) {\n                            filemanager.wrapper\n                                .find(resizable.options.handle)\n                                .toggle();\n                        }\n                    }\n                },\n                getResizable: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        type = that.options.type;\n\n                    if (!filemanager._resizeDraggable) {\n                        return;\n                    }\n\n                    return filemanager._resizeDraggable[type];\n                }\n            });\n\n            var CommandStack = Class.extend({\n                init: function() {\n                    var that = this;\n\n                    that._stack = {};\n                    that._keys = [];\n                },\n                push: function(data) {\n                    var that = this,\n                        guid = kendo.guid();\n\n                    that._keys.push(guid);\n                    that._stack[guid] = {\n                        guid: guid,\n                        data: data,\n                        deferred: deferred()\n                    };\n\n                    return that._stack[guid].deferred;\n                },\n                next: function() {\n                    var that = this,\n                        key = that.keys().splice(0,1),\n                        nextCommand = that._stack[key];\n\n                    return nextCommand;\n                },\n                resolve: function(command) {\n                    var that = this;\n                    delete that._stack[command.guid];\n                    command.deferred.resolve(command.data);\n                },\n                reject: function(command) {\n                    var that = this;\n                    delete that._stack[command.guid];\n                    command.deferred.reject(command.data);\n                },\n                keys: function() {\n                    return this._keys;\n                },\n                empty: function() {\n                    return this.keys().length === 0;\n                }\n            });\n\n            extend(kendo.ui, {\n                filemanager: {\n                    FileManagerCommand: Command,\n                    CommandStack: CommandStack,\n                    commands: {\n                        CreateFolderCommand: CreateFolderCommand,\n                        RenameCommand: RenameCommand,\n                        DeleteCommand: DeleteCommand,\n                        MoveCommand: MoveCommand,\n                        CopyCommand: CopyCommand,\n                        SortCommand: SortCommand,\n                        SearchCommand: SearchCommand,\n                        ChangeViewCommand: ChangeViewCommand,\n                        OpenDialogCommand: OpenDialogCommand,\n                        TogglePaneCommand: TogglePaneCommand\n                    }\n                }\n            });\n\n        })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Observable = kendo.Observable,\n            extend = $.extend,\n            keys = kendo.keys,\n\n            NAVIGATE = \"navigate\",\n            SELECT = \"select\",\n            EXPAND = \"expand\",\n            CHANGE = \"change\",\n            OPEN = \"open\",\n            LOAD = \"load\",\n            KEYDOWN = \"keydown\",\n            KEYDOWNACTION = \"keydownAction\",\n\n            NS = \".kendoFileManagerViewComponent\",\n\n            fileManagerDraggables = [],\n            fileManagerDragOrigin = null;\n\n        var registerViewComponent = function(componentName, component) {\n            ui.filemanager.ViewComponents[componentName] = component;\n        };\n\n        var getViewComponent = function(componentName) {\n            return ui.filemanager.ViewComponents[componentName] || null;\n        };\n\n        var Component = Observable.extend({\n            init: function(widget, element, options) {\n                var that = this;\n\n                that.element = element;\n                that.options = options;\n\n                if (widget) {\n                    that.widgetComponent = new widget(element, options);\n                } else {\n                    throw new Error(\"The widget for the ViewComponent is not available! Please add the corresponding scripts!\");\n                }\n\n                Observable.fn.init.call(that);\n            },\n\n            _bindEvents: function() {\n                this.widgetComponent.bind(\"dataBinding\", this._binding.bind(this));\n                this.widgetComponent.bind(\"dataBound\", this._bound.bind(this));\n            },\n\n            _binding: function(ev) {\n                if (this.trigger(\"dataBinding\", ev)) {\n                    ev.preventDefault();\n                }\n            },\n\n            _bound: function() {\n                this.trigger(\"dataBound\");\n            },\n\n            _setDSOptions: function(options, dataSourceOptions) {\n                if (!options.dataSource && dataSourceOptions) {\n                    options.dataSource = dataSourceOptions;\n                }\n            },\n\n            _initDragAndDrop: function(element, filter) {\n                var that = this;\n\n                filter = filter || that.options.dropFilter;\n                element = element || that.element;\n\n                that.draggable = element.kendoDraggable({\n                    filter: filter,\n                    hint: that._hint.bind(that),\n                    cursorOffset: { top: -10, left: -50 },\n                    holdToDrag: true,\n                    ignore: \"input, .k-focusable\",\n                    hold: that._hold.bind(that)\n                }).data(\"kendoDraggable\");\n\n                that.draggable.userEvents.minHold = 150;\n\n                that.droptarget = element.kendoDropTargetArea({\n                    filter: filter,\n                    drop: that._onDrop.bind(that),\n                    dragenter: function(ev) {\n                        ev.dropTarget.addClass(\"k-filemanager-drop-target\");\n                    },\n                    dragleave: function(ev) {\n                        ev.dropTarget.removeClass(\"k-filemanager-drop-target\");\n                    }\n                }).data(\"kendoDraggable\");\n            },\n\n            _hold: function(ev) {\n                var that = this,\n                    target = ev.currentTarget;\n\n                if (!target.is(\".k-selected\")) {\n                    if (that.widgetComponent.selectable) {\n                        that.widgetComponent.selectable.clear();\n                    }\n                    that.widgetComponent.select(target);\n                }\n\n                if (that.widgetComponent.selectable) {\n                    that.widgetComponent.selectable.userEvents.cancel();\n                }\n            },\n\n            _hint: function(target) {\n                var that = this,\n                    item = that.widgetComponent.dataItem(target),\n                    selectedItems = that.widgetComponent.select();\n\n                fileManagerDragOrigin = that.widgetComponent;\n                fileManagerDraggables = selectedItems;\n\n                if (selectedItems.length > 1) {\n                    return kendo.format(\"<div class='k-filemanager-drag-hint'><span class='k-icon k-i-{0}'></span> <span>{1} {2}</span></div>\", \"file\", selectedItems.length, that.options.messages.items);\n                }\n\n                return kendo.format(\"<div class='k-filemanager-drag-hint'><span class='k-icon k-i-{0}'></span> <span>{1}</span></div>\", (item.isDirectory ? \"folder\" : \"file\"), item.name);\n            },\n\n            _onDrop: function(ev) {\n                var that = this,\n                    target = that.widgetComponent.dataItem(ev.dropTarget),\n                    targetId = target.id,\n                    itemIds = [];\n\n                if (!target.isDirectory) {\n                    return;\n                }\n\n                for (var i = 0; i < fileManagerDraggables.length; i++) {\n                    var id = fileManagerDragOrigin.dataItem(fileManagerDraggables[i]).id;\n                    itemIds.push(id);\n                }\n\n                this.trigger(\"drop\",{ target: targetId, items: itemIds });\n            },\n\n            getSelected: function() {\n                throw new Error(\"Not Implemented!\");\n            },\n\n            refresh: function(dataSource) {\n                this.widgetComponent.setDataSource(dataSource);\n            },\n\n            destroy: function() {\n                kendo.destroy(this.element);\n            }\n        });\n\n        extend(kendo.ui.filemanager, {\n                ViewComponent: Component,\n                ViewComponents: {},\n                registerViewComponent: registerViewComponent,\n                getViewComponent: getViewComponent\n            }\n        );\n\n        var ListView = Component.extend({\n            init: function(element, options, explicitOptions) {\n                var that = this,\n                    dataSourceOptions = explicitOptions.dataSource,\n                    messages = explicitOptions.messages;\n\n                options = extend({}, that.defaultOptions, options, {\n                    messages: messages,\n                    ariaLabel: explicitOptions.ariaLabel\n                });\n\n                that._setDSOptions(options, dataSourceOptions);\n                options.kendoKeydown = options.kendoKeydown || that._kendoKeydown.bind(that);\n\n                Component.fn.init.call(this, ui.ListView, element, options);\n\n                that.listView = that.widgetComponent;\n                that._bindEvents();\n\n                if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n\n            defaultOptions: {\n                layout: \"flex\",\n                flex: {\n                    direction: \"row\",\n                    wrap: \"wrap\"\n                },\n                selectable: kendo.support.mobileOS ? \"row\" : \"multiple\",\n                template: \"<div class='k-listview-item' title='#:name##:extension#'>\" +\n                                \"<div class='k-file-preview'><span class='k-file-icon k-icon k-i-#= !isDirectory ? kendo.getFileGroup(extension, true) : 'folder' #'></span></div>\" +\n                                \"<div class='k-file-name file-name'>#:name##:extension#</div>\" +\n                          \"</div>\",\n                editTemplate: \"<div class='k-listview-item'>\" +\n                                    \"<div class='k-file-preview'><span class='k-file-icon k-icon k-i-#= !isDirectory ? kendo.getFileGroup(extension, true) : 'folder' #'></span></div>\" +\n                                    \"<div class='k-file-name'><span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input type='text' class='k-input-inner' data-bind='value:name' name='name' required='required' /><span></div>\" +\n                              \"</div>\",\n                dropFilter: \".k-listview-item\",\n                navigatable: true\n            },\n\n            _bindEvents: function() {\n                var that = this,\n                    listView = that.listView;\n\n                listView.bind(CHANGE, that._select.bind(that));\n                listView.element.on(\"dblclick\" + NS, that._dblClick.bind(that));\n                listView.element.on(\"mousedown\" + NS, \".k-listview-item:not(.k-edit-item)\", that._mousedown.bind(that));\n                listView.element.on(KEYDOWN + NS, \".k-edit-item\", that._keydown.bind(that));\n                listView.element.on(KEYDOWN + NS, that._keydownAction.bind(that));\n\n                listView.bind(\"edit\", function(ev) {\n                    var sender = ev.sender;\n                    var input = ev.item.find(\"input\");\n\n                    input.on(\"blur\", function() {\n                        var isDirty = sender._modelFromElement(sender.editable.element).dirty;\n                        sender._closeEditable();\n                        if (!isDirty) {\n                            that.trigger(\"cancel\");\n                        }\n                    });\n                });\n\n                listView.bind(\"cancel\", function() {\n                    that.trigger(\"cancel\");\n                });\n\n                Component.fn._bindEvents.call(this);\n            },\n\n            _select: function() {\n                var that = this,\n                    dataItems = that.getSelected();\n\n                that.trigger(SELECT, { entries: dataItems });\n            },\n\n            _keydown: function(ev) {\n                var that = this;\n                if (ev.keyCode === kendo.keys.ESC) {\n                    that.listView._closeEditable();\n                    that.trigger(\"cancel\");\n                }\n            },\n\n            _keydownAction: function(ev) {\n                var that = this,\n                    target = $(ev.target).find(\".k-focus\");\n\n                if (target.length && !target.is(\".k-edit-item\")) {\n                    that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n                }\n            },\n\n            _mousedown: function(ev) {\n                var that = this,\n                    node = $(ev.target).closest(\".k-listview-item\");\n\n                if (ev.which === 3 && !node.is(\".k-selected\")) {\n                    that.listView.selectable.clear();\n                    that.listView.select(node);\n                }\n            },\n\n            _kendoKeydown: function(ev) {\n                var that = this;\n\n                if (ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                    that._handleEnterKey(ev);\n                }\n            },\n\n            _handleEnterKey: function(ev) {\n                var that = this,\n                    target = $(ev.target),\n                    node = that.listView.current();\n\n                if (that.widgetComponent.editable && target.is(\"input\")) {\n                    // Force blur to update item and close editable (cross browser)\n                    target.trigger(\"blur\");\n                } else if (!that.widgetComponent.editable) {\n                    that._triggerOpen(node);\n                }\n\n                ev.preventKendoKeydown = true;\n            },\n\n            _dblClick: function(ev) {\n                var that = this,\n                    node = $(ev.target).closest(\".k-listview-item\");\n\n                that._triggerOpen(node);\n            },\n\n            _triggerOpen: function(node) {\n                var that = this;\n\n                if (node.is(\".k-edit-item\")) {\n                    return;\n                }\n\n                var item = that.listView.dataItem(node);\n\n                if (item) {\n                    that.trigger(OPEN, { entry: item });\n                }\n            },\n\n            addFolder: function() {\n                this.listView.add();\n            },\n\n            edit: function(target) {\n                var that = this,\n                    selected = that.listView.select();\n\n                that.listView.edit(target || selected);\n            },\n\n            getSelected: function() {\n                var that = this,\n                items = that.listView.select(),\n                dataItems = [];\n\n                for (var i = 0; i < items.length; i++) {\n                    var item = that.listView.dataItem(items[i]);\n\n                    if (item) {\n                        dataItems.push(item);\n                    }\n                }\n\n                return dataItems;\n            },\n\n            destroy: function() {\n                this.listView.element.off(NS);\n                Component.fn.destroy.call(this);\n            }\n        });\n\n        ui.filemanager.registerViewComponent(\"list\", ListView);\n\n        var TreeView = Component.extend({\n            init: function(element, options, explicitOptions) {\n                var that = this,\n                    messages = explicitOptions.messages;\n\n                options = extend({}, that.defaultOptions, options, {\n                    messages: messages\n                });\n\n                Component.fn.init.call(this, ui.TreeView, element, options);\n\n                that.treeView = that.widgetComponent;\n                that._bindEvents();\n\n                if (explicitOptions.draggable !== false && !explicitOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n\n            defaultOptions: {\n                dataTextField: \"name\",\n                dropFilter: \".k-item\"\n            },\n\n            _refreshDataSource: function(ev) {\n                var that = this,\n                    treeView = that.treeView,\n                    action = ev.action,\n                    node = ev.node,\n                    parentNode = null,\n                    treeEl = treeView.element,\n                    activeDescendant = treeEl.attr(\"aria-activedescendant\"),\n                    items = ev.items.filter(function(item) {\n                        return item.isDirectory;\n                    }).map(function(item) {\n                        return extend({}, item.toJSON(), {\n                            id: item.id || kendo.guid(),\n                            hasChildren: item.hasChildren,\n                            items: []\n                        });\n                    });\n\n                if (node) {\n                    parentNode = treeView.findByUid(treeView.dataSource.get(node.id).uid);\n                    treeView._progress(parentNode, false);\n                }\n\n                if (!items.length) {\n                    return;\n                }\n\n                if (action == \"itemloaded\" || (parentNode && action === \"sync\")) {\n                    parentNode.find(\".k-item\").each(function(index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items, parentNode);\n\n                    if (that._shouldFocus) {\n                        treeView.current(parentNode);\n                        treeView.focus();\n                    }\n                } else if (action == \"remove\") {\n                    this._remove(items[0].id);\n                } else if (action == \"itemchange\") {\n                    var existingItem = treeView.dataSource.get(items[0].id);\n\n                    if (existingItem) {\n                        existingItem.set(ev.field, items[0][ev.field]);\n                    } else {\n                        treeView.append(items[0], parentNode);\n                    }\n                } else if (!treeView.dataSource.data().length) {\n                    treeView.append(items);\n                } else if (action === \"sync\" || (action === undefined$1 && !parentNode)) {\n                    treeView.items().each(function(index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items);\n\n                    if (that._shouldFocus) {\n                        treeView.current(treeView._nextVisible($()));\n                        treeView.focus();\n                    }\n                }\n\n                if (!!activeDescendant && treeEl.find(\"#\" + activeDescendant).length === 0) {\n                    treeEl.removeAttr(\"aria-activedescendant\");\n                }\n            },\n\n            _remove: function(id) {\n                var that = this,\n                    treeView = that.treeView,\n                    dataSource = treeView.dataSource,\n                    item = dataSource.get(id),\n                    node;\n\n                if (item) {\n                    node = treeView.findByUid(item.uid);\n                    treeView.remove(node);\n                }\n            },\n\n            _bindEvents: function() {\n                var that = this;\n\n                that.treeView.bind(SELECT, that._navigate.bind(that));\n                that.treeView.bind(EXPAND, that._expand.bind(that));\n                that.treeView.element.on(KEYDOWN, that._keydownAction.bind(that));\n            },\n\n            _keydownAction: function(ev) {\n                var that = this,\n                    target = $(ev.target).find(\".k-focus\").closest(\".k-item\");\n\n                that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n            },\n\n            _expand: function(ev) {\n                var that = this,\n                    treeView = that.treeView,\n                    entry = treeView.dataItem(ev.node);\n\n                ev.preventDefault();\n                that.trigger(LOAD, { entryId: entry.id });\n            },\n\n            _navigate: function(ev) {\n                var that = this,\n                    node = ev.node,\n                    entry = that.treeView.dataItem(node),\n                    path = entry.id;\n\n                ev.preventDefault();\n\n                that.trigger(NAVIGATE, { path: path, entry: entry.toJSON() });\n            },\n\n            _hold: $.noop,\n\n            getSelected: function() {\n                var that = this,\n                    selectedItem = that.treeView.element.find(\".k-selected\").closest(\".k-item\"),\n                    item = that.treeView.dataItem(selectedItem);\n\n                return item;\n            },\n\n            refresh: function(id) {\n                var that = this,\n                    treeView = that.treeView,\n                    entry = treeView.dataSource.get(id),\n                    node = entry && treeView.findByUid(entry.uid);\n\n                if (entry && node) {\n                    treeView.element.find(\".k-selected\").removeClass(\"k-selected\");\n                    node.find(\"> div .k-in\").removeClass(\"k-hover\").addClass(\"k-selected\");\n                }\n            },\n\n            reload: function() {\n                this.treeView.dataSource.read();\n            }\n        });\n\n        ui.filemanager.registerViewComponent(\"tree\", TreeView);\n\n        if (kendo.ui.Grid) {\n            var Grid = Component.extend({\n                init: function(element, options, explicitOptions) {\n                    var that = this,\n                        dataSourceOptions = explicitOptions.dataSource,\n                        messages = explicitOptions.messages;\n\n                    options = extend({}, that.defaultOptions, options, {\n                        messages: messages\n                    });\n\n                    that._setDSOptions(options, dataSourceOptions);\n                    that._setupColumns(options, messages);\n                    options.kendoKeydown = options.kendoKeydown || that._kendoKeydown.bind(that);\n\n                    Component.fn.init.call(this, ui.Grid, element, options);\n\n                    that.grid = that.widgetComponent;\n                    that._bindEvents();\n\n                    if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                        that._initDragAndDrop();\n                    }\n\n                    if (explicitOptions.ariaLabel) {\n                        that.element.find(\"[role=grid]\").attr(\"aria-label\", explicitOptions.ariaLabel);\n                    }\n                },\n\n                defaultOptions: {\n                    selectable: kendo.support.mobileOS ? \"row\" : \"multiple\",\n                    editable: {\n                        mode: \"inline\",\n                        confirmation: false\n                    },\n                    sortable: true,\n                    dropFilter: \"tr:not(.k-grid-edit-row)\",\n                    navigatable: true\n                },\n\n                _setupColumns: function(options, messages) {\n                    if (!options.columns) {\n                        options.columns = [\n                            { field: \"name\", title: messages.nameField || \"Name\", template: function(item) {\n                                var icon = !item.isDirectory ? kendo.getFileGroup(item.extension, true) : \"folder\";\n\n                                var template = \"<div class='file-group-icon'>\" +\n                                                    \"<span class='k-icon k-i-\" + icon + \"'></span>\" +\n                                                \"</div>\" +\n                                                \"<div class='file-name'>\" + kendo.htmlEncode(item.name + item.extension) + \"<div>\";\n\n                                return template;\n                            } },\n                            { field: \"created\", title: messages.dateCreatedField , format: \"{0:G}\" },\n                            { field: \"size\", title: messages.sizeField, template: function(item) {\n                                if (item.size > 0) {\n                                    return kendo.getFileSizeMessage(item.size);\n                                } else {\n                                    return \"\";\n                                }\n                            } }\n                        ];\n                    }\n                },\n\n                _bindEvents: function() {\n                    var that = this,\n                        grid = that.grid;\n\n                    grid.bind(CHANGE, that._select.bind(that));\n                    grid.table.on(\"dblclick\" + NS, that._dblClick.bind(that));\n                    grid.table.on(\"mousedown\" + NS, \"tr:not(.k-grid-edit-row)\", that._mousedown.bind(that));\n                    grid.table.on(KEYDOWN + NS, \".k-grid-edit-row\", that._keydown.bind(that));\n                    grid.table.on(KEYDOWN + NS, that._keydownAction.bind(that));\n\n                    grid.bind(\"edit\", function() {\n                        that._toggleFocusable(true);\n                    });\n\n                    grid.bind(\"cancel\", function() {\n                        that.trigger(\"cancel\");\n                    });\n\n                    grid.saveRow = $.noop;\n\n                    Component.fn._bindEvents.call(this);\n                },\n\n                _kendoKeydown: function(ev) {\n                    var that = this,\n                        current = that.grid.current(),\n                        node = current ? current.closest(\"tr[data-uid]\") : null;\n\n                    if (node && ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                        that._triggerOpen(node);\n                        ev.preventKendoKeydown = true;\n                    }\n\n                    if (ev.keyCode === keys.F2) {\n                        ev.preventKendoKeydown = true;\n                    }\n                },\n\n                _keydownAction: function(ev) {\n                    var that = this,\n                        target = $(ev.target).find(\".k-focus\").closest(\"tr\");\n\n                    if (target.length && !target.is(\".k-grid-edit-row\")) {\n                        that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n                    }\n                },\n\n                _keydown: function(ev) {\n                    var that = this,\n                        grid = that.grid;\n\n                    if (!$(ev.target).closest(\".k-grid-edit-row\").length) {\n                        return;\n                    }\n\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        setTimeout(function() {\n                            var editorContainer = that.grid._editContainer || $();\n\n                            // force blur event for inputs\n                            editorContainer.find(\"input\").trigger(\"blur\");\n\n                            that._closeEditable();\n                        });\n\n                        that._tryCancel();\n                    }\n\n                    if (ev.keyCode === kendo.keys.ESC) {\n                        grid.cancelChanges();\n                        that.trigger(\"cancel\");\n                    }\n                },\n\n                _mousedown: function(ev) {\n                    var that = this,\n                        node = $(ev.target).closest(\"tr[data-uid]\");\n\n                    if (ev.which === 1 && that.grid.editable) {\n                        setTimeout(function() {\n                            that._closeEditable();\n                        });\n\n                        that._tryCancel();\n                    }\n\n                    if (ev.which === 3 && !node.is(\".k-selected\")) {\n                        that.grid.selectable.clear();\n                        that.grid.select(node);\n                    }\n                },\n\n                _tryCancel: function() {\n                    var that = this,\n                        grid = that.grid,\n                        container;\n\n                    if (grid.editable) {\n                        container = grid._editContainer;\n                        if (!container.find(\"input\").val()) {\n                            grid.cancelChanges();\n                        }\n                    }\n\n                    setTimeout(function() {\n                        that._toggleFocusable(false);\n                    });\n\n                },\n\n                _toggleFocusable: function(state) {\n                    var that = this,\n                        grid = that.grid;\n\n                    grid.table.find(\"tr,td\").children().addBack().toggleClass(\"k-focusable\", state);\n                },\n\n                _closeEditable: function() {\n                    var that = this,\n                        container;\n\n                    if (that.grid.editable && !that.grid.editable.options.model.dirty) {\n                        container = that.grid._editContainer;\n                        that.grid._destroyEditable();\n                        that.grid._displayRow(container);\n                        that.trigger(\"cancel\");\n                    }\n                },\n\n                _select: function() {\n                    var that = this,\n                        dataItems = that.getSelected();\n\n                    that.trigger(SELECT, { entries: dataItems });\n                },\n\n                _dblClick: function(ev) {\n                    var that = this,\n                        node = $(ev.target).closest(\"tr[data-uid]\");\n\n                    that._triggerOpen(node);\n                },\n\n                _triggerOpen: function(node) {\n                    var that = this;\n\n                    if (node.is(\".k-grid-edit-row\")) {\n                        return;\n                    }\n\n                    var item = that.grid.dataItem(node);\n\n                    if (item) {\n                        that.trigger(OPEN, { entry: item });\n                    }\n                },\n\n                getSelected: function() {\n                    var that = this,\n                    items = that.grid.select(),\n                    dataItems = [];\n\n                    for (var i = 0; i < items.length; i++) {\n                        dataItems.push(that.grid.dataItem(items[i]));\n                    }\n\n                    return dataItems;\n                },\n\n                addFolder: function() {\n                    this.grid.addRow();\n                },\n\n                edit: function(target) {\n                    var that = this,\n                        selected = that.grid.select();\n\n                    that.grid.editRow(target || selected);\n                },\n\n                destroy: function() {\n                    this.grid.table.off(NS);\n                    this.grid.element.off(NS);\n                    Component.fn.destroy.call(this);\n                }\n            });\n\n            ui.filemanager.registerViewComponent(\"grid\", Grid);\n        }\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            ToolBar = kendo.ui.ToolBar,\n            Item = kendo.toolbar.Item,\n            TemplateItem = kendo.toolbar.TemplateItem,\n\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            CLOSE = \"close\",\n            ACTION = \"action\",\n            CHANGE = \"change\",\n            NS = \".fileManagerToolbar\";\n\n        var FileManagerToolBar = ToolBar.extend({\n            init: function(element, options) {\n                var that = this;\n\n                that._extendOptions(options);\n\n                ToolBar.fn.init.call(that, element, options);\n\n                that._attachEvents();\n            },\n\n            events: ToolBar.fn.events.concat([\n                ACTION\n            ]),\n\n            defaultTools: {\n                createFolder: { type: \"button\", text: \"New Folder\", name: \"createFolder\", command: \"CreateFolderCommand\", rules: \"{ \\\"remote\\\": true }\" },\n                upload: { type: \"button\", text: \"Upload\", name: \"upload\", command: \"OpenDialogCommand\", options: \"{ \\\"type\\\": \\\"uploadDialog\\\" }\", rules: \"{ \\\"remote\\\": true }\" },\n                sortDirection: { type: \"buttonGroup\", text: \"Sort Direction\", name: \"sortDirection\",\n                    buttons: [\n                        { name: \"sortDirectionAsc\", icon: \"sort-asc-sm\", togglable: true, group: \"sortDirection\", command: \"SortCommand\", options: \"{ \\\"dir\\\": \\\"asc\\\" }\", selected: true },\n                        { name: \"sortDirectionDesc\", icon: \"sort-desc-sm\", togglable: true, group: \"sortDirection\", command: \"SortCommand\", options: \"{ \\\"dir\\\": \\\"desc\\\" }\" }\n                    ]\n                },\n                sortField: { type: \"splitButton\", text: \"Sort By\", name: \"sortField\", command: \"SortCommand\", menuButtons: [\n                    { name: \"nameField\", text: \"Name\", options: \"{\\\"field\\\": \\\"name\\\"}\", command: \"SortCommand\" },\n                    { name: \"typeField\", text: \"Type\", options: \"{\\\"field\\\": \\\"extension\\\"}\", command: \"SortCommand\" },\n                    { name: \"sizeField\", text: \"Size\", options: \"{\\\"field\\\": \\\"size\\\"}\", command: \"SortCommand\" },\n                    { name: \"dateCreatedField\", text: \"Date created\", options: \"{\\\"field\\\": \\\"createdUtc\\\"}\", command: \"SortCommand\" },\n                    { name: \"dateModifiedField\", text: \"Date modified\", options: \"{\\\"field\\\": \\\"modifiedUtc\\\"}\", command: \"SortCommand\" }\n                ] },\n                changeView: { type: \"buttonGroup\", text: \"Change View\", name: \"changeView\",\n                    buttons: [\n                        { name: \"gridView\", icon: \"grid-layout\", togglable: true, group: \"changeView\", command: \"ChangeViewCommand\", options: \"grid\" },\n                        { name: \"listView\", icon: \"grid\", togglable: true, group: \"changeView\", command: \"ChangeViewCommand\", options: \"list\" }\n                    ]\n                },\n                spacer: { type: \"spacer\" },\n                details: { type: \"fileManagerDetailsToggle\", text: \"View Details\", name: \"details\", overflow: \"never\", command: \"TogglePaneCommand\", options: \"{ \\\"type\\\": \\\"preview\\\" }\" },\n                search: { type: \"fileManagerSearch\", text: \"Search\", name: \"search\", command: \"SearchCommand\", icon: \"search\", overflow: \"never\", options: \"{ \\\"field\\\": \\\"name\\\", \\\"operator\\\": \\\"startswith\\\" }\" }\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.bind(TOGGLE, that._click.bind(that));\n                that.bind(CLOSE, that._click.bind(that));\n                that.bind(CLICK, that._click.bind(that));\n                that.bind(CHANGE, that._change.bind(that));\n            },\n\n            _extendOptions: function(options) {\n                var that = this,\n                    tools = options.items ? options.items : Object.keys(that.defaultTools);\n\n                that.options = options;\n\n                that.options.items = that._extendToolsOptions(tools);\n            },\n\n            _extendToolsOptions: function(tools) {\n                var that = this,\n                    messages = that.options.messages;\n\n                if (!tools.length) {\n                    return;\n                }\n\n                return tools.map(function(tool) {\n                    var isBuiltInTool = $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name,\n                        toolOptions, toolRules, attributes;\n\n                    tool = isBuiltInTool ? tool.name : tool;\n                    toolOptions = $.isPlainObject(tool) ? tool : extend({}, that.defaultTools[tool]);\n                    toolRules = toolOptions.rules ? JSON.parse(toolOptions.rules) : {};\n                    attributes = {\n                        \"aria-label\": messages[toolOptions.name],\n                        \"title\": messages[toolOptions.name],\n                        \"data-command\": toolOptions.command,\n                        \"data-options\": toolOptions.options\n                    };\n\n                    if (toolOptions.type === \"fileManagerDetailsToggle\") {\n                        delete attributes[\"aria-label\"];\n                    }\n\n                    kendo.deepExtend(toolOptions, {\n                        id: toolOptions.name + \"-\" + kendo.guid(),\n                        name: toolOptions.name,\n                        text: messages[toolOptions.name],\n                        attributes: attributes,\n                        overflow: toolOptions.overflow\n                    });\n\n                    if (toolOptions.type === \"buttonGroup\") {\n                        delete toolOptions.attributes[\"aria-label\"];\n                        toolOptions.buttons = toolOptions.buttons.map(that._mapButtonGroups.bind(that));\n                    }\n\n                    if (toolOptions.type === \"splitButton\") {\n                        toolOptions.menuButtons = toolOptions.menuButtons.map(that._mapMenuButtons.bind(that));\n                    }\n\n                    if (toolRules.remote && that.options.filemanager.dataSource.isLocalBinding) {\n                        toolOptions.hidden = true;\n                    }\n\n                    return toolOptions;\n                }, that);\n            },\n\n            _mapButtonGroups: function(button) {\n                var that = this,\n                    messages = that.options.messages;\n\n                if (button.group === \"changeView\" && button.options === that.options.filemanager.options.initialView) {\n                    button.selected = true;\n                }\n\n                return kendo.deepExtend(button,{\n                    attributes: extend({}, button.attributes, {\n                        \"aria-label\": messages[button.name],\n                        \"title\": messages[button.name],\n                        \"data-command\": button.command,\n                        \"data-options\": button.options\n                    })\n                });\n            },\n\n            _mapMenuButtons: function(button) {\n                var that = this,\n                    messages = that.options.messages;\n\n                return kendo.deepExtend(button,{\n                    text: messages[button.name],\n                    attributes: extend({}, button.attributes, {\n                        \"aria-label\": messages[button.name],\n                        \"title\": messages[button.name],\n                        \"data-command\": button.command,\n                        \"data-options\": button.options\n                    })\n                });\n            },\n\n            _click: function(ev) {\n                var command = $(ev.target).data(\"command\"),\n                    options = $(ev.target).data(\"options\");\n\n                if (!command) {\n                    return;\n                }\n\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n\n            _change: function(ev) {\n                var command = $(ev.target).data(\"command\"),\n                    options = $(ev.target).data(\"options\");\n\n                options = extend({}, options, { value: $(ev.target).val() });\n\n                if (!command) {\n                    return;\n                }\n\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n\n            isToolEnabled: function(toolName) {\n                var that = this,\n                    options = that.options,\n                    found = false;\n\n                for (var i = 0; i < options.items.length; i++) {\n                    if (options.items[i].name == toolName) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                return options.items[toolName] || found;\n            },\n\n            action: function(args) {\n                this.trigger(ACTION, args);\n            },\n\n            destroy: function() {\n                if (this.fileManagerSearch) {\n                    this.fileManagerSearch.destroy();\n                }\n\n                ToolBar.fn.destroy.call(this);\n            }\n        });\n\n        var SearchTool = TemplateItem.extend({\n            init: function(options, toolbar) {\n                var that = this,\n                    input = $(\"<input class='k-input-inner' autocomplete='off' />\"),\n                    icon = $(\"<span class='k-input-icon k-icon k-i-search'/>\"),\n                    inputWrapper = $('<span class=\"k-searchbox k-input k-input-md k-rounded-md k-input-solid\"></span>');\n\n                that.input = input;\n                that.icon = icon;\n\n                TemplateItem.fn.init.call(this, inputWrapper, options, toolbar);\n\n                that.options.type = \"fileManagerSearch\";\n\n                that.renderIcon();\n\n                inputWrapper.append(icon).append(input);\n\n                that.input.attr({\n                    placeholder: that.options.text,\n                    title: that.options.text\n                });\n\n                that._bindEvents();\n                that.toolbar.fileManagerSearch = that;\n            },\n            attributes: function() {\n                if (this.options.attributes) {\n                    this.input.attr(this.options.attributes);\n                }\n            },\n            renderIcon: function() {\n                if (this.options.icon) {\n                    this.icon.addClass(\"k-icon k-i-\" + this.options.icon);\n                }\n            },\n            _bindEvents: function() {\n                this._inputHandler = this._input.bind(this);\n                this.input.on(\"input\" + NS, this._inputHandler);\n            },\n            _input: function(ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.target });\n            },\n            destroy: function() {\n                this.element.off(NS);\n            }\n        });\n\n        kendo.toolbar.registerComponent(\"fileManagerSearch\", SearchTool);\n\n        var FileManagerDetailsToggle = Item.extend({\n            init: function(options, toolbar) {\n                var that = this,\n                    element = $(\"<div class='k-filemanager-details-toggle'></div>\"),\n                    label = $(\"<label>\" + options.text + \"</label>\"),\n                    switchElement = $(\"<input title='\" + options.text + \"' />\");\n\n                that.element = element;\n                that.input = switchElement;\n                that.label = label;\n                that.options = options;\n                that.toolbar = toolbar;\n\n                that.attributes();\n                that.addUidAttr();\n                that.addIdAttr();\n                that.addOverflowAttr();\n\n                that.element.append(that.label);\n                that.element.append(that.input);\n\n                that.input.attr(\"aria-label\", options.text);\n\n                that.switchInstance = new kendo.ui.Switch(that.input, {\n                    change: that._change.bind(that),\n                    messages: {\n                        checked: toolbar.options.messages.detailsChecked,\n                        unchecked: toolbar.options.messages.detailsUnchecked\n                    }\n                });\n\n                that.label.on(CLICK + NS, that._click.bind(that));\n\n                that.toolbar.fileManagerDetailsToggle = that;\n            },\n            _change: function(ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.sender.wrapper.parent() });\n            },\n            _click: function(ev) {\n                this.switchInstance.toggle();\n\n                this.toolbar.trigger(CHANGE, { target: $(ev.target).parent() });\n            },\n            destroy: function() {\n                this.element.off(NS);\n            }\n        });\n\n        kendo.toolbar.registerComponent(\"fileManagerDetailsToggle\", FileManagerDetailsToggle);\n\n        extend(kendo.ui.filemanager, {\n            ToolBar: FileManagerToolBar\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            data = kendo.data,\n            Node = data.Node,\n            HierarchicalDataSource = data.HierarchicalDataSource,\n            DataSource = data.DataSource;\n\n        extend(true, kendo.data, {\n            schemas: {\n                \"filemanager\": {\n                    data: function(data) {\n                        return data.items || data || [];\n                    },\n                    model: {\n                        id: \"path\",\n                        hasChildren: \"hasDirectories\",\n                        fields: {\n                            name: { editable: true, type: \"string\", defaultValue: \"New Folder\" },\n                            size: { editable: false, type: \"number\" },\n                            path: { editable: false, type: \"string\" },\n                            extension: { editable: false, type: \"string\" },\n                            isDirectory: { editable: false, defaultValue: true, type: \"boolean\" },\n                            hasDirectories: { editable: false, defaultValue: false, type: \"boolean\" },\n                            created: { type: \"date\", editable: false },\n                            createdUtc: { type: \"date\", editable: false },\n                            modified: { type: \"date\", editable: false },\n                            modifiedUtc: { type: \"date\", editable: false }\n                        }\n                    }\n                }\n            }\n        });\n\n        var FileEntry = Node.define({\n            init: function(value) {\n                var that = this,\n                    isDirectory = this.isDirectory;\n\n                Node.fn.init.call(this, value);\n\n                if (typeof isDirectory === \"string\") {\n                isDirectory = kendo.getter(isDirectory);\n                }\n\n                if (kendo.isFunction(isDirectory)) {\n                    var isDirectoryObject = isDirectory.call(that, that);\n\n                    if (isDirectoryObject && isDirectoryObject.length === 0) {\n                        that.isDirectory = false;\n                    } else {\n                        that.isDirectory = !!isDirectoryObject;\n                    }\n                }\n\n                if (that.isDirectory) {\n                    that._initChildren();\n                }\n            },\n            _initChildren: function() {\n                var that = this;\n                var children, transport, parameterMap;\n\n                if (!(that.children instanceof kendo.data.FileManagerDataSource)) {\n                    children = that.children = new kendo.data.FileManagerDataSource(that._childrenOptions);\n\n                    transport = children.transport;\n                    parameterMap = transport.parameterMap;\n\n                    transport.parameterMap = function(data, type) {\n                        if (type === \"read\" || type === \"create\") {\n                            data.target = that.id;\n                        }\n\n                        if (parameterMap) {\n                            data = parameterMap.call(that, data, type);\n                        }\n\n                        return data;\n                    };\n\n                    children.parent = function() {\n                        return that;\n                    };\n\n                    children.bind(\"change\", function(e) {\n                        e.node = e.node || that;\n                        that.trigger(\"change\", e);\n                    });\n\n                    children.bind(\"error\", function(e) {\n                        var collection = that.parent();\n\n                        if (collection) {\n                            e.node = e.node || that;\n                            collection.trigger(\"error\", e);\n                        }\n                    });\n\n                    that._updateChildrenField();\n                }\n            },\n            isNew: function() {\n                if (this.fileManagerNewItem) {\n                    delete this.fileManagerNewItem;\n                    return true;\n                }\n\n                return this.id === this._defaultId;\n            }\n        });\n\n\n        var FileManagerDataSource = HierarchicalDataSource.extend({\n            init: function(options) {\n                var fileEntry = FileEntry.define({\n                    children: options\n                });\n\n                if (options.filter && !options.serverFiltering) {\n                    this._hierarchicalFilter = options.filter;\n                    options.filter = null;\n                }\n\n                DataSource.fn.init.call(this, $.extend(true, {}, { schema: { modelBase: fileEntry, model: fileEntry } }, options));\n\n                this.isLocalBinding = this.transport instanceof kendo.data.LocalTransport;\n\n                this._attachBubbleHandlers();\n            },\n            insert: function(index, model) {\n                var parentNode = this.parent();\n\n                if (parentNode && parentNode._initChildren) {\n                    if (model && model.isDirectory) {\n                        parentNode.hasDirectories = true;\n                    }\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n\n                return DataSource.fn.insert.call(this, index, model);\n            },\n            remove: function(node) {\n                var that = this,\n                    parentNode = node.parentNode(),\n                    dataSource = that,\n                    result;\n\n                if (parentNode && parentNode._initChildren) {\n                    dataSource = parentNode.children;\n                }\n\n                that._cleanDestroyed(node);\n\n                result = DataSource.fn.remove.call(dataSource, node);\n\n                if (parentNode && (dataSource.data() && !dataSource.data().length)) {\n                    parentNode.hasChildren = false;\n                } else if (parentNode && !this._hasDirectories(parentNode)) {\n                    parentNode.hasDirectories = false;\n                }\n\n                return result;\n            },\n            _cleanDestroyed: function(node) {\n                var that = this,\n                    dataSource = that;\n\n                if (node.parentNode && node.parentNode()) {\n                    node = node.parentNode();\n                    dataSource = node.children;\n                    dataSource._destroyed = [];\n                    that._cleanDestroyed(node);\n                } else {\n                    dataSource._destroyed = [];\n                }\n            },\n            _hasDirectories: function(node) {\n                var result;\n\n                if (!node.children.data()) {\n                    return false;\n                }\n\n                result = node.children.data().filter(function(item) {\n                    return item.isDirectory;\n                });\n\n                return !!result.length;\n            }\n        });\n\n        FileManagerDataSource.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            if (data && data._dataSource) {\n                return data._dataSource;\n            }\n\n            dataSource.data = data;\n\n            return dataSource instanceof FileManagerDataSource ? dataSource : new FileManagerDataSource(dataSource);\n        };\n\n        kendo.observableFileManagerData = function(array) {\n            var dataSource = FileManagerDataSource.create({\n                data: array,\n                schema: kendo.data.schemas.filemanager\n            });\n\n            dataSource.fetch();\n\n            dataSource._data._dataSource = dataSource;\n\n            return dataSource._data;\n        };\n\n        extend(kendo.data, {\n            FileManagerDataSource: FileManagerDataSource,\n            FileEntry: FileEntry\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            template = kendo.template,\n            ContextMenu = kendo.ui.ContextMenu,\n\n            ACTION = \"action\";\n\n        var FileManagerContextMenu = ContextMenu.extend({\n            init: function(element, options) {\n                var that = this;\n\n                ContextMenu.fn.init.call(that, element, options);\n\n                that._overrideTemplates();\n                that._restrictDefaultItems();\n                that._extendItems();\n\n                that.bind(\"select\", that._onSelect.bind(that));\n                that.bind(\"open\", that._onOpen.bind(that));\n            },\n\n            _overrideTemplates: function() {\n                this.templates.sprite = template(\"#if(spriteCssClass) {#<span class='#= spriteCssClass #'></span>#}#\");\n            },\n\n            _restrictDefaultItems: function() {\n                var that = this;\n\n                if (that.options.isLocalBinding) {\n                    that.defaultItems = {};\n                }\n            },\n\n            defaultItems: {\n                \"rename\": { text: \"Rename\", spriteCssClass: \"k-icon k-i-edit\", command: \"RenameCommand\" },\n                \"delete\": { text: \"Delete\", spriteCssClass: \"k-icon k-i-delete\", command: \"DeleteCommand\" }\n            },\n\n            events: ContextMenu.fn.events.concat([\n                ACTION\n            ]),\n\n            _extendItems: function() {\n                var that = this,\n                    items = that.options.items,\n                    item, isBuiltInTool;\n\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n\n                        if ($.isPlainObject(item) ) {\n                            that._extendItem(item);\n                            that.append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._extendItem(item);\n                            that.append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._extendItem(item);\n                        that.append(item);\n                    }\n                }\n            },\n\n            _extendItem: function(item) {\n                var that = this,\n                    messages = that.options.messages;\n\n                extend(item, {\n                    text: messages[item.text],\n                    spriteCssClass: item.spriteCssClass || \"\",\n                    attr: {\n                        \"data-command\": item.command\n                    }\n                });\n            },\n\n            _onSelect: function(ev) {\n                var command = $(ev.item).data(\"command\");\n                var target = $(ev.target);\n\n                if (!command) {\n                    return;\n                }\n\n                this.action({\n                    command: command,\n                    options: { target: target }\n                });\n            },\n\n            _onOpen: function(ev) {\n                var menu = ev.sender,\n                    items = menu.options.items;\n\n                if (!items && $.isEmptyObject(this.defaultItems)) {\n                    ev.preventDefault();\n                }\n            },\n\n            action: function(args) {\n                this.trigger(ACTION, args);\n            }\n        });\n\n        extend(kendo.ui.filemanager, {\n            ContextMenu: FileManagerContextMenu\n        });\n\n        })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"filemanager\",\n        name: \"FileManager\",\n        category: \"web\",\n        description: \"The FileManager widget displays offers file management functionality.\",\n        depends: [ \"core\", \"data\", \"listview\", \"toolbar\", \"breadcrumb\", \"menu\", \"treeview\", \"upload\", \"dialog\", \"switch\", \"resizable\", \"selectable\", \"editable\" ],\n        features: [{\n            id: \"filemanager-grid-view\",\n            name: \"GridView\",\n            description: \"Support for GridView\",\n            depends: [ \"grid\" ]\n        }]\n    };\n\n    (function($, undefined$1) {\n        var ui = kendo.ui,\n            extend = $.extend,\n            isPlainObject = $.isPlainObject,\n            isArray = Array.isArray,\n            DataBoundWidget = ui.DataBoundWidget,\n            template = kendo.template,\n            outerHeight = kendo._outerHeight,\n\n            NAVIGATE = \"navigate\",\n            SELECT = \"select\",\n            OPEN = \"open\",\n            ERROR = \"error\",\n            CHANGE = \"change\",\n            UPLOAD = \"upload\",\n            SUCCESS = \"success\",\n            CLOSE = \"close\",\n            HIDE = \"hide\",\n            LOAD = \"load\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            DROP = \"drop\",\n            EXECUTE = \"execute\",\n            COMMAND = \"command\",\n            KEYDOWNACTION = \"keydownAction\",\n            CANCEL = \"cancel\",\n\n            TREE_TYPE = \"tree\",\n            DOT = \".\";\n\n        var fileManagerStyles = {\n            wrapper: \"k-widget k-filemanager\",\n            header: \"k-filemanager-header\",\n            navigation: \"k-filemanager-navigation\",\n            contentContainer: \"k-filemanager-content-container\",\n            content: \"k-filemanager-content\",\n            preview: \"k-filemanager-preview\",\n            toolbar: \"k-filemanager-toolbar\",\n            treeview: \"k-filemanager-treeview\",\n            breadcrumb: \"k-filemanager-breadcrumb\",\n            view: \"k-filemanager-view\",\n            grid: \"k-filemanager-grid\",\n            list: \"k-filemanager-listview\",\n            upload: \"k-filemanager-upload\",\n            uploadDialog: \"k-filemanager-upload-dialog\",\n            splitBar: \"k-splitbar\",\n            splitBarHorizontal: \"k-splitbar-horizontal k-splitbar-draggable-horizontal\",\n            splitBarHover: \"k-splitbar-horizontal-hover\",\n            splitBarIcon: \"k-icon k-resize-handle\",\n            splitBarNavigation: \"k-filemanager-splitbar-navigation\",\n            splitBarPreview: \"k-filemanager-splitbar-preview\",\n            resizable: \"k-filemanager-resizable\"\n        };\n\n        var fileManagerTemplateStyles = {\n            filePreview: \"k-file-preview\",\n            fileInfo: \"k-file-info\",\n            fileName: \"k-file-name\",\n            fileMeta: \"k-file-meta\",\n            metaLabel: \"k-file-meta-label\",\n            metaValue: \"k-file-meta-value\",\n            extension: \"k-file-type\",\n            size: \"k-file-size\",\n            created: \"k-file-created\",\n            modified: \"k-file-modified\"\n        };\n\n        var viewTypes = {\n            grid: \"grid\",\n            list: \"list\"\n        };\n\n        var NO_FILE_PREVIEW_TEMPLATE = '' +\n            '<div class=\"#:styles.fileInfo#\">' +\n                '<div class=\"#:styles.filePreview#\">' +\n                    '<span class=\"k-file-icon k-icon k-i-none\"></span>' +\n                '</div>' +\n                '<span class=\"#:styles.fileName#\" k-no-file-selected>#: messages.noFileSelected #</span>' +\n            '</div>';\n\n        var SINGLE_FILES_PREVIEW_TEMPLATE = '' +\n            '<div class=\"#:styles.fileInfo#\">' +\n                '<div class=\"#:styles.filePreview#\">' +\n                    '<span class=\"k-file-icon k-icon k-i-#: !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension, true) : \"folder\" #\"></span>' +\n                '</div>' +\n                '<span class=\"#:styles.fileName#\">#:selection[0].name#</span>' +\n                '#if(metaFields){#' +\n                    '<dl class=\"#:styles.fileMeta#\">' +\n                        '#for(var i = 0; i < metaFields.length; i+=1){#' +\n                            '#var field = metaFields[i]#' +\n                            '<dt class=\"#:styles.metaLabel#\">#:messages[field]#: </dt>' +\n                            '<dd class=\"#:styles.metaValue# #:styles[field]#\">' +\n                                '#if(field == \"size\"){#' +\n                                    ' #:kendo.getFileSizeMessage(selection[0][field])#' +\n                                '#} else if(selection[0][field] instanceof Date) {#' +\n                                    ' #:kendo.toString(selection[0][field], \"G\")#' +\n                                '#} else if(field == \"extension\") {#' +\n                                    ' #: !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension) : \"folder\"#' +\n                                '#} else {#' +\n                                    ' #:selection[0][field]#' +\n                                '#}#' +\n                            '</dd>' +\n                            '<dd class=\"k-line-break\"></dd>' +\n                        '# } #' +\n                    '</dl>' +\n                '#}#' +\n            '</div>';\n\n        var MULTIPLE_FILES_PREVIEW_TEMPLATE = '' +\n            '<div class=\"#:styles.fileInfo#\">' +\n                '<div class=\"#:styles.filePreview#\">' +\n                    '<span class=\"k-file-icon k-icon k-i-file\"></span>' +\n                '</div>' +\n                '<span class=\"#:styles.fileName#\">' +\n                    '#:selection.length# ' +\n                    '#:messages.items#' +\n                '</span>' +\n            '</div>';\n\n        var FileManager = DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                DataBoundWidget.fn.init.call(that, element, options);\n\n                that.options = kendo.deepExtend({}, that.options, options);\n\n                that.defaultSortOption = { field: \"name\", dir: \"asc\" };\n                that.folderSortOption = { field: \"isDirectory\", dir: \"desc\" };\n\n                that._commandStack = new ui.filemanager.CommandStack();\n\n                that._dataSource();\n\n                that._wrapper();\n\n                that._renderHeader();\n\n                that._renderContentContainer();\n\n                that._initContextMenu();\n\n                that._renderNavigation();\n\n                that._renderContent();\n\n                that._renderPreview();\n\n                that._initUploadDialog();\n\n                that._resizable();\n\n                that.resize();\n\n                kendo.notify(that, kendo.ui);\n            },\n\n            options: {\n                name: \"FileManager\",\n                height: 500,\n                resizable: true,\n                initialView: viewTypes.list,\n                toolbar: {\n                    resizable: true\n                },\n                contextMenu: {},\n                upload: {},\n                uploadUrl: \"\",\n                views: {},\n                breadcrumb: {},\n                draggable: true,\n                dialogs: {\n                    upload: {\n                        width: 530\n                    },\n                    moveConfirm: {\n                        width: 350,\n                        closable: true\n                    },\n                    deleteConfirm: {\n                        width: 360,\n                        closable: true\n                    },\n                    renamePrompt: {\n                        width: 350,\n                        closable: true\n                    }\n                },\n                previewPane: {\n                    metaFields: [\"extension\", \"size\", \"created\", \"modified\"],\n                    noFileTemplate: NO_FILE_PREVIEW_TEMPLATE,\n                    singleFileTemplate: SINGLE_FILES_PREVIEW_TEMPLATE,\n                    multipleFilesTemplate: MULTIPLE_FILES_PREVIEW_TEMPLATE\n                },\n                messages: {\n                    toolbar: {\n                        createFolder: \"New Folder\",\n                        upload: \"Upload\",\n                        sortDirection: \"Sort Direction\",\n                        sortDirectionAsc: \"Sort Direction Ascending\",\n                        sortDirectionDesc: \"Sort Direction Descending\",\n                        sortField: \"Sort By\",\n                        nameField: \"Name\",\n                        sizeField: \"File Size\",\n                        typeField: \"Type\",\n                        dateModifiedField: \"Date Modified\",\n                        dateCreatedField: \"Date Created\",\n                        listView: \"List View\",\n                        gridView: \"Grid View\",\n                        search: \"Search\",\n                        details: \"View Details\",\n                        detailsChecked: \"On\",\n                        detailsUnchecked: \"Off\",\n                        \"delete\": \"Delete\",\n                        rename: \"Rename\"\n                    },\n                    views: {\n                        nameField: \"Name\",\n                        sizeField: \"File Size\",\n                        typeField: \"Type\",\n                        dateModifiedField: \"Date Modified\",\n                        dateCreatedField: \"Date Created\",\n                        items: \"items\",\n                        listLabel: \"FileManager ListView\",\n                        gridLabel: \"FileManager Grid\",\n                        treeLabel: \"FileManager TreeView\"\n                    },\n                    dialogs: {\n                        upload: {\n                            title: \"Upload Files\",\n                            clear: \"Clear List\",\n                            done: \"Done\"\n                        },\n                        moveConfirm: {\n                            title: \"Confirm\",\n                            content: \"<p style='text-align: center;'>Do you want to move or copy?</p>\",\n                            okText: \"Copy\",\n                            cancel: \"Move\",\n                            close: \"close\"\n                        },\n                        deleteConfirm: {\n                            title: \"Confirm\",\n                            content: \"<p style='text-align: center;'>Are you sure you want to delete the selected file(s)?</br>You cannot undo this action.</p>\",\n                            okText: \"Delete\",\n                            cancel: \"Cancel\",\n                            close: \"close\"\n                        },\n                        renamePrompt: {\n                            title: \"Prompt\",\n                            content: \"<p style='text-align: center;'>Enter new name for the file.</p>\",\n                            okText: \"Rename\",\n                            cancel: \"Cancel\",\n                            close: \"close\"\n                        }\n                    },\n                    previewPane: {\n                        noFileSelected: \"No File Selected\",\n                        extension: \"Type\",\n                        size: \"Size\",\n                        created: \"Date Created\",\n                        createdUtc: \"Date Created UTC\",\n                        modified: \"Date Modified\",\n                        modifiedUtc: \"Date Modified UTC\",\n                        items: \"items\"\n                    }\n                }\n            },\n\n            events: [\n                NAVIGATE,\n                SELECT,\n                OPEN,\n                DATABINDING,\n                DATABOUND,\n                ERROR,\n                DROP,\n                EXECUTE,\n                COMMAND\n            ],\n\n            _dataSource: function() {\n                var that = this,\n                    options = that.options,\n                    dataSourceOptions = options.dataSource || {},\n                    typeSortOrder = that.folderSortOption,\n                    nameSortOrder = that.defaultSortOption,\n                    dataSource;\n\n                if (!(dataSourceOptions instanceof kendo.data.FileManagerDataSource)) {\n                    if (isArray(dataSourceOptions)) {\n                        dataSource = {\n                            data: dataSourceOptions,\n                            autoSync: false,\n                            sort: [typeSortOrder, nameSortOrder]\n                         };\n                    } else {\n                        dataSource = extend(true, dataSourceOptions, {\n                            autoSync: false,\n                            sort: [typeSortOrder, nameSortOrder]\n                        });\n                    }\n\n                    if (dataSourceOptions && isPlainObject(dataSourceOptions.schema)) {\n                        dataSource.schema = dataSourceOptions.schema;\n                    } else if (isPlainObject(kendo.data.schemas.filemanager)) {\n                        dataSource.schema = kendo.data.schemas.filemanager;\n                    }\n                } else {\n                    dataSource = dataSourceOptions;\n                }\n\n                if (that.dataSource && that._errorHandler) {\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                } else {\n                    that._errorHandler = that._error.bind(that);\n                    that._changeHandler = that._change.bind(that);\n                }\n\n                that.dataSource = kendo.data.FileManagerDataSource.create(dataSource)\n                    .bind(ERROR, that._errorHandler)\n                    .bind(CHANGE, that._changeHandler);\n            },\n\n            _error: function(ev) {\n                if (!this.trigger(ERROR, ev)) {\n                    window.console.warn('Error! The requested URL returned ' + ev.xhr.status + ' - ' + ev.xhr.statusText);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    width = options.width,\n                    height = options.height;\n\n                that.wrapper = that.element\n                    .addClass(fileManagerStyles.wrapper);\n\n                if (width) {\n                    that.wrapper.width(width);\n                }\n\n                if (height) {\n                    that.wrapper.height(height);\n                }\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize(true);\n                });\n            },\n\n            _renderHeader: function() {\n                var that = this,\n                    options = that.options;\n\n                if (options.toolbar) {\n                    that.header = $(\"<div />\").addClass(fileManagerStyles.header);\n                }\n\n                that.wrapper.append(that.header);\n\n                if (options.toolbar) {\n                    that._initToolbar();\n                    that.toolbar._tabIndex();\n                }\n            },\n\n            _renderContentContainer: function() {\n                var that = this,\n                    container = $(\"<div />\").addClass(fileManagerStyles.contentContainer);\n\n                that.contentContainer = container;\n\n                that.wrapper.append(that.contentContainer);\n            },\n\n            _initContextMenu: function() {\n                var that = this,\n                    options = that.options,\n                    menuOptions = extend({}, options.contextMenu, {\n                        filemanager: that,\n                        messages: options.messages.toolbar,\n                        target: that.contentContainer,\n                        filter: \"[data-uid]\",\n                        action: that.executeCommand.bind(that),\n                        isLocalBinding: that.dataSource.isLocalBinding\n                    });\n\n                if (options.contextMenu === false) {\n                    return;\n                }\n\n                that.contextMenu = new ui.filemanager.ContextMenu(\"<ul></ul>\", menuOptions);\n\n                that.contextMenu.bind(OPEN, that._cacheFocus.bind(that));\n            },\n\n            _renderNavigation: function() {\n                var that = this;\n\n                that.navigation = $(\"<div />\").addClass(fileManagerStyles.navigation);\n                that.navigation.append(that._initTreeView().element);\n\n                that.contentContainer.append(that.navigation);\n            },\n\n            _renderContent: function() {\n                var that = this,\n                    options = that.options,\n                    toolbar = that.toolbar;\n\n                that.content = $(\"<div />\").addClass(fileManagerStyles.content);\n\n                if (options.breadcrumb) {\n                    that.content.append(that._initBreadcrumb().element);\n                }\n\n                that.content.append(that._initView());\n\n                if (!toolbar || !toolbar.isToolEnabled(toolbar.defaultTools.upload.name)) {\n                    that.content.append(that._initUpload().wrapper.hide());\n                }\n\n                that.contentContainer.append(that.content);\n            },\n\n            _renderPreview: function() {\n                var that = this,\n                    enablePreview = that.options.previewPane;\n\n                if (!enablePreview) {\n                   return;\n                }\n\n                that.preview = $(\"<div />\").addClass(fileManagerStyles.preview);\n                that.previewContainer = $(\"<div />\").addClass(fileManagerStyles.previewContainer);\n                that.preview.append(that.previewContainer);\n\n                that._setPreviewPaneContent();\n\n                that.contentContainer.append(that.preview.hide());\n            },\n\n            _setPreviewPaneContent: function() {\n                var that = this,\n                    options = that.options,\n                    previewPaneMessages = options.messages.previewPane,\n                    previewPaneOptions = options.previewPane,\n                    selection = that.getSelected(),\n                    previewTemplate;\n\n                if (!selection) {\n                    previewTemplate = template(previewPaneOptions.noFileTemplate)({\n                        styles: fileManagerTemplateStyles,\n                        messages: previewPaneMessages\n                    });\n\n                    that.previewContainer.html(previewTemplate);\n                    return;\n                }\n\n                previewTemplate = selection.length === 1 ?\n                    previewPaneOptions.singleFileTemplate :\n                    previewPaneOptions.multipleFilesTemplate;\n\n                previewTemplate = template(previewTemplate)({\n                    styles: fileManagerTemplateStyles,\n                    messages: previewPaneMessages,\n                    selection: selection,\n                    metaFields: previewPaneOptions.metaFields\n                });\n\n                that.previewContainer.html(previewTemplate);\n            },\n\n            _initToolbar: function() {\n                var that = this,\n                    options = that.options,\n                    toolbarElement = $(\"<div />\").addClass(fileManagerStyles.toolbar),\n                    toolbarOptions = extend({}, options.toolbar, {\n                        filemanager: this,\n                        messages: options.messages.toolbar,\n                        action: that.executeCommand.bind(that)\n                    });\n\n                that.header.append(toolbarElement);\n\n                that.toolbar = new ui.filemanager.ToolBar(toolbarElement, toolbarOptions);\n\n                return that.toolbar;\n            },\n\n            _initTreeView: function() {\n                var that = this,\n                    treeViewElement = $(\"<div />\").addClass(fileManagerStyles.treeview),\n                    options = that.options.views[TREE_TYPE],\n                    explicitOptions = extend(true, {}, {\n                        dataSource: that.options.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable,\n                        isLocalBinding: that.dataSource.isLocalBinding\n                    });\n\n                that.treeView = new ui.filemanager.ViewComponents[TREE_TYPE](treeViewElement, options, explicitOptions);\n\n                that.treeView.bind(NAVIGATE, that._navigate.bind(that))\n                             .bind(LOAD, that._load.bind(that))\n                             .bind(DROP, that._drop.bind(that))\n                             .bind(KEYDOWNACTION, that._keydownAction.bind(that));\n\n                return that.treeView;\n            },\n\n            _drop: function(ev) {\n                var that = this;\n\n                if (!that.trigger(DROP, ev) && ev.items.indexOf(ev.target) < 0) {\n                    that._confirm({\n                        type: \"move\",\n                        target: ev.target\n                    }).done(function() {\n                        that.executeCommand({ command: \"CopyCommand\", options: ev });\n                    }).fail(function() {\n                        that.executeCommand({ command: \"MoveCommand\", options: ev });\n                    });\n                }\n            },\n\n            _keydownAction: function(ev) {\n                var that = this,\n                    keyCode = ev.keyCode,\n                    keys = kendo.keys;\n\n                if (keyCode === keys.DELETE) {\n                    that.executeCommand({ command: \"DeleteCommand\", options: { target: ev.target } });\n                }\n\n                if (keyCode === keys.F2) {\n                    that.executeCommand({ command: \"RenameCommand\", options: { target: ev.target } });\n                }\n            },\n\n            _confirm: function(options) {\n                var that = this,\n                    messages = that.options.messages.dialogs[options.type + \"Confirm\"];\n\n                var confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages\n                }, that.options.dialogs[options.type + \"Confirm\"])).data(\"kendoConfirm\");\n\n                confirm.bind(OPEN, that._cacheFocus.bind(that));\n                confirm.bind(HIDE, that._restoreFocus.bind(that, options.target));\n\n                confirm.open();\n\n                confirm.wrapper.removeClass(\"k-confirm\");\n\n                return confirm.result;\n            },\n\n            _prompt: function(options) {\n                var that = this,\n                    messages = this.options.messages.dialogs[options.type + \"Prompt\"];\n\n                var prompt = $(\"<div></div>\").kendoPrompt(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages,\n                    value: options.defaultInput\n                },this.options.dialogs[options.type + \"Prompt\"])).data(\"kendoPrompt\");\n\n                prompt.bind(OPEN, that._cacheFocus.bind(that));\n                prompt.bind(CLOSE, that._restoreFocus.bind(that, options.target));\n\n                prompt.open();\n\n                prompt.wrapper.removeClass(\"k-prompt\");\n\n                return prompt.result;\n            },\n\n            _cacheFocus: function() {\n                var that = this,\n                    activeElement = $(document.activeElement),\n                    view = that.view(),\n                    treeView = that.treeView.widgetComponent;\n\n                if (that.contextMenu && that.contextMenu.popup.visible()) {\n                    return;\n                }\n\n                that.treeView._shouldFocus = false;\n\n                if ((treeView.current() && treeView.current().find(\".k-focus\").length) ||\n                    activeElement.hasClass(fileManagerStyles.treeview)) {\n                    that.treeView._shouldFocus = true;\n                    view._focusElement = activeElement;\n                    return;\n                }\n\n                view._focusElement = activeElement.hasClass(fileManagerStyles[that._viewType]) ?\n                    activeElement :\n                    null;\n            },\n\n            _restoreFocus: function(target) {\n                var that = this,\n                    view = that.view();\n\n                if (!target) {\n                    return;\n                }\n\n                if (view._focusElement) {\n                    view._focusElement.trigger(\"focus\");\n                } else if (target.closest && target.closest(\":kendoFocusable\").length) {\n                    target.closest(\":kendoFocusable\").trigger(\"focus\");\n                }\n            },\n\n            _initView: function() {\n                var that = this,\n                    viewWrapper = $(\"<div />\").addClass(fileManagerStyles.view),\n                    initialView = that.options.initialView;\n\n                that.viewWrapper = viewWrapper;\n                that.viewWrapper.append(that.view(initialView));\n\n                return viewWrapper;\n            },\n\n            _initBreadcrumb: function() {\n                var that = this,\n                    options = that.options,\n                    breadcrumbElement = $(\"<nav />\").addClass(fileManagerStyles.breadcrumb),\n                    breadcrumbOptions = extend({}, {\n                        items: [\n                            { type: \"rootitem\", text: \"\" }\n                        ],\n                        change: that._breadcrumbChange.bind(that)\n                    }, options.breadcrumb);\n\n                that.breadcrumb = new ui.Breadcrumb(breadcrumbElement, breadcrumbOptions);\n\n                return that.breadcrumb;\n            },\n\n            _breadcrumbChange: function(ev) {\n                var entry = ev.sender.items().filter(function(item) {\n                    return item.path === ev.value.substring(1);\n                }).shift();\n\n                this._navigate({ path: entry ? entry.id : \"\" });\n            },\n\n            _initUploadDialog: function() {\n                var that = this,\n                    options = that.options,\n                    dialogMessages = options.messages.dialogs.upload,\n                    dialogElement = $(\"<div />\"),\n                    dialogOptions = extend({}, {\n                        title: dialogMessages.title,\n                        modal: true,\n                        visible: false,\n                        width: 500,\n                        actions: [\n                            { text: dialogMessages.clear, action: that._clearUploadFilesList.bind(that) },\n                            { text: dialogMessages.done, primary: true }\n                        ],\n                        messages: dialogMessages\n                    }, options.dialogs.upload),\n                    uploadInstance;\n\n                if (!that._shouldInitUpload()) {\n                    return;\n                }\n\n                uploadInstance = that._initUpload();\n\n                that.uploadDialog = new ui.Dialog(dialogElement, dialogOptions);\n                that.uploadDialog.wrapper.addClass(fileManagerStyles.uploadDialog);\n                that.uploadDialog.element.append(uploadInstance.wrapper);\n\n                that.uploadDialog.bind(OPEN, that._toggleUploadDropZone.bind(that, \"\"));\n                that.uploadDialog.bind(CLOSE, that._toggleUploadDropZone.bind(that, that.viewWrapper));\n\n                return that.uploadDialog;\n            },\n\n            _shouldInitUpload: function() {\n                var that = this,\n                    options = that.options,\n                    shouldInit = false;\n\n                if ((options.uploadUrl || (options.upload.async && options.upload.async.saveUrl)) &&\n                    options.upload !== false) {\n                        shouldInit = true;\n                }\n\n                return shouldInit;\n            },\n\n            _initUpload: function() {\n                var that = this,\n                    options = that.options,\n                    uploadElement = $(\"<input type='file' name='file'/>\").addClass(fileManagerStyles.upload),\n                    uploadOptions = extend(true, {\n                        async: {\n                             autoUpload: true,\n                             saveUrl: options.uploadUrl\n                        },\n                        dropZone: that.viewWrapper\n                    }, options.upload);\n\n                that.upload = new ui.Upload(uploadElement[0], uploadOptions);\n\n                that.upload.bind(UPLOAD, that._sendUploadPathParameter.bind(that));\n                that.upload.bind(SUCCESS, that._success.bind(that));\n\n                return that.upload;\n            },\n\n            _sendUploadPathParameter: function(ev) {\n                ev.data = extend(ev.data, { path: this.path() });\n            },\n\n            _success: function() {\n                this._view.widgetComponent.dataSource.read();\n            },\n\n            _clearUploadFilesList: function() {\n                var that = this,\n                    upload = that.upload;\n\n                if (upload) {\n                    upload.clearAllFiles();\n                }\n            },\n\n            _toggleUploadDropZone: function(zone) {\n                var that = this,\n                    upload = that.upload;\n\n                if (upload) {\n                    upload.setOptions({ dropZone: zone });\n                }\n            },\n\n            _binding: function(ev) {\n                if (this.trigger(DATABINDING, { source: \"view\", action: ev.action, items: ev.items, index: ev.index })) {\n                    ev.preventDefault();\n                }\n            },\n\n            _bound: function() {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(DATABOUND);\n            },\n\n            _createResizableSplitBar: function(cssClass) {\n                var splitBar = $(\"<div />\")\n                        .addClass(fileManagerStyles.splitBar)\n                        .addClass(fileManagerStyles.splitBarHorizontal)\n                        .addClass(cssClass),\n                    icon = $(\"<span />\").addClass(fileManagerStyles.splitBarIcon);\n\n                splitBar.append(icon);\n\n                splitBar.hover(function() {\n                    $(this).toggleClass(fileManagerStyles.splitBarHover);\n                });\n\n                return splitBar;\n            },\n\n            _initResizableNavigation: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarNavigation),\n                    contentWrapper = wrapper.find(DOT + fileManagerStyles.content),\n                    navigationWrapper = wrapper.find(DOT + fileManagerStyles.navigation),\n                    contentWrapperWidth,\n                    navigationWrapperWidth;\n\n                splitBar.insertAfter(navigationWrapper);\n\n                that._resizeDraggable.navigation = that.wrapper.find(splitBar)\n                    .end()\n                    .kendoResizable({\n                        handle: DOT + fileManagerStyles.splitBarNavigation,\n                        start: function() {\n                            contentWrapperWidth = contentWrapper.width();\n                            navigationWrapperWidth = navigationWrapper.width();\n                        },\n                        resize: function(e) {\n                            var delta = e.x.initialDelta;\n\n                            if (kendo.support.isRtl(wrapper)) {\n                                delta *= -1;\n                            }\n\n                            if (navigationWrapperWidth + delta < -2 || contentWrapperWidth - delta < -2) {\n                                return;\n                            }\n\n                            navigationWrapper.width(navigationWrapperWidth + delta);\n                        }\n                    }).getKendoResizable();\n            },\n\n            _initResizablePreview: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarPreview),\n                    contentWrapper = wrapper.find(DOT + fileManagerStyles.content),\n                    previewWrapper = wrapper.find(DOT + fileManagerStyles.preview),\n                    contentWrapperWidth,\n                    previewWrapperWidth;\n\n                if (!that.options.previewPane) {\n                    return;\n                }\n\n                splitBar.insertBefore(previewWrapper).hide();\n\n                that._resizeDraggable.preview = wrapper.find(splitBar)\n                    .end()\n                    .kendoResizable({\n                        handle: DOT + fileManagerStyles.splitBarPreview,\n                        start: function() {\n                            contentWrapperWidth = contentWrapper.width();\n                            previewWrapperWidth = previewWrapper.width();\n                        },\n                        resize: function(e) {\n                            var delta = e.x.initialDelta;\n\n                            if (kendo.support.isRtl(wrapper)) {\n                                delta *= -1;\n                            }\n\n                            if (previewWrapperWidth - delta < -2 || contentWrapperWidth + delta < -2) {\n                                return;\n                            }\n\n                            previewWrapper.width(previewWrapperWidth - delta);\n                        }\n                    }).getKendoResizable();\n            },\n\n            _resizable: function() {\n                var that = this,\n                    options = that.options;\n\n                that._resizeDraggable = {};\n\n                if (!options.resizable) {\n                    return;\n                }\n\n                that.wrapper.addClass(fileManagerStyles.resizable);\n\n                that._initResizableNavigation();\n\n                that._initResizablePreview();\n            },\n\n            view: function(type) {\n                var that = this,\n                    element = $('<div></div>'),\n                    options = that.options.views[type],\n                    explicitOptions = extend(true, {}, {\n                        dataSource: that._viewDataSource || that.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable,\n                        ariaLabel: that.options.messages.views[type + \"Label\"]\n                    });\n\n                if (type === undefined$1) {\n                    return that._view;\n                }\n\n                if (!ui.filemanager.ViewComponents[type]) {\n                    throw new Error(kendo.format(\"There is no {0} ViewComponent registered!\", type));\n                }\n\n                if (that._view && that._view.destroy) {\n                    that._view.destroy();\n                    that.viewWrapper.empty();\n                }\n\n                that._viewType = type;\n                that._view = new ui.filemanager.ViewComponents[type](element, options, explicitOptions);\n\n                that._view.bind(SELECT, that._select.bind(that));\n                that._view.bind(OPEN, that._open.bind(that));\n                that._view.bind(DATABINDING, that._binding.bind(that));\n                that._view.bind(DATABOUND, that._bound.bind(that));\n                that._view.bind(DROP, that._drop.bind(that));\n                that._view.bind(KEYDOWNACTION, that._keydownAction.bind(that));\n                that._view.bind(CANCEL, that._cancel.bind(that));\n\n                that._view.element.addClass(fileManagerStyles[type]);\n\n                that.viewWrapper\n                    .removeClass(\n                        Object.keys(ui.filemanager.ViewComponents).map(function(el) {\n                            return fileManagerStyles.view + \"-\" + el;\n                        }).join(\" \")\n                    )\n                    .addClass(fileManagerStyles.view + \"-\" + type);\n\n                that.viewWrapper.append(that._view.element);\n            },\n\n            executeCommand: function(args) {\n                var commandName = args.command,\n                    commandOptions = extend({ filemanager: this }, isPlainObject(args.options) ? args.options : { value: args.options }),\n                    command = new ui.filemanager.commands[commandName](commandOptions);\n\n                if (!this.trigger(EXECUTE, args)) {\n                    return command.exec();\n                }\n            },\n\n            _navigate: function(ev) {\n                var that = this,\n                    path = ev.path;\n\n                if (!that.trigger(NAVIGATE, { path: path })) {\n                    that.navigate(path);\n                }\n            },\n\n            _load: function(ev) {\n                var entry = this.dataSource.get(ev.entryId);\n                entry.load();\n            },\n\n            _select: function(ev) {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n\n                this.trigger(SELECT, { entries: ev.entries });\n            },\n\n            _open: function(ev) {\n                var that = this,\n                    entry = ev.entry;\n\n                that.trigger(OPEN, { entry: entry });\n\n                if (entry.isDirectory) {\n                    that._navigate({ path: entry.id });\n                }\n            },\n\n            _cancel: function() {\n                var that = this,\n                    commandStack = that._commandStack,\n                    command = commandStack.next();\n\n                commandStack.reject(command);\n                that.trigger(COMMAND, { status: \"cancel\", action: \"itemchange\", data: command.data });\n            },\n\n            _change: function(ev) {\n                var that = this,\n                    commandStack = that._commandStack,\n                    targetDataSource = ev.node ? ev.node.children : that.dataSource;\n\n                if (that.trigger(DATABINDING, { source: \"tree\", action: ev.action, items: ev.items, index: ev.index })) {\n                    return;\n                }\n\n                that.treeView._refreshDataSource(ev);\n\n                if (ev.action === \"remove\" || ev.action === \"itemchange\" || ev.action === \"add\") {\n                    if (commandStack.empty()) {\n                        targetDataSource.sync();\n                    } else {\n                        var command = commandStack.next();\n\n                        targetDataSource.sync().then(function(res) {\n                            commandStack.resolve(command);\n                            that.trigger(COMMAND, { status: \"success\", action: ev.action, data: command.data, response: res });\n                        }).fail(function(res) {\n                            commandStack.reject(command);\n                            that.trigger(COMMAND, { status: \"fail\", action: ev.action, data: command.data, response: res });\n                        });\n                    }\n                }\n\n                if (ev.action === \"remove\" && that._viewDataSource && that._viewDataSource.parent() && ev.items[0] === that._viewDataSource.parent()) {\n                    that._navigateToParent(ev.items[0]);\n                }\n\n                if (ev.action == \"itemchange\" && that._viewDataSource && that._viewDataSource.parent() && that.path().indexOf(ev.items[0].id) >= 0) {\n                    that._navigateToParent(ev.items[0]);\n                }\n\n                if (ev.action === \"itemchange\") {\n                    ev.items[0].loaded(false);\n                }\n            },\n\n            _navigateToParent: function(item) {\n                var that = this;\n                var parent = item.parentNode();\n                var parentNodePath = parent ? parent.id : \"\";\n                that._navigate({ path: parentNodePath });\n            },\n\n            _buildBreadcrumbPath: function(entry) {\n                var that = this,\n                    breadcrumb = that.breadcrumb,\n                    items = [];\n\n                while (entry) {\n                    items.push({\n                        id: entry.id,\n                        text: entry.name,\n                        path: entry.path\n                    });\n\n                    entry = entry.parentNode && entry.parentNode();\n                }\n\n                items.push({ type: \"rootItem\", id: \"\", text: \"\" });\n\n                breadcrumb.items(items.reverse());\n            },\n\n            _adjustDimensions: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    gridSelector = DOT + fileManagerStyles.grid,\n                    listViewSelector = DOT + fileManagerStyles.list,\n                    contentContainer = DOT + fileManagerStyles.contentContainer,\n                    totalHeight = wrapper.height(),\n                    toolbarHeight = 0,\n                    breadcrumbHeight = 0;\n\n                if (that.toolbar) {\n                    toolbarHeight = outerHeight(that.toolbar.wrapper);\n                }\n\n                if (that.breadcrumb) {\n                    breadcrumbHeight = outerHeight(that.breadcrumb.wrapper);\n                }\n\n                if (that.options.height !== \"auto\") {\n                    wrapper\n                        .find([gridSelector].join(\",\"))\n                        .height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n\n                    wrapper\n                        .find(listViewSelector)\n                        .parent()\n                        .height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n\n                    wrapper\n                        .find(contentContainer)\n                        .height(totalHeight - toolbarHeight);\n                }\n            },\n\n            _resize: function() {\n                this._adjustDimensions();\n                kendo.resize(this.element.children());\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                    that.header.empty();\n                    that._initToolbar();\n                    that.toolbar._tabIndex();\n                }\n\n                if (that.treeView) {\n                    that.treeView.destroy();\n                    that.navigation.empty();\n                    that.navigation.append(that._initTreeView().element);\n                }\n\n                if (that._view) {\n                    that.view(that._viewType || that.options.initialView);\n                }\n\n                that._initContextMenu();\n\n            },\n\n            refresh: function() {\n                var that = this,\n                    dataSource = that._viewDataSource || that.dataSource;\n\n                dataSource.read();\n            },\n\n            getSize: function() {\n                return kendo.dimensions(this.wrapper);\n            },\n\n            getSelected: function() {\n                var that = this,\n                    items = that._view.getSelected(),\n                    treeView = that.treeView;\n\n                if (items && items.length) {\n                    return items;\n                }\n\n                var item = treeView.getSelected();\n\n                if (item) {\n                    return [ that.dataSource.get(item.id) ];\n                }\n            },\n\n            path: function() {\n                return this._path || \"\";\n            },\n\n            navigate: function(path) {\n                var that = this,\n                    dataSource = that.dataSource,\n                    entry = dataSource.get(path.replace(/^\\//, \"\")),\n                    view = that._view,\n                    treeView = that.treeView,\n                    breadcrumb = that.breadcrumb,\n                    isRoot = path === \"\" || path === \"/\";\n\n                if (!entry && !isRoot) {\n                    window.console.warn('Error! Could not navigate to the folder at the requested path(' + path + '). Make sure that the parent folder of the target folder has already been loaded.');\n                    return;\n                }\n\n                that._path = path;\n\n                if (that.trigger(DATABINDING, { source: \"navigation\", action: \"rebind\", items: [entry] })) {\n                    return;\n                }\n\n                if (breadcrumb) {\n                    that._buildBreadcrumbPath(entry);\n                }\n\n                if (isRoot) {\n                    dataSource.sort([ that.folderSortOption, that.defaultSortOption ]);\n                    that._viewDataSource = dataSource;\n                    view.refresh(that._viewDataSource);\n                    treeView.treeView.select($());\n\n                    if (that.options.previewPane) {\n                        that._setPreviewPaneContent();\n                    }\n\n                    return;\n                }\n\n                if (entry.loaded && !entry.loaded()) {\n                    entry.load();\n                }\n\n                if (view) {\n                    that._viewDataSource = entry.children;\n                    that._viewDataSource._sort = [ that.folderSortOption, that.defaultSortOption ];\n                    view.refresh(that._viewDataSource);\n                }\n\n                if (treeView) {\n                    treeView.refresh(entry.id);\n                }\n\n                if (that.options.previewPane) {\n                    that._setPreviewPaneContent();\n                }\n            },\n\n            items: function() {\n                var that = this;\n\n                return that.treeView.widgetComponent.items().add(that._view.widgetComponent.items());\n            },\n\n            destroy: function() {\n                var that = this;\n\n                DataBoundWidget.fn.destroy.call(that);\n\n                that.dataSource\n                    .unbind(ERROR, that._errorHandler)\n                    .unbind(CHANGE, that._changeHandler);\n\n                if (that._resizeDraggable.navigation) {\n                    that._resizeDraggable.navigation.destroy();\n                    that._resizeDraggable.navigation = null;\n                }\n\n                if (that._resizeDraggable.preview) {\n                    that._resizeDraggable.preview.destroy();\n                    that._resizeDraggable.preview = null;\n                }\n\n                if (that.uploadDialog) {\n                    that.uploadDialog.destroy();\n                    that.uploadDialog = null;\n                }\n\n                if (that.upload) {\n                    that.upload.destroy();\n                    that.upload = null;\n                }\n\n                if (that.contextMenu) {\n                    that.contextMenu.destroy();\n                    that.contextMenu = null;\n                }\n\n                kendo.unbindResize(that._resizeHandler);\n\n                that.dataSource = null;\n                that._viewDataSource = null;\n\n                kendo.destroy(that.element);\n            }\n        });\n\n        ui.plugin(FileManager);\n    })(window.kendo.jQuery);\n\n}));\n"]}