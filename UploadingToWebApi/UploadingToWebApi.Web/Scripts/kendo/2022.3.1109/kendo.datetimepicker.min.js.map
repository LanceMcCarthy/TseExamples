{"version":3,"file":"kendo.datetimepicker.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","TimeView","html","parse","parseDate","support","activeElement","_activeElement","extractFormat","_extractFormat","calendar","isInRange","restrictValue","isEqualDatePart","getMilliseconds","ui","Widget","OPEN","CLOSE","CHANGE","ns","CLICK","UP","mouseAndTouchPresent","applyEventMap","slice","DISABLED","READONLY","FOCUSED","STATEDISABLED","MOUSEDOWN","MONTH","ARIA_ACTIVEDESCENDANT","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_DISABLED","ARIA_READONLY","DATE","Date","MIN","MAX","dateViewParams","view","timeViewParams","extend","STATE_SELECTED","DateTimePicker","init","element","options","initialValue","that","this","componentType","fn","call","disableDates","disabled","min","attr","max","_specifiedRange","normalize","_initialOptions","_wrapper","singlePopup","_popup","_views","_icons","_reset","_template","setAttribute","e","type","addClass","role","dateView","_dateViewID","timeView","_timeViewID","autocomplete","_midnight","_calculateMidnight","is","parents","enable","readonly","value","val","parseFormats","culture","_createDateInput","_old","_update","_oldText","_applyCssClasses","label","_label","notify","name","format","timeFormat","dates","interval","height","footer","start","depth","animation","month","ARIATemplate","dateButtonText","timeButtonText","dateInput","weekNumber","messages","set","cancel","hour","minute","second","millisecond","now","date","time","today","weekColumnHeader","size","fillMode","rounded","events","componentTypes","classic","list","modern","setOptions","currentValue","_value","_current","_dateIcon","off","remove","_timeIcon","_editable","_dateInput","toString","_updateARIA","_inputLabel","_unwrapFloating","dateIcon","timeIcon","wrapper","disable","removeClass","on","_toggleHover","length","removeAttribute","_keydown","bind","_change","current","getToday","close","preventDefault","toggle","_focusElement","labelOptions","isPlainObject","content","Label","widget","eventType","touch","match","trigger","floatingLabel","destroy","popup","_form","_resetHandler","setTimeout","removeAttr","open","popupHovered","_calendar","ul","find","_hovered","_switchToTimeView","_switchToDateView","_option","visible","secondView","refresh","dateChanged","oldValue","valueUpdated","_typing","textFormatted","option","minDateEqual","maxDateEqual","timeViewOptions","maxSet","getTime","lastTimeOption","dataBind","currentTarget","toggleClass","rebind","old","skip","formattedValue","isSameType","String","grep","d","isDateViewVisible","stopPropagation","stopImmediatePropagation","altKey","keyCode","keys","DOWN","move","ENTER","div","msMin","timeDiv","omitPopup","id","dateDiv","DateView","anchor","change","_applyDateValue","_currentlySelected","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","_toggleIcons","validateDate","_applyTimeValue","_timeSelected","_adjustListWidth","_updateTitle","active","_optionID","useValueToRender","specifiedRange","adjustedDate","msValue","msMax","setHours","_parse","renderButton","icon","shape","insertAfter","hide","wrap","parent","style","cssText","css","width","className","formId","form","closest","disabledDate","optionsValue","defaultValue","_ariaTemplate","template","DateInput","_updateAria","appendTo","document","body","append","buttonSize","getValidCssClass","Popup","isRtl","activate","addTranslate","applyValue","_updateRanges","sender","_groupChangeClick","_cancelClickHandler","_setClickHandler","index","eq","_updateCurrentlySelected","getHours","setMinutes","getMinutes","setSeconds","getSeconds","patterns","getCulture","calendars","standard","g","t","unshift","inArray","push","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","jQuery"],"sources":["kendo.datetimepicker.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.datepicker', 'kendo.timepicker', 'kendo.html.button', 'kendo.label'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"datetimepicker\",\n        name: \"DateTimePicker\",\n        category: \"web\",\n        description: \"The DateTimePicker allows the end user to select a value from a calendar or a time drop-down list.\",\n        depends: [ \"datepicker\", \"timepicker\", \"label\" ]\n    };\n\n    (function($, undefined$1) {\n\n        var kendo = window.kendo,\n            TimeView = kendo.TimeView,\n            html = kendo.html,\n            parse = kendo.parseDate,\n            support = kendo.support,\n            activeElement = kendo._activeElement,\n            extractFormat = kendo._extractFormat,\n            calendar = kendo.calendar,\n            isInRange = calendar.isInRange,\n            restrictValue = calendar.restrictValue,\n            isEqualDatePart = calendar.isEqualDatePart,\n            getMilliseconds = TimeView.getMilliseconds,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CHANGE = \"change\",\n            ns = \".kendoDateTimePicker\",\n            CLICK = \"click\" + ns,\n            UP = support.mouseAndTouchPresent ? kendo.applyEventMap(\"up\", ns.slice(1)) : CLICK,\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            STATEDISABLED = \"k-disabled\",\n            HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n            MOUSEDOWN = \"mousedown\" + ns,\n            MONTH = \"month\",\n            SPAN = \"<span/>\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            DATE = Date,\n            MIN = new DATE(1800, 0, 1),\n            MAX = new DATE(2099, 11, 31),\n            dateViewParams = { view: \"date\" },\n            timeViewParams = { view: \"time\" },\n            extend = $.extend,\n            SINGLE_POPUP_TEMPLATE = '<div class=\"k-date-tab k-datetime-wrap\">' +\n                                        '<div class=\"k-datetime-buttongroup\">' +\n                                            '<div class=\"k-button-group k-button-group-stretched\">' +\n                                                '<button class=\"k-button #=buttonSize# k-rounded-md k-button-solid k-button-solid-base k-selected k-group-start\">' +\n                                                    '<span class=\"k-button-text\">#=messages.date#</span>' +\n                                                '</button>' +\n                                                '<button class=\"k-button #=buttonSize# k-rounded-md k-button-solid k-button-solid-base k-group-end\">' +\n                                                    '<span class=\"k-button-text\">#=messages.time#</span>' +\n                                                '</button>' +\n                                            '</div>' +\n                                        '</div>' +\n                                        '<div class=\"k-datetime-selector\">' +\n                                            '<div class=\"k-datetime-calendar-wrap\">' +\n                                            '</div>' +\n                                            '<div class=\"k-datetime-time-wrap\">' +\n                                            '</div>' +\n                                        '</div>' +\n                                        '<div class=\"k-datetime-footer k-action-buttons\">' +\n                                            '<button class=\"k-button #=buttonSize# k-rounded-md k-button-solid k-button-solid-base k-time-cancel\" title=\"Cancel\" aria-label=\"Cancel\">' +\n                                                '<span class=\"k-button-text\">#=messages.cancel#</span>' +\n                                            '</button>' +\n                                            '<button class=\"k-time-accept k-button #=buttonSize# k-rounded-md k-button-solid k-button-solid-primary\" title=\"Set\" aria-label=\"Set\">' +\n                                                '<span class=\"k-button-text\">#=messages.set#</span>' +\n                                            '</button>' +\n                                        '</div>' +\n                                    '</div>',\n            STATE_SELECTED = \"k-selected\";\n\n        var DateTimePicker = Widget.extend({\n            init: function(element, options) {\n                var that = this, disabled, initialValue;\n\n                options = options || {};\n                options.componentType = options.componentType || \"classic\";\n                Widget.fn.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                options.disableDates = kendo.calendar.disabled(options.disableDates);\n                options.min = parse(element.attr(\"min\")) || parse(options.min);\n                options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n                if (+options.max != +MAX || +options.min != +MIN) {\n                    this._specifiedRange = true;\n                }\n\n                normalize(options);\n\n                that._initialOptions = extend({}, options);\n\n                that._wrapper();\n\n                if (options.singlePopup) {\n                    that._popup();\n                }\n\n                that._views();\n\n                that._icons();\n\n                that._reset();\n                that._template();\n\n                try {\n                    element[0].setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element[0].type = \"text\";\n                }\n\n                element.addClass(\"k-input-inner\")\n                       .attr({\n                           \"role\": \"combobox\",\n                           \"aria-expanded\": false,\n                           \"aria-haspopup\": \"grid\",\n                           \"aria-controls\": that.dateView._dateViewID + \" \" + that.timeView._timeViewID,\n                           \"autocomplete\": \"off\"\n                       });\n\n\n                that._midnight = that._calculateMidnight(options.min, options.max);\n\n                disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n\n                initialValue = parse(options.value || that.element.val(), options.parseFormats, options.culture);\n\n                that._createDateInput(options);\n\n                that._old = that._update(initialValue || that.element.val());\n                that._oldText = element.val();\n                that._applyCssClasses();\n\n                if (options.label) {\n                    that._label();\n                }\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"DateTimePicker\",\n                value: null,\n                format: \"\",\n                timeFormat: \"\",\n                culture: \"\",\n                parseFormats: [],\n                dates: [],\n                disableDates: null,\n                min: new DATE(MIN),\n                max: new DATE(MAX),\n                interval: 30,\n                height: 200,\n                footer: \"\",\n                start: MONTH,\n                depth: MONTH,\n                animation: {},\n                month: {},\n                ARIATemplate: 'Current focused #=data.valueType# is #=data.text#',\n                dateButtonText: \"Open the date view\",\n                timeButtonText: \"Open the time view\",\n                dateInput: false,\n                weekNumber: false,\n                messages: {\n                    set: \"Set\",\n                    cancel: \"Cancel\",\n                    hour: \"hour\",\n                    minute: \"minute\",\n                    second: \"second\",\n                    millisecond: \"millisecond\",\n                    now: \"Now\",\n                    date: \"Date\",\n                    time: \"Time\",\n                    today: \"Today\",\n                    weekColumnHeader: \"\"\n                },\n                componentType: \"classic\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null\n            },\n\n            events: [\n                OPEN,\n                CLOSE,\n                CHANGE\n            ],\n\n            componentTypes: {\n                \"classic\": {\n                    singlePopup: false,\n                    timeView: {\n                        list: \"list\"\n                    }\n                },\n                \"modern\": {\n                    singlePopup: true,\n                    timeView: {\n                        list: \"scroll\"\n                    }\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this,\n                    value = that._value,\n                    min, max, currentValue;\n\n                Widget.fn.setOptions.call(that, options);\n\n                options = that.options;\n\n                options.min = min = parse(options.min);\n                options.max = max = parse(options.max);\n\n                normalize(options);\n\n                that._midnight = that._calculateMidnight(options.min, options.max);\n\n                currentValue = options.value || that._value || that.dateView._current;\n\n                if (min && !isEqualDatePart(min, currentValue)) {\n                    min = new DATE(MIN);\n                }\n\n                if (max && !isEqualDatePart(max, currentValue)) {\n                    max = new DATE(MAX);\n                }\n\n                that._dateIcon.off(ns);\n                that._dateIcon.remove();\n                that._timeIcon.off(ns);\n                that._timeIcon.remove();\n\n                that.dateView.setOptions(options);\n\n                that.timeView.setOptions(extend({}, options, {\n                    format: options.timeFormat,\n                    min: min,\n                    max: max\n                }));\n\n                that._icons();\n                that._editable(options);\n                that._createDateInput(options);\n\n                if (!that._dateInput) {\n                    that.element.val(kendo.toString(value, options.format, options.culture));\n                }\n\n                if (value) {\n                    that._updateARIA(value);\n                }\n\n                if (options.label && that._inputLabel) {\n                    that.label.setOptions(options.label);\n                } else if (options.label === false) {\n                    that.label._unwrapFloating();\n                    that._inputLabel.remove();\n                    delete that._inputLabel;\n                } else if (options.label) {\n                    that._label();\n                }\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    element = that.element.off(ns),\n                    dateIcon = that._dateIcon.off(ns),\n                    timeIcon = that._timeIcon.off(ns),\n                    wrapper = that.wrapper.off(ns),\n                    readonly = options.readonly,\n                    disable = options.disable;\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY, false);\n                        element[0].removeAttribute(ARIA_DISABLED, false);\n                        element[0].removeAttribute(ARIA_READONLY, false);\n                    }\n                    element.on(\"keydown\" + ns, that._keydown.bind(that))\n                           .on(\"focus\" + ns, function() {\n                               that.wrapper.addClass(FOCUSED);\n                           })\n                           .on(\"focusout\" + ns, function() {\n                               that.wrapper.removeClass(FOCUSED);\n                               if (element.val() !== that._oldText) {\n                                   that._change(element.val());\n                                   if (!element.val()) {\n                                       that.dateView.current(kendo.calendar.getToday());\n                                   }\n                               }\n                               if (that.options.singlePopup) {\n                                   return;\n                               }\n                               that.close(\"date\");\n                               that.close(\"time\");\n                           });\n\n                   dateIcon.on(MOUSEDOWN, preventDefault)\n                            .on(UP, function(e) {\n                                that.toggle(\"date\");\n                                that._focusElement(e.type);\n                            });\n\n                   timeIcon.on(MOUSEDOWN, preventDefault)\n                            .on(UP, function(e) {\n                                that.toggle(\"time\");\n                                that._focusElement(e.type);\n                            });\n\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that\n                }));\n\n                that._inputLabel = that.label.element;\n            },\n\n            _focusElement: function(eventType) {\n                var element = this.element;\n\n                if ((!support.touch || (support.mouseAndTouchPresent && !(eventType || \"\").match(/touch/i))) && element[0] !== activeElement()) {\n                    element.trigger(\"focus\");\n                }\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n                that.dateView.destroy();\n                that.timeView.destroy();\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n\n                if (that.options.singlePopup) {\n                    that.popup.element.off(ns);\n                    that.popup.destroy();\n                }\n\n                that.element.off(ns);\n                that._dateIcon.off(ns);\n                that._timeIcon.off(ns);\n                that.wrapper.off(ns);\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n            },\n\n            close: function(view) {\n                var that = this;\n\n                if (that.options.singlePopup) {\n                    that.popup.close();\n                } else {\n                    if (view !== \"time\") {\n                        view = \"date\";\n                    }\n\n                    that[view + \"View\"].close();\n                }\n\n                setTimeout(function() {\n                    that.element.removeAttr(\"aria-activedescendant\");\n                });\n            },\n\n            open: function(view) {\n                var that = this;\n                var popupHovered;\n\n                if (that.options.singlePopup) {\n\n                    that.dateView._calendar();\n\n                    if (that.timeView.ul.find(\"li\").length < 1) {\n                        that.timeView.bind();\n                    }\n\n                    // In some cases when the popup is opened resize is triggered which will cause it to close\n                    // Setting the below flag will prevent this from happening\n                    // Reference: https://github.com/telerik/kendo/pull/7553\n                    popupHovered = that.popup._hovered;\n                    that.popup._hovered = true;\n\n                    that.popup.open();\n\n                    if (view === \"time\") {\n                        that._switchToTimeView();\n                    } else {\n                        that._switchToDateView();\n                    }\n\n                    this._dateIcon.toggle(view !== \"time\");\n                    this._timeIcon.toggle(view === \"time\");\n\n                    setTimeout(function() {\n                        that.popup._hovered = popupHovered;\n                    }, 1);\n\n                } else {\n                    if (view !== \"time\") {\n                        view = \"date\";\n                    }\n\n                    this[view + \"View\"].open();\n                }\n            },\n\n            min: function(value) {\n                return this._option(\"min\", value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            toggle: function(view) {\n                if (this.options.singlePopup) {\n                    if (this.popup.visible()) {\n                        this.close();\n                    } else {\n                        this.open(view);\n                    }\n                } else {\n                    var secondView = \"timeView\";\n\n                    if (view !== \"time\") {\n                        view = \"date\";\n                    } else {\n                        secondView = \"dateView\";\n                    }\n\n                    this[view + \"View\"].toggle();\n                    this[secondView].close();\n                }\n\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._old = that._update(value);\n                if (that._old === null) {\n                    if (that._dateInput) {\n                        that._dateInput.value(that._old);\n                    } else {\n                        that.element.val(\"\");\n                    }\n                }\n\n                that._oldText = that.element.val();\n\n                if (that.label && that.label.floatingLabel) {\n                    that.label.floatingLabel.refresh();\n                }\n            },\n\n            _change: function(value) {\n                var that = this,\n                oldValue = that.element.val(),\n                dateChanged;\n\n                value = that._update(value);\n                dateChanged = +that._old != +value;\n\n                var valueUpdated = dateChanged && !that._typing;\n                var textFormatted = oldValue !== that.element.val();\n\n                if (valueUpdated || textFormatted) {\n                    that.element.trigger(CHANGE);\n                }\n\n                if (dateChanged) {\n                    that._old = value;\n                    that._oldText = that.element.val();\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _option: function(option, value) {\n                var that = this;\n                var options = that.options;\n                var timeView = that.timeView;\n                var timeViewOptions = timeView.options;\n                var current = that._value || that._old;\n                var minDateEqual;\n                var maxDateEqual;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = parse(value, options.parseFormats, options.culture);\n                timeViewOptions.maxSet = false;\n\n                if (!value) {\n                    return;\n                }\n\n                if (options.min.getTime() === options.max.getTime()) {\n                    timeViewOptions.dates = [];\n                }\n\n                options[option] = new DATE(value.getTime());\n                that.dateView[option](value);\n\n                that._midnight = that._calculateMidnight(options.min, options.max);\n\n                if (current) {\n                    minDateEqual = isEqualDatePart(options.min, current);\n                    maxDateEqual = isEqualDatePart(options.max, current);\n                }\n\n                if (minDateEqual || maxDateEqual) {\n                    timeViewOptions[option] = value;\n\n                    if (minDateEqual && !maxDateEqual) {\n                        timeViewOptions.max = lastTimeOption(options.interval);\n                    }\n\n                    if (maxDateEqual) {\n                        if (that._midnight) {\n                            timeView.dataBind([MAX]);\n                            return;\n                        } else if (!minDateEqual) {\n                            timeViewOptions.min = MIN;\n                            timeViewOptions.maxSet = true;\n                        }\n                    }\n                } else {\n                    timeViewOptions.max = MAX;\n                    timeViewOptions.min = MIN;\n                }\n\n                timeView.bind();\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    min = options.min,\n                    max = options.max,\n                    dates = options.dates,\n                    timeView = that.timeView,\n                    current = that._value,\n                    date = parse(value, options.parseFormats, options.culture),\n                    isSameType = (date === null && current === null) || (date instanceof Date && current instanceof Date),\n                    rebind, timeViewOptions, old, skip, formattedValue;\n\n                if (options.disableDates && options.disableDates(date)) {\n                    date = null;\n                    if (!that._old && !that.element.val()) {\n                        value = null;\n                    }\n                }\n\n                if (+date === +current && isSameType) {\n                    formattedValue = kendo.toString(date, options.format, options.culture);\n\n                    if (formattedValue !== value ) {\n                        that.element.val(date === null ? value : formattedValue);\n                        if (value instanceof String) {\n                            that.element.trigger(CHANGE);\n                        }\n                    }\n\n                    return date;\n                }\n\n                if (date !== null && isEqualDatePart(date, min)) {\n                    date = restrictValue(date, min, max);\n                } else if (!isInRange(date, min, max)) {\n                    date = null;\n                }\n\n                that._value = date;\n                timeView.value(date);\n                that.dateView.value(date);\n\n                if (date) {\n                    old = that._old;\n                    timeViewOptions = timeView.options;\n                    timeViewOptions.maxSet = false;\n\n                    if (dates[0]) {\n                        dates = $.grep(dates, function(d) { return isEqualDatePart(date, d); });\n\n                        if (dates[0]) {\n                            timeView.dataBind(dates);\n                            skip = true;\n                        }\n                    }\n\n                    if (!skip) {\n                        if (isEqualDatePart(date, min)) {\n                            timeViewOptions.min = min;\n                            timeViewOptions.max = lastTimeOption(options.interval);\n                            rebind = true;\n                        }\n\n                        if (isEqualDatePart(date, max)) {\n                            if (that._midnight) {\n                                timeView.dataBind([MAX]);\n                                skip = true;\n                            } else {\n                                timeViewOptions.max = max;\n                                timeViewOptions.maxSet = true;\n                                if (!rebind) {\n                                    timeViewOptions.min = MIN;\n                                }\n                                rebind = true;\n                            }\n                        }\n                    }\n\n                    if (!skip && ((!old && rebind) || (old && !isEqualDatePart(old, date)))) {\n                        if (!rebind) {\n                            timeViewOptions.max = MAX;\n                            timeViewOptions.min = MIN;\n                        }\n\n                        timeView.bind();\n                    }\n                }\n                if (that._dateInput) {\n                    if (date) {\n                        that._dateInput.value(date);\n                    }\n                } else {\n                    that.element.val(kendo.toString(date || value, options.format, options.culture));\n                }\n                that._updateARIA(date);\n\n                return date;\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    dateView = that.dateView,\n                    timeView = that.timeView,\n                    value = that.element.val(),\n                    isDateViewVisible = that.options.singlePopup ? that.popup.visible() : dateView.popup.visible();\n\n                var stopPropagation = that._dateInput && e.stopImmediatePropagation;\n\n                if (e.altKey && e.keyCode === kendo.keys.DOWN) {\n                    that.toggle(isDateViewVisible ? \"time\" : \"date\");\n                } else if (isDateViewVisible) {\n                    dateView.move(e);\n                    that._updateARIA(dateView._current);\n\n                    if (e.keyCode === kendo.keys.ENTER) {\n                        that.toggle(\"time\");\n                    }\n                } else if (!that.options.singlePopup && timeView.popup.visible()) {\n                    timeView.move(e);\n                } else if (e.keyCode === kendo.keys.ENTER && value !== that._oldText) {\n                    that._change(value);\n                } else {\n                    that._typing = true;\n                    stopPropagation = false;\n                }\n                if (stopPropagation) {\n                    e.stopImmediatePropagation();\n                }\n            },\n\n            _views: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    id = element.attr(\"id\"),\n                    dateView, timeView,\n                    div, ul, msMin,\n                    date,\n                    timeDiv,\n                    omitPopup,\n                    timeViewOptions;\n\n                if (options.singlePopup) {\n                    options.dateDiv = that.popup.element.find(\".k-datetime-calendar-wrap\");\n                    timeDiv = that.popup.element.find(\".k-datetime-time-wrap\");\n                    options.omitPopup = omitPopup = true;\n                    timeViewOptions = options.timeView;\n                }\n\n                that.dateView = dateView = new kendo.DateView(extend({}, options, {\n                    id: id,\n                    anchor: that.wrapper,\n                    change: function() {\n                        var value = that._applyDateValue();\n\n                        if (options.singlePopup) {\n                            if (!that.timeView._currentlySelected) {\n                                that.timeView._currentlySelected = new Date();\n                            }\n                            that.timeView._currentlySelected.setFullYear(value.getFullYear());\n                            that.timeView._currentlySelected.setMonth(value.getMonth());\n                            that.timeView._currentlySelected.setDate(value.getDate());\n                            that._switchToTimeView();\n                            that._toggleIcons();\n                        } else {\n                            that._change(value);\n                            that.close(\"date\");\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, false);\n                            div.attr(ARIA_HIDDEN, true);\n                        }\n                    },\n                    open: function(e) {\n                        if (that.trigger(OPEN, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n\n                                that.dateView[date ? \"current\" : \"value\"](date);\n                            }\n\n                            div.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true);\n\n                            that._updateARIA(date);\n                        }\n                    }\n                }));\n                div = dateView.div;\n\n                msMin = options.min.getTime();\n                that.timeView = timeView = new TimeView({\n                    id: id,\n                    value: options.value,\n                    size: options.size,\n                    anchor: that.wrapper,\n                    animation: options.animation,\n                    format: options.timeFormat,\n                    culture: options.culture,\n                    height: options.componentType === \"modern\" ? null : options.height,\n                    interval: options.interval,\n                    min: options.componentType === \"modern\" ? options.min : new DATE(MIN),\n                    max: options.componentType === \"modern\" ? options.max : new DATE(MAX),\n                    dates: msMin === options.max.getTime() ? [new Date(msMin)] : [],\n                    parseFormats: options.parseFormats,\n                    validateDate: true,\n                    change: function(value, trigger) {\n                        value = that._applyTimeValue(value);\n\n                        if (trigger) {\n                            that._timeSelected = true;\n                            that._change(value);\n                        } else {\n                            element.val(kendo.toString(value, options.format, options.culture));\n                            dateView.value(value);\n                            that._updateARIA(value);\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            ul.attr(ARIA_HIDDEN, true);\n                            element.attr(ARIA_EXPANDED, false);\n                        }\n                    },\n                    open: function(e) {\n                        if (that.options.componentType !== \"modern\") {\n                            timeView._adjustListWidth();\n                        } else {\n                            that.timeView._updateTitle();\n                        }\n\n                        if (that.trigger(OPEN, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n\n                                that.timeView.value(date);\n                            }\n\n                            ul.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true);\n\n                            timeView.options.active(timeView.current());\n                        }\n                    },\n                    active: function(current) {\n                        if (element && element.length) {\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                        if (current) {\n                            element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                        }\n                    },\n                    popup: options.popup,\n                    useValueToRender: true,\n                    specifiedRange: that._specifiedRange,\n                    omitPopup: omitPopup,\n                    timeDiv: timeDiv,\n                    timeView: timeViewOptions,\n                    messages: that.options.messages\n                });\n                ul = timeView.ul;\n            },\n\n            _applyDateValue: function() {\n                var that = this;\n                var options = that.options;\n                var dateView = that.dateView;\n                var value = dateView.calendar.value();\n                var msValue = +value;\n                var msMin = +options.min;\n                var msMax = +options.max;\n                var current, adjustedDate;\n\n                if (msValue === msMin || msValue === msMax) {\n                    current = msValue === msMin ? msMin : msMax;\n                    current = new DATE(that._value || current);\n                    current.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n\n                    if (isInRange(current, msMin, msMax)) {\n                        value = current;\n                    }\n                }\n\n                if (that._value) {\n\n                    adjustedDate = kendo.date.setHours(new Date(value), that._value);\n\n                    if (isInRange(adjustedDate, msMin, msMax)) {\n                        value = adjustedDate;\n                    }\n                }\n\n                return value;\n            },\n\n            _applyTimeValue: function(value) {\n                var timeView = this.timeView;\n                var options = this.options;\n\n                value = timeView._parse(value);\n\n                if (value < options.min) {\n                    value = new DATE(+options.min);\n                    timeView.options.min = value;\n                } else if (value > options.max) {\n                    value = new DATE(+options.max);\n                    timeView.options.max = value;\n                }\n\n                return value;\n            },\n\n            _icons: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var icons;\n\n                icons = that.wrapper.find(\"button.k-input-button\");\n\n                if (!icons[0]) {\n                    that._dateIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"' + options.dateButtonText + '\"></button>', {\n                        icon: \"calendar\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(element);\n                    that._timeIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"' + options.timeButtonText + '\"></button>', {\n                        icon: \"clock\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(element);\n                }\n\n                if (options.singlePopup) {\n                    that._timeIcon.hide();\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                element = that.element,\n                wrapper;\n\n                wrapper = element.parents(\".k-datetimepicker\");\n\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent();\n                }\n\n                wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    width: \"100%\",\n                    height: element[0].style.height\n                });\n\n                that.wrapper = wrapper.addClass(\"k-datetimepicker k-input\")\n                    .addClass(element[0].className).removeClass('input-validation-error');\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\"),\n                    options = that.options,\n                    disabledDate = options.disableDates,\n                    parseFormats = options.parseFormats.length ? options.parseFormats : null,\n                    optionsValue = that._initialOptions.value,\n                    initialValue = element[0].defaultValue;\n\n                if (optionsValue && (disabledDate && disabledDate(optionsValue))) {\n                    optionsValue = null;\n                }\n\n                if ((!initialValue || !kendo.parseDate(initialValue, parseFormats, options.culture)) && optionsValue) {\n                    element.attr(\"value\", kendo.toString(optionsValue, options.format, options.culture));\n                }\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        that.value(optionsValue || element[0].defaultValue);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _template: function() {\n                this._ariaTemplate = kendo.template(this.options.ARIATemplate).bind(this);\n            },\n\n            _createDateInput: function(options) {\n                if (this._dateInput) {\n                    this._dateInput.destroy();\n                    this._dateInput = null;\n                }\n\n                if (options.dateInput ) {\n                    this._dateInput = new ui.DateInput(this.element, {\n                        culture: options.culture,\n                        format: options.format,\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        rounded: options.rounded,\n                        min: options.min,\n                        max: options.max,\n                        interval: options.interval\n                    });\n                }\n            },\n\n            _calculateMidnight: function(min, max) {\n                return getMilliseconds(min) + getMilliseconds(max) === 0;\n            },\n\n            _updateARIA: function(date) {\n                var that = this;\n                var calendar = that.dateView.calendar;\n\n                if (that.element && that.element.length) {\n                    that.element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                }\n\n                if (calendar) {\n                    that.element.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n                }\n            },\n            _popup: function() {\n                var that = this;\n                var options = that.options;\n                var div = $(\"<div></div>\").attr(ARIA_HIDDEN, \"true\")\n                    .addClass(\"k-datetime-container k-group k-reset\")\n                    .appendTo(document.body);\n\n                div.append(kendo.template(SINGLE_POPUP_TEMPLATE)(extend({}, that.options, {\n                    buttonSize: kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size)\n                })));\n                that.popup = new ui.Popup(div, extend(options.popup, options, {\n                    name: \"Popup\",\n                    isRtl: kendo.support.isRtl(that.wrapper),\n                    anchor: that.wrapper,\n                    activate: function() {\n                        if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                            that.timeView.addTranslate();\n                            that.timeView.applyValue(that._value);\n                            that.timeView._updateRanges();\n                        }\n                    },\n                    open: function(e) {\n                        if (that.trigger(OPEN, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                            e.preventDefault();\n                        } else {\n                            this.element.attr(ARIA_HIDDEN, false);\n                            that.element.attr(ARIA_EXPANDED, true);\n                        }\n\n                        that.timeView._updateTitle();\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                            e.preventDefault();\n                        } else {\n                            that.element.attr(ARIA_EXPANDED, false);\n                            this.element.attr(ARIA_HIDDEN, true);\n                        }\n                    }\n                }));\n\n                div.on(CLICK + ns, \".k-datetime-buttongroup .k-button\", that._groupChangeClick.bind(that));\n                div.on(CLICK + ns, \".k-datetime-footer button.k-time-cancel\", that._cancelClickHandler.bind(that));\n                div.on(CLICK + ns, \".k-datetime-footer button.k-time-accept\", that._setClickHandler.bind(that));\n            },\n\n            _groupChangeClick: function(e) {\n                preventDefault(e);\n                var button = $(e.currentTarget);\n                var index = button.index();\n\n                if (index) {\n                    this._switchToTimeView();\n                } else {\n                    this._switchToDateView();\n                }\n                this._toggleIcons();\n            },\n\n            _switchToDateView: function() {\n                this.popup.element.find(\".k-group-start, .k-group-end\").removeClass(STATE_SELECTED).eq(0).addClass(STATE_SELECTED);\n                this.popup.element.find(\".k-datetime-wrap\").removeClass(\"k-time-tab\").addClass(\"k-date-tab\");\n            },\n\n            _switchToTimeView: function() {\n                this.timeView.addTranslate();\n                this.timeView.applyValue(this._value);\n                this.timeView._updateRanges();\n                this.popup.element.find(\".k-group-start, .k-group-end\").removeClass(STATE_SELECTED).eq(1).addClass(STATE_SELECTED);\n                this.popup.element.find(\".k-datetime-wrap\").removeClass(\"k-date-tab\").addClass(\"k-time-tab\");\n            },\n\n            _toggleIcons: function() {\n                this._dateIcon.toggle();\n                this._timeIcon.toggle();\n            },\n\n            _cancelClickHandler: function(e) {\n                preventDefault(e);\n                if (this._value) {\n                    this.value(this._value);\n                    this.dateView.value(this._value);\n                }\n                this.popup.close();\n            },\n\n            _setClickHandler: function(e) {\n                preventDefault(e);\n                var value = this._applyDateValue();\n                var time;\n\n                value = value || new Date();\n                time = this.timeView._currentlySelected || value;\n                this.timeView._updateCurrentlySelected();\n                value.setHours(time.getHours());\n                value.setMinutes(time.getMinutes());\n                value.setSeconds(time.getSeconds());\n                value = this._applyTimeValue(value);\n\n                this._change(value);\n                this.popup.close();\n            }\n        });\n\n        function lastTimeOption(interval) {\n            var date = new Date(2100, 0, 1);\n            date.setMinutes(-interval);\n            return date;\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n\n        function normalize(options) {\n            var patterns = kendo.getCulture(options.culture).calendars.standard.patterns,\n                parseFormats = !options.parseFormats.length,\n                timeFormat;\n\n            options.format = extractFormat(options.format || patterns.g);\n            options.timeFormat = timeFormat = extractFormat(options.timeFormat || patterns.t);\n            kendo.DateView.normalize(options);\n\n            if (parseFormats) {\n               options.parseFormats.unshift(\"yyyy-MM-ddTHH:mm:ss\");\n            }\n\n            if ($.inArray(timeFormat, options.parseFormats) === -1) {\n                options.parseFormats.push(timeFormat);\n            }\n        }\n\n        kendo.cssProperties.registerPrefix(\"DateTimePicker\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"DateTimePicker\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(DateTimePicker);\n\n    })(window.kendo.jQuery);\n\n}));\n"]}