{"version":3,"file":"kendo.badge.min.js","names":["factory","define","amd","undefined$1","kendo","Widget","ui","iconTemplate","svgIconTemplate","Badge","window","jQuery","extend","init","element","options","that","this","fn","call","_content","_appearance","notify","destroy","name","cutoutBorder","data","fillMode","icon","max","Infinity","position","align","rounded","roundings","small","medium","large","full","sizes","size","template","text","themeColor","visible","_classNames","_text","_template","bind","html","_themeColor","_shape","shape","_sizes","_size","_fillMode","_rounded","_roundings","_cutoutBorder","_align","_position","_visible","_updateClassNames","classNames","keepClassNames","sizeAbbr","roundedAbbr","removeClass","index","className","indexOf","push","split","length","replace","addClass","join","setOptions","arguments","toString","iconTemplateFunction","_icon","color","hide","show","plugin"],"sources":["kendo.badge.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"badge\",\n        name: \"Badge\",\n        category: \"web\", // suite\n        description: \"The Badge decorates avatars, navigation menus, or other components in the application when visual notification is needed\",\n        depends: [\"core\"] // dependencies\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo;\n        var Widget = kendo.ui.Widget;\n        var ui = kendo.ui;\n        var HIDDEN = 'k-hidden';\n\n        var iconTemplate = '<span class=\\'k-badge-icon k-icon k-i-#= icon #\\'></span>';\n        var svgIconTemplate = '<span class=\\'k-badge-icon k-svg-icon\\'>#= icon #</span>';\n\n        var Badge = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._content();\n\n                that._appearance();\n\n                kendo.notify(that);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n            },\n\n            options: {\n                name: 'Badge',\n                cutoutBorder: false,\n                data: {},\n                fillMode: 'solid',\n                icon: '',\n                max: Infinity,\n                position: 'inline',\n                align: '',\n                rounded: 'medium',\n                roundings: {\n                    'small': 'sm',\n                    'medium': 'md',\n                    'large': 'lg',\n                    'full': 'full'\n                },\n                sizes: {\n                    'small': 'sm',\n                    'medium': 'md',\n                    'large': 'lg'\n                },\n                size: 'medium',\n                template: null,\n                text: '',\n                themeColor: 'secondary',\n                visible: true,\n                _classNames: []\n            },\n\n            _content: function() {\n                var that = this;\n                var text = that.options.text;\n                var template = that.options.template;\n                var data = that.options.data;\n                var icon = that.options.icon;\n\n                // Order of precedence\n                // 1) template\n                // 2) icon\n                // 3) text\n                // 4) content\n\n                if (template !== null) {\n                    that._text = text;\n                    that._template = kendo.template(template).bind(that);\n                    that.element.html( that._template(data) );\n\n                    return;\n                }\n\n                if (icon !== '') {\n                    that.icon(icon);\n\n                    return;\n                }\n\n                if (text !== '') {\n                    that.text(text);\n\n                    return;\n                }\n\n                that.text(that.element.html());\n            },\n\n            _appearance: function() {\n                var that = this;\n                that._themeColor = that.options.themeColor;\n                that._shape = that.options.shape;\n                that._sizes = that.options.sizes;\n                that._size = that.options.size;\n                that._fillMode = that.options.fillMode;\n                that._rounded = that.options.rounded;\n                that._roundings = that.options.roundings;\n                that._cutoutBorder = that.options.cutoutBorder;\n                that._align = that.options.align;\n                that._position = that.options.position;\n                that._visible = that.options.visible;\n\n                that._updateClassNames();\n            },\n\n            _updateClassNames: function() {\n                var that = this;\n                var classNames = ['k-badge'];\n                var keepClassNames = that.options._classNames;\n                var themeColor = that._themeColor;\n                var shape = that._shape;\n                var sizes = that._sizes;\n                var size = that._size;\n                var sizeAbbr = sizes[size] === undefined$1 ? size : sizes[size];\n                var fillMode = that._fillMode;\n                var rounded = that._rounded;\n                var roundings = that._roundings;\n                var roundedAbbr = roundings[rounded] === undefined$1 ? rounded : roundings[rounded];\n                var cutoutBorder = that._cutoutBorder;\n                var align = that._align;\n                var position = that._position;\n                var visible = that._visible;\n\n                // Remove all class names\n                that.element.removeClass(function(index, className) {\n                    if (className.indexOf('k-') === 0 && keepClassNames.indexOf(className) === -1) {\n                        that.element.removeClass(className);\n                    }\n                });\n\n                // Fill\n                if (typeof fillMode === 'string' && fillMode !== '') {\n                    classNames.push('k-badge-' + fillMode);\n                }\n\n                // Color\n                if (typeof themeColor === 'string' && themeColor !== '') {\n                    classNames.push('k-badge-' + fillMode + '-' + themeColor);\n                }\n\n                // Size\n                if (typeof size === 'string' && size !== '') {\n                    classNames.push('k-badge-' + sizeAbbr);\n                }\n\n                // Rounded\n                if (typeof rounded === 'string' && rounded !== '') {\n                    classNames.push('k-rounded-' + roundedAbbr);\n                }\n\n                // Shape\n                if (typeof shape === 'string' && shape !== '') {\n                    classNames.push('k-badge-' + shape);\n                }\n\n                // Cutout border\n                if (typeof cutoutBorder === 'boolean' && cutoutBorder === true) {\n                    classNames.push('k-badge-border-cutout');\n                }\n\n                // Position\n                if (typeof position === 'string' && position !== '') {\n                    classNames.push('k-badge-' + position);\n                }\n\n                // Align\n                if (typeof position === 'string' && position !== '' && position !== 'inline' && typeof align === 'string' && align.split(' ').length == 2) {\n                    classNames.push('k-' + align.replace(' ', '-'));\n                }\n\n                // Visibility\n                if (visible === false) {\n                    classNames.push(HIDDEN);\n                }\n\n                // Apply classnames\n                that.element.addClass(classNames.join(' '));\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                that.element.removeClass(function(index, className) {\n                    if (className.indexOf('k-') >= 0) {\n                        that.element.removeClass(className);\n                    }\n                });\n\n                Widget.fn.setOptions.call(that, options);\n\n                that._content();\n\n                that._appearance();\n            },\n\n            text: function(text) {\n                var that = this;\n                var max = that.options.max;\n\n                // handle badge.text()\n                if (arguments.length === 0 || text === undefined$1) {\n                    return that._text;\n                }\n\n                that._text = text;\n\n                // handle badge.text(true|false|null)\n                if (text === true || text === false || text === null) {\n                    that.element.html('');\n\n                    return;\n                }\n\n                // handle badge.text('string')\n                if (typeof text === 'string') {\n                    that.element.html(text);\n\n                    return;\n                }\n\n                // handle badge.text(1)\n                if (typeof text === 'number') {\n                    if (text > max) {\n                        that.element.html(max + '+');\n                    } else {\n                        that.element.html(text);\n                    }\n\n                    return;\n                }\n\n                // handle other objects\n                if (typeof text === 'object' && 'toString' in text) {\n                    that.element.html(text.toString());\n\n                    return;\n                }\n\n            },\n\n            icon: function(icon) {\n                var that = this;\n                var iconTemplateFunction;\n\n                // handle badge.icon()\n                if (arguments.length === 0 || icon === undefined$1) {\n                    return that._icon;\n                }\n\n                that._icon = icon;\n\n                // Handle badge.icon(<SVG />)\n                if (icon.indexOf('<svg') === 0) {\n                    iconTemplateFunction = kendo.template(svgIconTemplate);\n                    that.element.html(iconTemplateFunction({ icon: icon }));\n\n                    return;\n                }\n\n                // Handle badge.icon(ICON_NAME)\n                iconTemplateFunction = kendo.template(iconTemplate);\n                that.element.html(iconTemplateFunction({ icon: icon }));\n            },\n\n            themeColor: function(color) {\n                var that = this;\n\n                // handle badge.color()\n                if (arguments.length === 0 || color === undefined$1) {\n                    return that._themeColor;\n                }\n\n                that._themeColor = color;\n                that._updateClassNames();\n            },\n\n            rounded: function(rounded) {\n                var that = this;\n\n                // handle badge.shape()\n                if (arguments.length === 0 || rounded === undefined$1) {\n                    return that._rounded;\n                }\n\n                that._rounded = rounded;\n                that._updateClassNames();\n            },\n\n            hide: function() {\n                var that = this;\n                that._visible = false;\n\n                that._updateClassNames();\n            },\n\n            show: function() {\n                var that = this;\n                that._visible = true;\n\n                that._updateClassNames();\n            }\n        });\n\n        ui.plugin(Badge);\n\n    })(window.kendo.jQuery);\n\n}));\n"]}